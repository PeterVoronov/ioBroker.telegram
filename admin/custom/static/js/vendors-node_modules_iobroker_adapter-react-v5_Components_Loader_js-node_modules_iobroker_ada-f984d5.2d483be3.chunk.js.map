{"version":3,"sources":["../node_modules/@iobroker/adapter-react-v5/Components/Loader.js","../node_modules/@iobroker/adapter-react-v5/Components/Router.js","../node_modules/@iobroker/adapter-react-v5/Components/SaveCloseButtons.js","../node_modules/@iobroker/adapter-react-v5/Components/Utils.js","../node_modules/@iobroker/adapter-react-v5/Connection.js","../node_modules/@iobroker/adapter-react-v5/Dialogs/Error.js","../node_modules/@iobroker/adapter-react-v5/Prompt.js","../node_modules/@iobroker/adapter-react-v5/Theme.js","../node_modules/@iobroker/adapter-react-v5/i18n.js","../node_modules/@mui/icons-material/Check.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/utils/createSvgIcon.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"names":["loaderStyles","Loader","props","window","document","getElementById","style","createElement","setAttribute","innerHTML","head","appendChild","size","theme","themeType","backgroundImage","loadingBackgroundImage","undefined","backgroundColor","loadingBackgroundColor","backgroundSize","loadingHideLogo","width","height","left","borderWidth","top","bottom","React","Component","propTypes","PropTypes","number","string","_export","Router","onHashChangedBound","onHashChanged","bind","addEventListener","removeEventListener","hash","location","replace","parts","split","map","item","decodeURIComponent","e","console","error","tab","dialog","id","arg","getLocation","styles","buttonIcon","marginRight","SaveCloseButtons","newReact","isIFrame","self","noTextOnButtons","buttonStyle","borderRadius","saveToolbar","button","paddingLeft","right","position","background","dense","minHeight","border","changed","onSave","classes","I18n","t","Object","assign","marginLeft","flexGrow","onClose","bool","object","isRequired","func","withStyles","NAMESPACE","days","months","QUALITY_BITS","SIGNATURES","JVBERi0","R0lGODdh","R0lGODlh","iVBORw0KGgo","PHN2Zw","Qk1","AAABAA","Utils","name","filter","word","toUpperCase","substring","toLowerCase","join","seconds","Math","floor","hours","minutes","text","objects","settings","options","isDesc","attr","language","common","sysLang","en","desc","de","ru","toString","pos","lastIndexOf","CapitalWords","trim","obj","noTrim","_id","forEnumId","hasOwnProperty","custom","user","subOrder","JSON","parse","stringify","order","subURLs","URLs","list","source","dest","result","Array","from","splice","removed","defaultEnabling","enabled","useCustom","icon","color","s","useCommon","length","startsWith","prefix","pathname","match","defaultValue","indexOf","slice","r","g","b","rgb","parseInt","parseFloat","isNaN","secs","angle","num","format","dateFormat","now","m","a","year","find","y","day","Date","abs","getTime","date","getDay","getDate","getMonth","key","p","push","href","target","rel","title","states","instanceId","noCommon","smartName","newSmartName","byON","smartType","getLanguage","nnn","_smartName","role","empty","nl","pl","it","fr","pt","es","el","value","body","select","execCommand","removeChild","log","stopPropagation","preventDefault","fileName","bytes","units","u","toFixed","invert","invertedColor","invertColor","hex","bw","padStart","warn","mix","k","str","isArray","_toVal","i","tmp","x","arguments","themeName","vendorPrefix","_localStorage","localStorage","getItem","matchMedia","matches","setItem","themes","getThemeNames","newTheme","setThemeName","query","forEach","part","f","pop","dateObj","mm","dd","getFullYear","v","getHours","getMinutes","getSeconds","getMilliseconds","round","d","h","url","open","extractHeader","header","lines","attrs","_header","line","doc","filename","json","encodeURIComponent","display","click","quality","ex","type","fetch","then","response","blob","Promise","resolve","reader","FileReader","onload","readAsDataURL","base64","signature","keys","PROGRESS","CONNECTING","CONNECTED","OBJECTS_LOADED","READY","PERMISSION_ERROR","NOT_CONNECTED","TIMEOUT_FOR_ADMIN4","ERRORS","adminUI","noConfig","config","jsonConfig","materialize","jsonCustom","supportCustoms","materializeTab","adminTab","debug","Connection","protocol","host","hostname","autoSubscribes","autoSubscribeLog","port","isWeb","ioTimeout","max","cmdTimeout","doNotLoadAllObjects","doNotLoadACL","acl","firstConnect","waitForRestart","systemLang","connected","_waitForFirstConnection","_waitForFirstConnectionResolve","statesSubscribes","objectsSubscribes","onProgress","onError","err","loaded","loadTimer","loadCounter","admin5only","onConnectionHandlers","onLogHandlers","_promises","info","silly","startSocket","io","registerSocketOnLoad","scriptLoadCounter","setTimeout","alert","_socket","path","socketUrl","includes","endsWith","connect","timeout","on","noTimeout","getVersion","version","major","minor","patch","_authTimer","onPreConnect","emit","isOk","isSecure","reload","_subscribe","cb","subscribed","authenticate","message","onLog","_err","operation","objectChange","state","stateChange","onCmdStdoutHandler","onCmdStderrHandler","exitCode","onCmdExitHandler","clearTimeout","onConnect","_getUserPermissions","getCompactSystemConfig","getSystemConfig","data","systemConfig","navigator","userLanguage","onLanguage","onReady","getObjects","search","binary","cbs","reg","RegExp","getBinaryState","oldObj","_rev","test","onObjectChange","task","disableProgressUpdate","reject","res","STATES_LOADED","val","update","isEnable","isEnabled","maintenance","ts","adapter","getObjectView","items","fixAdminUI","instances","adapters","objs","oldId","newId","setObject","delObject","_renameGroups","newName","getGroups","groups","groupsToRename","group","instance","command","handler","_enum","startkey","endkey","_res","rows","start","end","cert","getObject","certs","certificates","c","_cert","linesNumber","files","btoa","Uint8Array","reduce","byte","String","fromCharCode","oldName","folderName","hosts","users","timeoutMs","args","repo","installed","cmd","cmdId","feature","features","checkFeatureSupported","typeOfDiag","pattern","values","stepIgnore","sessionId","password","address","ipOrHostName","ip","IPs4","family","IPs6","hardware","networkInterfaces","eth","encryptedText","serverName","webName","entries","exists","category","notifications","isStrict","controller","AbortController","abort","signal","ratings","currentInstance","namespace","compactAdapters","compactInstances","installedCompact","systemConfigCommon","repoCompact","hostsCompact","uuid","level","adapterName","titleBackground","titleColor","DialogError","handleOk","root","oneOfType","element","prompt","printPrompt","step","substr","int","overlayColor","elevation","toInt","overlay","toHex","elevations","getElevation","buttonsPalette","palette","grey","main","dark","buttonsTheme","components","MuiButton","variants","variant","getContrastText","primary","borderColor","mode","action","disabledBackground","alpha","hoverOpacity","Theme","paper","secondary","expert","overrides","MuiAppBar","colorDefault","MuiLink","textTransform","transition","orange","MuiPaper","getElevations","disabled","toolbar","createTheme","adaptV4Theme","lang","words","translations","translation","w","_disableWarning","disable"],"mappings":"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","file":"static/js/vendors-node_modules_iobroker_adapter-react-v5_Components_Loader_js-node_modules_iobroker_ada-f984d5.2d483be3.chunk.js","sourcesContent":["/**\n * Copyright 2018-2022 bluefox <dogafox@gmail.com>\n *\n * MIT License\n *\n **/\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import './loader.css'\nconst loaderStyles = `\n/**\n * Copyright 2018-2022 bluefox <dogafox@gmail.com>\n *\n * MIT License\n *\n **/\n\n.logo-background-light, .logo-background-colored {\n    background: white;\n}\n.logo-background-dark, .logo-background-blue {\n    background: black;\n}\n.logo-div {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    -ms-transform: translateX(-50%) translateY(-50%);\n    -webkit-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    overflow: hidden;\n    border-radius: 50%;\n    z-index: 2;\n}\n.logo-border {\n    /*border-color: #164477;*/\n    border-top-color: #3399CC;\n    border-left-color: #164477;\n    border-bottom-color: #164477;\n    border-right-color: #164477;\n    border-radius: 50%;\n    border-style: solid;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n}\n.logo-top {\n    position: absolute;\n    width: 4.5%;\n    height: 16%;\n    top: 0;\n    z-index: 2;\n}\n.logo-i {\n    position: absolute;\n    width: 14.5%;\n    height: 60%;\n    top: 20%;\n    left: 42%;\n    background: #3399CC;\n}\n.logo-i-top {\n    position: absolute;\n    width: 14.5%;\n    height: 4%;\n    left: 42%;\n    background: #3399CC;\n    border-radius: 100%;\n}\n.logo-back {\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n    overflow: hidden;\n}\n@keyframes logo-grow {\n    0% {\n        width: 230px;\n        height: 230px;\n        transform: translate(-50%,-50%) scale(1);\n        opacity: 1\n    }\n    99% {\n        width: 230px;\n        height: 230px;\n        transform: translate(-50%,-50%) scale(10);\n        opacity: 0;\n    }\n    100% {\n        width: 0;\n        height: 0;\n        opacity: 0;\n    }\n}\n@keyframes logo-spin { 100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); } }\n@keyframes logo-color-inside-light {\n    0% {\n        background: #FEFEFE;\n    }\n    100% {\n        background: #3399CC;\n    }\n}\n@keyframes logo-color-inside-dark {\n    0% {\n        background: #030303;\n    }\n    100% {\n        background: #3399CC;\n    }\n}\n@keyframes logo-color-inside-colored {\n    0% {\n        background: #FEFEFE;\n    }\n    100% {\n        background: #3399CC;\n    }\n}\n@keyframes logo-color-inside-blue {\n    0% {\n        background: #030303;\n    }\n    100% {\n        background: #3399CC;\n    }\n}\n\n@keyframes logo-color-outside-light {\n    0% {\n        border-color: #FEFEFE;\n    }\n    100% {\n        border-top-color: #3399CC;\n        border-left-color: #164477;\n        border-bottom-color: #164477;\n        border-right-color: #164477;\n    }\n}\n@keyframes logo-color-outside-dark  {\n    0% {\n        border-color: #040404;\n    }\n    100% {\n        border-top-color: #3399CC;\n        border-left-color: #164477;\n        border-bottom-color: #164477;\n        border-right-color: #164477;\n    }\n}\n@keyframes logo-color-outside-colored {\n    0% {\n        border-color: #FEFEFE;\n    }\n    100% {\n        border-top-color: #3399CC;\n        border-left-color: #164477;\n        border-bottom-color: #164477;\n        border-right-color: #164477;\n    }\n}\n@keyframes logo-color-outside-blue  {\n    0% {\n        border-color: #040404;\n    }\n    100% {\n        border-top-color: #3399CC;\n        border-left-color: #164477;\n        border-bottom-color: #164477;\n        border-right-color: #164477;\n    }\n}\n\n.logo-animate-wait {\n    animation: logo-color-outside 1.5s, logo-spin 1.5s linear infinite;\n}\n\n.logo-animate-grow-light {\n    background: #DDD;\n}\n.logo-animate-grow-dark {\n    background: #1d1d1d;\n}\n.logo-animate-grow-colored {\n    background: #DDD;\n}\n.logo-animate-grow-blue {\n    background: #1d1d1d;\n}\n\n.logo-animate-grow {\n    display: inline-block;\n    text-align: center;\n    z-index: 1;\n    top: 50%;\n    left: 50%;\n    -ms-transform: translateX(-50%) translateY(-50%);\n    -webkit-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    width: 245px;\n    height: 245px;\n    border-radius: 50%;\n    position: absolute;\n    animation: logo-grow 1s 1 ease forwards;\n}\n\n.logo-animate-color-inside-light {\n    animation: logo-color-inside-light 2.5s;\n}\n.logo-animate-color-inside-dark {\n    animation: logo-color-inside-dark 2.5s;\n}\n.logo-animate-color-inside-colored {\n    animation: logo-color-inside-colored 2.5s;\n}\n.logo-animate-color-inside-blue {\n    animation: logo-color-inside-blue 2.5s;\n}\n\n.logo-animate-color-outside-light {\n    animation: logo-color-outside-light 1.5s;\n}\n.logo-animate-color-outside-dark {\n    animation: logo-color-outside-dark 1.5s;\n}\n.logo-animate-color-outside-colored {\n    animation: logo-color-outside-colored 1.5s;\n}\n.logo-animate-color-outside-blue {\n    animation: logo-color-outside-blue 1.5s;\n}\n`;\n\n/**\n * @typedef {object} LoaderProps\n * @property {string} [key] The key to identify this component.\n * @property {number} [size] The size in pixels of this loader.\n * @property {string} [themeType] The chosen theme type.\n * @property {string} [theme] The chosen theme.\n *\n * @extends {React.Component<LoaderProps>}\n */\nclass Loader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!window.document.getElementById('loader-iobroker-component')) {\n            const style = window.document.createElement('style');\n            style.setAttribute('id', 'loader-iobroker-component');\n            style.innerHTML = loaderStyles;\n            window.document.head.appendChild(style);\n        }\n    }\n\n    render() {\n        const size = this.props.size || 234;\n        const theme = this.props.themeType || this.props.theme || 'light';\n        return <div className={'logo-back logo-background-' + theme}\n            style={{\n                backgroundImage: window.loadingBackgroundImage && window.loadingBackgroundImage !== '@@loginBackgroundImage@@' ? 'url(' + window.loadingBackgroundImage + ')' : undefined,\n                backgroundColor: window.loadingBackgroundColor && window.loadingBackgroundColor !== '@@loginBackgroundColor@@' ? window.loadingBackgroundColor : undefined,\n                backgroundSize: 'cover',\n            }}\n        >\n            {window.loadingHideLogo === 'true' ?\n                null\n                :\n                <>\n                    <div className=\"logo-div\" style={{ width: size, height: size }}>\n                        <div className={'logo-top logo-background-' + theme} style={{ left: '37%' }}/>\n                        <div className={'logo-top logo-background-' + theme} style={{ left: '57%' }}/>\n                        <div\n                            className={`logo-border logo-background-${theme} logo-animate-wait`}\n                            style={{ borderWidth: size * 0.132 }}\n                        />\n                        <div className={'logo-i logo-animate-color-inside-' + theme}/>\n                        <div className={'logo-i-top logo-animate-color-inside-' + theme} style={{ top: '18%' }}/>\n                        <div className={'logo-i-top logo-animate-color-inside-' + theme} style={{ bottom: '18%' }}/>\n                    </div>\n                    <div className={'logo-animate-grow logo-animate-grow-' + theme}\n                    style={{ width: size + 11, height: size + 11 }}\n                    />\n                </>\n            }\n        </div>;\n    }\n}\n\nLoader.propTypes = {\n    size: PropTypes.number,\n    themeType: PropTypes.string\n};\n\n/** @type {typeof Loader} */\nconst _export = Loader;\nexport default _export;","// please do not delete React, as without it other projects could not be compiled: ReferenceError: React is not defined\nimport React from 'react';\n\n/**\n * @template P Type of the properties object.\n * @template S Type of the internal state object.\n * @extends {React.Component<P, S>}\n */\nclass Router extends React.Component {\n    /**\n     * @param {P} props The React properties of this component.\n     */\n    constructor(props) {\n        super(props);\n        this.onHashChangedBound = this.onHashChanged.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener('hashchange', this.onHashChangedBound);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('hashchange', this.onHashChangedBound);\n    }\n\n    onHashChanged() {\n        // override this function\n    }\n\n    /**\n     * Gets the location object.\n     * @returns {{ tab: string; dialog: string; id: string; arg: string; }}\n     */\n    static getLocation() {\n        let hash = window.location.hash;\n        hash = hash.replace(/^#/, '');\n        const parts = hash.split('/').map(item => {\n            try {\n                return item ? decodeURIComponent(item) : ''\n            } catch (e) {\n                console.error('Router: Cannot decode ' + item);\n                return item || '';\n            }\n        });\n        // #tabName/dialogName/deviceId\n        return {\n            tab:    parts[0] || '',\n            dialog: parts[1] || '',\n            id:     parts[2] || '',\n            arg:    parts[3] || ''\n        };\n    }\n\n    /**\n     * Navigate to a new location. Any parameters that are not set will be taken from the current location.\n     * @param {string | undefined} [tab]\n     * @param {string | undefined} [dialog]\n     * @param {string | undefined} [id]\n     * @param {string | undefined} [arg]\n     */\n    static doNavigate(tab, dialog, id, arg) {\n        let hash = '';\n        const location = Router.getLocation();\n        if (arg !== undefined && !id) {\n            id = location.id;\n        }\n        if (id && !dialog) {\n            dialog = location.dialog;\n        }\n        if (dialog && !tab) {\n            tab = location.tab;\n        } else\n        if (tab === null) {\n            tab = location.tab;\n        }\n\n        if (tab) {\n            hash = '#' + tab;\n            if (dialog) {\n                hash += '/' + dialog;\n\n                if (id) {\n                    hash += '/' + id;\n                    if (arg !== undefined) {\n                        hash += '/' + arg;\n                    }\n                }\n            }\n        }\n        if (window.location.hash !== hash) {\n            window.location.hash = hash;\n        }\n    }\n}\n\nexport default Router;","// please do not delete React, as without it other projects could not be compiled: ReferenceError: React is not defined\nimport React from 'react';\nimport withStyles from '@mui/styles/withStyles';\nimport Fab from '@mui/material/Fab';\nimport PropTypes from 'prop-types';\n\nimport Toolbar from '@mui/material/Toolbar';\n\nimport I18n from '../i18n';\n\nimport IconSave from '@mui/icons-material/Save';\nimport IconClose from '@mui/icons-material/Close';\n\nconst styles = theme => ({\n    buttonIcon: {\n        marginRight: 8\n    },\n});\n\n/**\n * @typedef {object} SaveCloseButtonsProps\n * @property {boolean} noTextOnButtons Are the buttons without text\n * @property {any} theme Theme object (from this.state.theme)\n * @property {boolean} isIFrame bottom position 0 or 38 for iFrame\n * @property {boolean} newReact is used in new react\n * @property {function} onSave on Save handler\n * @property {function} onClose on Close handler\n *\n * @extends {React.Component<SaveCloseButtonsProps>}\n */\nclass SaveCloseButtons extends React.Component {\n    /**\n     * @param {SaveCloseButtonsProps} props\n     */\n    constructor(props) {\n        super(props);\n        const newReact = props.newReact === undefined ? true : props.newReact;\n\n        try {\n            this.isIFrame = !newReact && window.self !== window.top;\n        } catch (e) {\n            this.isIFrame = !newReact;\n        }\n    }\n\n    render() {\n        const noTextOnButtons = this.props.noTextOnButtons;\n        const buttonStyle = {\n            borderRadius: this.props.theme.saveToolbar.button.borderRadius || 3,\n            height:       this.props.theme.saveToolbar.button.height       || 32,\n        };\n\n        const style = {\n            bottom: this.isIFrame ? 38 : 0,\n            left: this.props.paddingLeft || 0,\n            right: 0,\n            position: 'absolute',\n            background: this.props.theme.saveToolbar.background\n        };\n        if (this.props.dense) {\n            style.minHeight = 48;\n        }\n\n        if (this.props.error) {\n            buttonStyle.border = '1px solid red';\n        }\n\n        return <Toolbar position=\"absolute\" style={style}>\n            <Fab\n                variant=\"extended\"\n                aria-label=\"Save\"\n                disabled={!this.props.changed || this.props.error}\n                onClick={() => this.props.onSave(false)}\n                style={buttonStyle}\n            >\n                <IconSave className={!noTextOnButtons ? this.props.classes.buttonIcon : ''}/>{!noTextOnButtons && I18n.t('ra_Save')}\n            </Fab>\n            <Fab\n                variant=\"extended\"\n                aria-label=\"Save and close\"\n                disabled={!this.props.changed || this.props.error}\n                onClick={() => this.props.onSave(true)}\n                style={Object.assign({}, buttonStyle, {marginLeft: 10})}>\n                <IconSave className={!noTextOnButtons ? this.props.classes.buttonIcon : ''}/>\n                {!noTextOnButtons ? I18n.t('ra_Save and close') : '+'}\n                {noTextOnButtons && <IconClose/>}\n            </Fab>\n            <div style={{flexGrow: 1}}/>\n            <Fab variant=\"extended\" aria-label=\"Close\" onClick={() => this.props.onClose()} style={buttonStyle}>\n                <IconClose className={!noTextOnButtons ? this.props.classes.buttonIcon : ''}/>{!noTextOnButtons && I18n.t('ra_Close')}\n            </Fab>\n        </Toolbar>;\n    }\n}\n\nSaveCloseButtons.propTypes = {\n    dense: PropTypes.bool,\n    paddingLeft: PropTypes.number,\n    noTextOnButtons: PropTypes.bool,\n    theme: PropTypes.object,\n    isIFrame: PropTypes.bool,\n    changed: PropTypes.bool.isRequired,\n    error: PropTypes.bool,\n    onSave: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    newReact: PropTypes.bool,\n};\n\n/** @type {typeof SaveCloseButtons} */\nconst _export = withStyles(styles)(SaveCloseButtons);\nexport default _export;","/**\n * Copyright 2018-2022 bluefox <dogafox@gmail.com>\n *\n * MIT License\n *\n **/\nimport React from 'react';\nimport I18n from '../i18n';\n\nconst NAMESPACE    = 'material';\nconst days         = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\nconst months       = ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst QUALITY_BITS = {\n    0x00: '0x00 - good',\n\n    0x01: '0x01 - general problem',\n    0x02: '0x02 - no connection problem',\n\n    0x10: '0x10 - substitute value from controller',\n    0x20: '0x20 - substitute initial value',\n    0x40: '0x40 - substitute value from device or instance',\n    0x80: '0x80 - substitute value from sensor',\n\n    0x11: '0x11 - general problem by instance',\n    0x41: '0x41 - general problem by device',\n    0x81: '0x81 - general problem by sensor',\n\n    0x12: '0x12 - instance not connected',\n    0x42: '0x42 - device not connected',\n    0x82: '0x82 - sensor not connected',\n\n    0x44: '0x44 - device reports error',\n    0x84: '0x84 - sensor reports error',\n};\nconst SIGNATURES = {\n    JVBERi0: 'pdf',\n    R0lGODdh: 'gif',\n    R0lGODlh: 'gif',\n    iVBORw0KGgo: 'png',\n    '/9j/': 'jpg',\n    PHN2Zw: 'svg',\n    Qk1: 'bmp',\n    AAABAA: 'ico' // 00 00 01 00 according to https://en.wikipedia.org/wiki/List_of_file_signatures\n};\n\nclass Utils {\n    static namespace = NAMESPACE;\n    static INSTANCES = 'instances';\n    static dateFormat = ['DD', 'MM'];\n    static FORBIDDEN_CHARS = /[^._\\-/ :!#$%&()+=@^{}|~\\p{Ll}\\p{Lu}\\p{Nd}]+/gu;\n\n    /**\n     * Capitalize words.\n     * @param {string | undefined} name\n     * @returns {string}\n     */\n    static CapitalWords(name) {\n        return (name || '').split(/[\\s_]/)\n            .filter(item => item)\n            .map(word => word ? word[0].toUpperCase() + word.substring(1).toLowerCase() : '')\n            .join(' ');\n    }\n\n    static formatSeconds(seconds) {\n        const days = Math.floor(seconds / (3600 * 24));\n        seconds %= 3600 * 24;\n        let hours = Math.floor(seconds / 3600);\n        if (hours < 10) {\n            hours = '0' + hours;\n        }\n        seconds %= 3600;\n        let minutes = Math.floor(seconds / 60);\n        if (minutes < 10) {\n            minutes = '0' + minutes;\n        }\n        seconds %= 60;\n        seconds = Math.floor(seconds);\n        if (seconds < 10) {\n            seconds = '0' + seconds;\n        }\n        let text = '';\n        if (days) {\n            text += `${days} ${I18n.t('ra_daysShortText')} `;\n        }\n        text += `${hours}:${minutes}:${seconds}`;\n\n        return text;\n    }\n\n    /**\n     * Get the name of the object by id from the name or description.\n     * @param {Record<string, ioBroker.Object>} objects\n     * @param {string} id\n     * @param {{ name: any; } | ioBroker.Languages | null} settings\n     * @param {{ language?: ioBroker.Languages; }} options\n     * @param {boolean} [isDesc] Set to true to get the description.\n     * @returns {string}\n     */\n    static getObjectName(objects, id, settings, options, isDesc) {\n        let item = objects[id];\n        let text = id;\n        const attr = isDesc ? 'desc' : 'name';\n\n        if (typeof settings === 'string' && !options) {\n            options = {language: settings};\n            settings = null;\n        }\n\n        options = options || {};\n        if (!options.language) {\n            options.language = (objects['system.config'] && objects['system.config'].common && objects['system.config'].common.language) || window.sysLang || 'en';\n        }\n        if (settings && settings.name) {\n            text = settings.name;\n            if (typeof text === 'object') {\n                text = text[options.language] || text.en;\n            }\n        } else\n        if (item && item.common && item.common[attr]) {\n            text = item.common[attr];\n            if (attr !== 'desc' && !text && item.common.desc) {\n                text = item.common.desc;\n            }\n            if (typeof text === 'object') {\n                text = text[options.language] || text.en || text.de || text.ru || '';\n            }\n            text = (text || '').toString().replace(/[_.]/g, ' ');\n\n            if (text === text.toUpperCase()) {\n                text = text[0] + text.substring(1).toLowerCase();\n            }\n        } else {\n            let pos = id.lastIndexOf('.');\n            text = id.substring(pos + 1).replace(/[_.]/g, ' ');\n            text = Utils.CapitalWords(text);\n        }\n\n        return text.trim();\n    }\n\n    /**\n     * Get the name of the object from the name or description.\n     * @param {ioBroker.PartialObject} obj\n     * @param {{ name: any; } | ioBroker.Languages | null } settings or language\n     * @param {{ language?: ioBroker.Languages; } } options\n     * @param {boolean} [isDesc] Set to true to get the description.\n     * @param {boolean} [noTrim] Allow to use spaces in name (by edit)\n     * @returns {string}\n     */\n    static getObjectNameFromObj(obj, settings, options, isDesc, noTrim) {\n        let item = obj;\n        let text = (obj && obj._id) || '';\n        const attr = isDesc ? 'desc' : 'name';\n\n        if (typeof settings === 'string' && !options) {\n            options = {language: settings};\n            settings = null;\n        }\n\n        options = options || {};\n\n        if (settings && settings.name) {\n            text = settings.name;\n            if (typeof text === 'object') {\n                text = text[options.language] || text.en;\n            }\n        } else\n        if (item && item.common && item.common[attr]) {\n            text = item.common[attr];\n            if (attr !== 'desc' && !text && item.common.desc) {\n                text = item.common.desc;\n            }\n            if (typeof text === 'object') {\n                text = text[options.language] || text.en;\n            }\n            text = (text || '').toString().replace(/[_.]/g, ' ');\n\n            if (text === text.toUpperCase()) {\n                text = text[0] + text.substring(1).toLowerCase();\n            }\n        }\n        return noTrim ? text : text.trim();\n    }\n\n    /**\n     * @param {ioBroker.PartialObject | ioBroker.ObjectCommon} obj\n     * @param {string} forEnumId\n     * @param {{ user: string; }} options\n     * @returns {string | null}\n     */\n    static getSettingsOrder(obj, forEnumId, options) {\n        if (obj && obj.hasOwnProperty('common')) {\n            obj = obj.common;\n        }\n        let settings;\n        if (obj && obj.custom) {\n            settings = (obj.custom || {})[NAMESPACE];\n            const user = options.user || 'admin';\n            if (settings && settings[user]) {\n                if (forEnumId) {\n                    if (settings[user].subOrder && settings[user].subOrder[forEnumId]) {\n                        return JSON.parse(JSON.stringify(settings[user].subOrder[forEnumId]));\n                    }\n                } else {\n                    if (settings[user].order) {\n                        return JSON.parse(JSON.stringify(settings[user].order));\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @param {ioBroker.PartialObject | ioBroker.ObjectCommon} obj\n     * @param {string} forEnumId\n     * @param {{ user: string; }} options\n     */\n    static getSettingsCustomURLs(obj, forEnumId, options) {\n        if (obj && obj.hasOwnProperty('common')) {\n            obj = obj.common;\n        }\n        let settings;\n        if (obj && obj.custom) {\n            settings = (obj.custom || {})[NAMESPACE];\n            const user = options.user || 'admin';\n            if (settings && settings[user]) {\n                if (forEnumId) {\n                    if (settings[user].subURLs && settings[user].subURLs[forEnumId]) {\n                        return JSON.parse(JSON.stringify(settings[user].subURLs[forEnumId]));\n                    }\n                } else {\n                    if (settings[user].URLs) {\n                        return JSON.parse(JSON.stringify(settings[user].URLs));\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Reorder the array items in list between source and dest.\n     * @param {Iterable<any> | ArrayLike<any>} list\n     * @param {number} source\n     * @param {number} dest\n     */\n    static reorder(list, source, dest) {\n        const result = Array.from(list);\n        const [removed] = result.splice(source, 1);\n        result.splice(dest, 0, removed);\n        return result;\n    };\n\n    /**\n     * @param {any} obj\n     * @param {{ id: any; user: any; name: any; icon: any; color: any; language: ioBroker.Languages; }} options\n     * @param {boolean} [defaultEnabling]\n     */\n    static getSettings(obj, options, defaultEnabling) {\n        let settings;\n        const id = (obj && obj._id) || (options && options.id);\n        if (obj && obj.hasOwnProperty('common')) {\n            obj = obj.common;\n        }\n        if (obj && obj.custom) {\n            settings = obj.custom || {};\n            settings = settings[NAMESPACE] && settings[NAMESPACE][options.user || 'admin'] ? JSON.parse(JSON.stringify(settings[NAMESPACE][options.user || 'admin'])) : {enabled: true};\n        } else {\n            settings = {enabled: defaultEnabling === undefined ? true : defaultEnabling, useCustom: false};\n        }\n\n        if (!settings.hasOwnProperty('enabled')) {\n            settings.enabled = defaultEnabling === undefined ? true : defaultEnabling;\n        }\n\n        if (false && settings.useCommon) {\n            if (obj.color) settings.color = obj.color;\n            if (obj.icon)  settings.icon  = obj.icon;\n            if (obj.name)  settings.name  = obj.name;\n        } else {\n            if (options) {\n                if (!settings.name  && options.name)  settings.name  = options.name;\n                if (!settings.icon  && options.icon)  settings.icon  = options.icon;\n                if (!settings.color && options.color) settings.color = options.color;\n            }\n\n            if (obj) {\n                if (!settings.color && obj.color) settings.color = obj.color;\n                if (!settings.icon  && obj.icon)  settings.icon  = obj.icon;\n                if (!settings.name  && obj.name)  settings.name  = obj.name;\n            }\n        }\n\n        if (typeof settings.name === 'object') {\n            settings.name = settings.name[options.language] || settings.name.en;\n\n            settings.name = (settings.name || '').toString().replace(/_/g, ' ');\n\n            if (settings.name === settings.name.toUpperCase()) {\n                settings.name = settings.name[0] + settings.name.substring(1).toLowerCase();\n            }\n        }\n        if (!settings.name && id) {\n            let pos = id.lastIndexOf('.');\n            settings.name = id.substring(pos + 1).replace(/[_.]/g, ' ');\n            settings.name = (settings.name || '').toString().replace(/_/g, ' ');\n            settings.name = Utils.CapitalWords(settings.name);\n        }\n\n        return settings;\n    }\n\n    /**\n     * @param {any} obj\n     * @param {any} settings\n     * @param {{ user: any; language: ioBroker.Languages; }} options\n     */\n    static setSettings(obj, settings, options) {\n        if (obj) {\n            obj.common = obj.common || {};\n            obj.common.custom = obj.common.custom || {};\n            obj.common.custom[NAMESPACE] = obj.common.custom[NAMESPACE] || {};\n            obj.common.custom[NAMESPACE][options.user || 'admin'] = settings;\n            const s = obj.common.custom[NAMESPACE][options.user || 'admin'];\n            if (s.useCommon) {\n                if (s.color !== undefined) {\n                    obj.common.color = s.color;\n                    delete s.color;\n                }\n                if (s.icon !== undefined) {\n                    obj.common.icon = s.icon;\n                    delete s.icon;\n                }\n                if (s.name !== undefined) {\n                    if (typeof obj.common.name !== 'object') {\n                        obj.common.name = {};\n                        obj.common.name[options.language] = s.name;\n                    } else{\n                        obj.common.name[options.language] = s.name;\n                    }\n                    delete s.name;\n                }\n            }\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Get the icon for the given settings.\n     * @param {{ icon: string | undefined; name: string | undefined; prefix: string | undefined}} settings\n     * @param {any} style\n     * @returns {JSX.Element | null}\n     */\n    static getIcon(settings, style) {\n        if (settings && settings.icon) {\n            // If UTF-8 icon\n            if (settings.icon.length <= 2) {\n                return <span style={style || {}}>{settings.icon}</span>;\n            } else\n            if (settings.icon.startsWith('data:image')) {\n                return <img alt={settings.name} src={settings.icon} style={style || {}}/>;\n            } else { // may be later some changes for second type\n                return <img alt={settings.name} src={(settings.prefix || '') + settings.icon} style={style || {}}/>;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Get the icon for the given object.\n     * @param {string} id\n     * @param {{ common: { icon: any; }; }} obj\n     * @returns {string | null}\n     */\n    static getObjectIcon(id, obj) {\n        // If id is Object\n        if (typeof id === 'object') {\n            obj = id;\n            id = obj._id;\n        }\n\n        if (obj && obj.common && obj.common.icon) {\n            let icon = obj.common.icon;\n            // If UTF-8 icon\n            if (typeof icon === 'string' && icon.length <= 2) {\n                return icon;\n            } else\n            if (icon.startsWith('data:image')) {\n                return icon;\n            } else {\n                const parts = id.split('.');\n                if (parts[0] === 'system') {\n                    icon = 'adapter/' + parts[2] + (icon.startsWith('/') ? '' : '/') + icon;\n                } else {\n                    icon = 'adapter/' + parts[0] + (icon.startsWith('/') ? '' : '/') + icon;\n                }\n\n                if (window.location.pathname.match(/adapter\\/[^/]+\\/[^/]+\\.html/)) {\n                    icon = '../../' + icon;\n                } else if (window.location.pathname.match(/material\\/[.\\d]+/)) {\n                    icon = '../../' + icon;\n                } else\n                if (window.location.pathname.match(/material\\//)) {\n                    icon = '../' + icon;\n                }\n                return icon;\n            }\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Splits CamelCase into words.\n     * @param {string | undefined} text\n     * @returns {string}\n     */\n    static splitCamelCase(text) {\n        if (false && text !== text.toUpperCase()) {\n            const words = text.split(/\\s+/);\n            for (let i = 0; i < words.length; i++) {\n                let word = words[i];\n                if (word.toLowerCase() !== word && word.toUpperCase() !== word) {\n                    let z = 0;\n                    const ww = [];\n                    let start = 0;\n                    while (z < word.length) {\n                        if (word[z].match(/[A-ZÜÄÖА-Я]/)) {\n                            ww.push(word.substring(start, z));\n                            start = z;\n                        }\n                        z++;\n                    }\n                    if (start !== z) {\n                        ww.push(word.substring(start, z));\n                    }\n                    for (let k = 0; k < ww.length; k++) {\n                        words.splice(i + k, 0, ww[k]);\n                    }\n                    i += ww.length;\n                }\n            }\n\n            return words.map(w => {\n                w = w.trim();\n                if (w) {\n                    return w[0].toUpperCase() + w.substring(1).toLowerCase();\n                }\n                return '';\n            }).join(' ');\n        } else {\n            return Utils.CapitalWords(text);\n        }\n    }\n\n    /**\n     * Check if the given color is bright.\n     * https://stackoverflow.com/questions/35969656/how-can-i-generate-the-opposite-color-according-to-current-color\n     * @param {string | null | undefined} color\n     * @param {boolean} [defaultValue]\n     * @returns {boolean}\n     */\n    static isUseBright(color, defaultValue) {\n        if (color === null || color === undefined || color === '') {\n            return defaultValue === undefined ? true : defaultValue;\n        }\n        color = color.toString();\n        if (color.indexOf('#') === 0) {\n            color = color.slice(1);\n        }\n        let r;\n        let g;\n        let b;\n\n        const rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n        if (rgb && rgb.length === 4) {\n            r = parseInt(rgb[1], 10);\n            g = parseInt(rgb[2], 10);\n            b = parseInt(rgb[3], 10);\n        } else {\n            // convert 3-digit hex to 6-digits.\n            if (color.length === 3) {\n                color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n            }\n            if (color.length !== 6) {\n                return false;\n            }\n\n            r = parseInt(color.slice(0, 2), 16);\n            g = parseInt(color.slice(2, 4), 16);\n            b = parseInt(color.slice(4, 6), 16);\n        }\n\n        // http://stackoverflow.com/a/3943023/112731\n        return (r * 0.299 + g * 0.587 + b * 0.114) <= 186;\n    };\n\n    /**\n     * Get the time string in the format 00:00.\n     * @param {string | number} seconds\n     */\n    static getTimeString(seconds) {\n        seconds = parseFloat(seconds);\n        if (isNaN(seconds)) {\n            return '--:--';\n        }\n        const hours = Math.floor(seconds / 3600);\n        let minutes = Math.floor((seconds % 3600) / 60);\n        let secs = seconds % 60;\n        if (hours) {\n            if (minutes < 10) minutes = '0' + minutes;\n            if (secs < 10) secs = '0' + secs;\n            return hours + ':' + minutes + ':' + secs;\n        } else {\n            if (secs < 10) secs = '0' + secs;\n            return minutes + ':' + secs;\n        }\n    }\n\n    /**\n     * Gets the wind direction with the given angle (degrees).\n     * @param {number} angle in degrees.\n     * @returns {string | undefined}\n     */\n    static getWindDirection(angle) {\n        if (angle >= 0 && angle < 11.25) {\n            return 'N'\n        } else if (angle >= 11.25 && angle < 33.75) {\n            return 'NNE'\n        } else if (angle >= 33.75 && angle < 56.25) {\n            return 'NE'\n        } else if (angle >= 56.25 && angle < 78.75) {\n            return 'ENE'\n        } else if (angle >= 78.75 && angle < 101.25) {\n            return 'E'\n        } else if (angle >= 101.25 && angle < 123.75) {\n            return 'ESE'\n        } else if (angle >= 123.75 && angle < 146.25) {\n            return 'SE'\n        } else if (angle >= 146.25 && angle < 168.75) {\n            return 'SSE'\n        } else if (angle >= 168.75 && angle < 191.25) {\n            return 'S'\n        } else if (angle >= 191.25 && angle < 213.75) {\n            return 'SSW'\n        } else if (angle >= 213.75 && angle < 236.25) {\n            return 'SW'\n        } else if (angle >= 236.25 && angle < 258.75) {\n            return 'WSW'\n        } else if (angle >= 258.75 && angle < 281.25) {\n            return 'W'\n        } else if (angle >= 281.25 && angle < 303.75) {\n            return 'WNW'\n        } else if (angle >= 303.75 && angle < 326.25) {\n            return 'NW'\n        } else if (angle >= 326.25 && angle < 348.75) {\n            return 'NNW'\n        } else if (angle >= 348.75) {\n            return 'N'\n        }\n    }\n\n    /**\n     * Pad the given number with a zero if its not 2 digits long.\n     * @param {string | number} num\n     */\n    static padding(num) {\n        if (typeof num === 'string') {\n            if (num.length < 2) {\n                return '0' + num;\n            } else {\n                return num;\n            }\n        } else if (num < 10) {\n            return '0' + num;\n        } else {\n            return num;\n        }\n    }\n\n    /**\n     * Sets the date format.\n     * @param {string} format\n     */\n    static setDataFormat(format) {\n        if (format) {\n            Utils.dateFormat = format.toUpperCase().split(/[.-/]/);\n            Utils.dateFormat.splice(Utils.dateFormat.indexOf('YYYY'), 1);\n        }\n    }\n\n    /**\n     * Converts the date to a string.\n     * @param {string | number | Date} now\n     * @returns {string}\n     */\n    static date2string(now) {\n        if (typeof now === 'string') {\n            now = now.trim();\n            if (!now) return '';\n            // only letters\n            if (now.match(/^[\\w\\s]+$/)) {\n                // Day of week\n                return now;\n            }\n            let m = now.match(/(\\d{1,4})[-./](\\d{1,2})[-./](\\d{1,4})/);\n            if (m) {\n                let a = [parseInt(m[1], 10), parseInt(m[2], 10), parseInt(m[3], 10)];\n                let year = a.find(y => y > 31);\n                a.splice(a.indexOf(year), 1);\n                let day = a.find(m => m > 12);\n                if (day) {\n                    a.splice(a.indexOf(day), 1);\n                    now = new Date(year, a[0] - 1, day);\n                } else {\n                    // MM DD\n                    if (Utils.dateFormat[0][0] === 'M' && Utils.dateFormat[1][0] === 'D') {\n                        now = new Date(year, a[0] - 1, a[1]);\n                        if (Math.abs(now.getTime - Date.now()) > 3600000 * 24 * 10) {\n                            now = new Date(year, a[1] - 1, a[0]);\n                        }\n                    } else\n                    // DD MM\n                    if (Utils.dateFormat[0][0] === 'D' && Utils.dateFormat[1][0] === 'M') {\n                        now = new Date(year, a[1] - 1, a[0]);\n                        if (Math.abs(now.getTime - Date.now()) > 3600000 * 24 * 10) {\n                            now = new Date(year, a[0] - 1, a[1]);\n                        }\n                    } else {\n                        now = new Date(now);\n                    }\n                }\n            } else {\n                now = new Date(now);\n            }\n        } else {\n            now = new Date(now);\n        }\n\n        let date = I18n.t('ra_dow_' + days[now.getDay()]).replace('ra_dow_', '');\n        date += '. ' + now.getDate() + ' ' + I18n.t('ra_month_' + months[now.getMonth()]).replace('ra_month_', '');\n        return date;\n    }\n\n    /**\n     * Render a text as a link.\n     * @param {string} text\n     * @returns {string | JSX.Element[]}\n     */\n    static renderTextWithA(text) {\n        let m = text.match(/<a [^<]+<\\/a>|<br\\/?>/);\n        if (m) {\n            const result = [];\n            let key = 1;\n            do {\n                const p = text.split(m[0]);\n                p[0] && result.push(<span key={'a' + (key++)}>{p[0]}</span>);\n\n                if (m[0].startsWith('<br')) {\n                    result.push(<br key={'a' + (key++)} />);\n                } else {\n                    let href = m[0].match(/href=\"([^\"]+)\"/) || m[0].match(/href='([^']+)'/);\n                    let target = m[0].match(/target=\"([^\"]+)\"/) || m[0].match(/target='([^']+)'/);\n                    let rel = m[0].match(/rel=\"([^\"]+)\"/) || m[0].match(/rel='([^']+)'/);\n                    const title = m[0].match(/>([^<]*)</);\n\n                    // eslint-disable-next-line\n                    result.push(<a key={'a' + (key++)} href={href ? href[1] : ''} target={target ? target[1] : '_blank'} rel={rel ? rel[1] : ''}>{title ? title[1] : ''}</a>);\n                }\n\n                text = p[1];\n\n                m = text && text.match(/<a [^<]+<\\/a>|<br\\/?>/);\n                if (!m) {\n                    p[1] && result.push(<span key={'a' + (key++)}>{p[1]}</span>);\n                }\n            } while (m);\n\n            return result;\n        } else {\n            return text;\n        }\n    }\n\n    /**\n     * Get the smart name of the given state.\n     * @param {Record<string, ioBroker.StateObject> | ioBroker.StateObject} states\n     * @param {string} id\n     * @param {string} instanceId\n     * @param {boolean} [noCommon]\n     */\n    static getSmartName(states, id, instanceId, noCommon) {\n        if (!id) {\n            if (!noCommon) {\n                if (!states.common) {\n                    return states.smartName;\n                } else {\n                    if (states && !states.common) {\n                        return states.smartName;\n                    } else {\n                        return states.common.smartName;\n                    }\n                }\n            } else {\n                if (states && !states.common) {\n                    return states.smartName;\n                } else {\n                    return (states &&\n                        states.common &&\n                        states.common.custom &&\n                        states.common.custom[instanceId]) ?\n                        states.common.custom[instanceId].smartName : undefined;\n                }\n            }\n        } else\n        if (!noCommon) {\n            return states[id].common.smartName;\n        } else {\n            return (states[id] &&\n                states[id].common &&\n                states[id].common.custom &&\n                states[id].common.custom[instanceId]) ?\n                states[id].common.custom[instanceId].smartName || null : null;\n        }\n    }\n\n    /**\n     * Get the smart name from a state.\n     * @param {ioBroker.StateObject} obj\n     * @param {string} instanceId\n     * @param {boolean} [noCommon]\n     */\n    static getSmartNameFromObj(obj, instanceId, noCommon) {\n        if (!noCommon) {\n            if (!obj.common) {\n                return obj.smartName;\n            } else {\n                if (obj && !obj.common) {\n                    return obj.smartName;\n                } else {\n                    return obj.common.smartName;\n                }\n            }\n        } else {\n            if (obj && !obj.common) {\n                return obj.smartName;\n            } else {\n                return (obj &&\n                    obj.common &&\n                    obj.common.custom &&\n                    obj.common.custom[instanceId]) ?\n                    obj.common.custom[instanceId].smartName : undefined;\n            }\n        }\n    }\n\n    /**\n     * Enable smart name for a state.\n     * @param {ioBroker.StateObject} obj\n     * @param {string} instanceId\n     * @param {boolean} [noCommon]\n     */\n    static enableSmartName(obj, instanceId, noCommon) {\n        if (noCommon) {\n            obj.common.custom = obj.common.custom || {};\n            obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\n            obj.common.custom[instanceId].smartName = {};\n        } else {\n            obj.common.smartName = {};\n        }\n    }\n\n    /**\n     * Completely remove smart name from a state.\n     * @param {ioBroker.StateObject} obj\n     * @param {string | number} instanceId\n     * @param {boolean} [noCommon]\n     */\n    static removeSmartName(obj, instanceId, noCommon) {\n        if (noCommon) {\n            if (obj.common && obj.common.custom && obj.common.custom[instanceId]) {\n                obj.common.custom[instanceId] = null;\n            }\n        } else {\n            obj.common.smartName = null;\n        }\n    }\n\n    /**\n     * Update the smartname of a state.\n     * @param {ioBroker.StateObject} obj\n     * @param {string} newSmartName\n     * @param {string | undefined} byON\n     * @param {string | undefined} smartType\n     * @param {string} instanceId\n     * @param {boolean} [noCommon]\n     */\n    static updateSmartName(obj, newSmartName, byON, smartType, instanceId, noCommon) {\n        const language = I18n.getLanguage();\n\n        // convert Old format\n        if (typeof obj.common.smartName === 'string') {\n            const nnn = obj.common.smartName;\n            obj.common.smartName = {};\n            obj.common.smartName[language] = nnn;\n        }\n\n        // convert old settings\n        if (obj.native && obj.native.byON) {\n            delete obj.native.byON;\n            let _smartName = obj.common.smartName;\n\n            if (!_smartName || typeof _smartName !== 'object') {\n                _smartName = {en: _smartName};\n                _smartName[language] = _smartName.en;\n            }\n            obj.common.smartName = _smartName;\n        }\n        if (smartType !== undefined) {\n            if (noCommon) {\n                obj.common.custom = obj.common.custom || {};\n                obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\n                obj.common.custom[instanceId].smartName = obj.common.custom[instanceId].smartName || {};\n                if (!smartType) {\n                    delete obj.common.custom[instanceId].smartName.smartType;\n                } else {\n                    obj.common.custom[instanceId].smartName.smartType = smartType;\n                }\n            } else {\n                obj.common.smartName = obj.common.smartName || {};\n                if (!smartType) {\n                    delete obj.common.smartName.smartType;\n                } else {\n                    obj.common.smartName.smartType = smartType;\n                }\n\n            }\n        }\n        if (byON !== undefined) {\n            if (noCommon) {\n                obj.common.custom = obj.common.custom || {};\n                obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\n                obj.common.custom[instanceId].smartName = obj.common.custom[instanceId].smartName || {};\n                obj.common.custom[instanceId].smartName.byON = byON;\n            } else {\n                obj.common.smartName = obj.common.smartName || {};\n                obj.common.smartName.byON = byON;\n            }\n        }\n        if (newSmartName !== undefined) {\n            let smartName;\n            if (noCommon) {\n                obj.common.custom = obj.common.custom || {};\n                obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\n                obj.common.custom[instanceId].smartName = obj.common.custom[instanceId].smartName || {};\n                smartName = obj.common.custom[instanceId].smartName;\n            } else {\n                obj.common.smartName = obj.common.smartName || {};\n                smartName = obj.common.smartName;\n            }\n            smartName[language] = newSmartName;\n\n            // If smart name deleted\n            if (smartName && (!smartName[language] ||\n                (smartName[language] === obj.common.name &&\n                    (!obj.common.role || obj.common.role.indexOf('button') >= 0)))) {\n                delete smartName[language];\n                let empty = true;\n                // Check if structure has any definitions\n                for (const key in smartName) {\n                    if (smartName.hasOwnProperty(key)) {\n                        empty = false;\n                        break;\n                    }\n                }\n                // If empty => delete smartName completely\n                if (empty) {\n                    if (noCommon) {\n                        if (obj.common.custom[instanceId].smartName.byON === undefined) {\n                            delete obj.common.custom[instanceId];\n                        } else {\n                            delete obj.common.custom[instanceId].en;\n                            delete obj.common.custom[instanceId].de;\n                            delete obj.common.custom[instanceId].ru;\n                            delete obj.common.custom[instanceId].nl;\n                            delete obj.common.custom[instanceId].pl;\n                            delete obj.common.custom[instanceId].it;\n                            delete obj.common.custom[instanceId].fr;\n                            delete obj.common.custom[instanceId].pt;\n                            delete obj.common.custom[instanceId].es;\n                            delete obj.common.custom[instanceId]['zh-cn'];\n                        }\n                    } else {\n                        if (obj.common.smartName.byON !== undefined) {\n                            delete obj.common.smartName.en;\n                            delete obj.common.smartName.de;\n                            delete obj.common.smartName.ru;\n                            delete obj.common.smartName.nl;\n                            delete obj.common.smartName.pl;\n                            delete obj.common.smartName.it;\n                            delete obj.common.smartName.fr;\n                            delete obj.common.smartName.pt;\n                            delete obj.common.smartName.es;\n                            delete obj.common.smartName['zh-cn'];\n                        } else {\n                            obj.common.smartName = null;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Disable the smart name of a state.\n     * @param {ioBroker.StateObject} obj\n     * @param {string} instanceId\n     * @param {boolean} [noCommon]\n     */\n    static disableSmartName(obj, instanceId, noCommon) {\n        if (noCommon) {\n            obj.common.custom = obj.common.custom || {};\n            obj.common.custom[instanceId] = obj.common.custom[instanceId] || {};\n            obj.common.custom[instanceId].smartName = false;\n        } else {\n            obj.common.smartName = false;\n        }\n    }\n\n    /**\n     * Copy text to the clipboard.\n     * @param {string} text\n     * @param {Event} [e]\n     */\n    static copyToClipboard(text, e) {\n        const el = window.document.createElement('textarea');\n        el.value = text;\n        window.document.body.appendChild(el);\n        el.select();\n        window.document.execCommand('copy');\n        window.document.body.removeChild(el);\n        console.log(text);\n        e && e.stopPropagation();\n        e && e.preventDefault();\n    }\n\n    /**\n     * Gets the extension of a file name.\n     * @param {string | null} [fileName] the file name.\n     * @returns {string | null} The extension in lower case.\n     */\n    static getFileExtension(fileName) {\n        const pos = (fileName || '').lastIndexOf('.');\n        if (pos !== -1) {\n            return fileName.substring(pos + 1).toLowerCase();\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Format number of bytes as a string with B, KB, MB or GB.\n     * The base for all calculations is 1024.\n     * @param {number} bytes The number of bytes.\n     * @returns {string} The formatted string (e.g. '723.5 KB')\n     */\n    static formatBytes(bytes) {\n        if (Math.abs(bytes) < 1024) {\n            return bytes + ' B';\n        }\n\n        const units = ['KB','MB','GB'];\n        //const units = ['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];\n        let u = -1;\n\n        do {\n            bytes /= 1024;\n            ++u;\n        } while (Math.abs(bytes) >= 1024 && u < units.length - 1);\n\n        return bytes.toFixed(1) + ' ' + units[u];\n    }\n\n    /**\n     * Invert the given color according to theme type to get the inverted text color for background\n     * @param {string} color Color in the format '#rrggbb' or '#rgb' (or without hash)\n     * @param {string} themeType theme type\n     * @param {string} invert dark theme has light color in control or light theme has light color in control\n     * @returns {string}\n     */\n    static getInvertedColor(color, themeType, invert) {\n        if (!color) {\n            return undefined;\n        } else {\n            const invertedColor = Utils.invertColor(color, true);\n            if (invertedColor === '#FFFFFF' && (themeType === 'dark' || (invert && themeType === 'light'))) {\n                return '#DDD';\n            } else\n            if (invertedColor === '#000000' && (themeType === 'light' || (invert && themeType === 'dark'))) {\n                return '#222';\n            } else {\n                return undefined;\n            }\n        }\n    }\n\n    // Big thanks to: https://stackoverflow.com/questions/35969656/how-can-i-generate-the-opposite-color-according-to-current-color\n    /**\n     * Invert the given color\n     * @param {string} hex Color in the format '#rrggbb' or '#rgb' (or without hash)\n     * @param {boolean} bw Set to black or white.\n     * @returns {string}\n     */\n    static invertColor(hex, bw) {\n        if (hex === undefined || hex === null || hex === '' || typeof hex !== 'string') {\n            return '';\n        }\n        if (hex.startsWith('rgba')) {\n            const m = hex.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+),\\s*([.\\d]+)\\)/);\n            if (m) {\n                hex = parseInt(m[1], 10).toString(16).padStart(2, '0') +\n                    parseInt(m[2], 10).toString(16).padStart(2, '0') +\n                    parseInt(m[2], 10).toString(16).padStart(2, '0');\n            }\n        } else if (hex.startsWith('rgba')) {\n            const m = hex.match(/rgb?\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n            if (m) {\n                hex = parseInt(m[1], 10).toString(16).padStart(2, '0') +\n                    parseInt(m[2], 10).toString(16).padStart(2, '0') +\n                    parseInt(m[2], 10).toString(16).padStart(2, '0');\n            }\n        } else\n        if (hex.startsWith('#')) {\n            hex = hex.slice(1);\n        }\n        // convert 3-digit hex to 6-digits.\n        if (hex.length === 3) {\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n        }\n        if (hex.length !== 6) {\n            console.warn('Cannot invert color: ' + hex);\n            return hex;\n        }\n        let r = parseInt(hex.slice(0, 2), 16);\n        let g = parseInt(hex.slice(2, 4), 16);\n        let b = parseInt(hex.slice(4, 6), 16);\n\n        if (bw) {\n            // http://stackoverflow.com/a/3943023/112731\n            return (r * 0.299 + g * 0.587 + b * 0.114) > 186\n                ? '#000000'\n                : '#FFFFFF';\n        }\n        // invert color components\n        r = (255 - r).toString(16);\n        g = (255 - g).toString(16);\n        b = (255 - b).toString(16);\n        // pad each with zeros and return\n        return '#' + r.padStart(2, '0') + g.padStart(2, '0') + b.padStart(2, '0');\n    }\n\n    // https://github.com/lukeed/clsx/blob/master/src/index.js\n    // License\n    // MIT © Luke Edwards\n    /**\n     * @private\n     * @param {any} mix\n     * @returns {string}\n     */\n    static _toVal(mix) {\n        let k, y, str='';\n\n        if (typeof mix === 'string' || typeof mix === 'number') {\n            str += mix;\n        } else if (typeof mix === 'object') {\n            if (Array.isArray(mix)) {\n                for (k=0; k < mix.length; k++) {\n                    if (mix[k]) {\n                        if ((y = Utils._toVal(mix[k]))) {\n                            str && (str += ' ');\n                            str += y;\n                        }\n                    }\n                }\n            } else {\n                for (k in mix) {\n                    if (mix[k]) {\n                        str && (str += ' ');\n                        str += k;\n                    }\n                }\n            }\n        }\n\n        return str;\n    }\n\n    // https://github.com/lukeed/clsx/blob/master/src/index.js\n    // License\n    // MIT © Luke Edwards\n    /**\n     * Convert any object to a string with its values.\n     * @returns {string}\n     */\n    static clsx () {\n        let i = 0;\n        let tmp;\n        let x;\n        let str = '';\n        while (i < arguments.length) {\n            if ((tmp = arguments[i++])) {\n                if ((x = Utils._toVal(tmp))) {\n                    str && (str += ' ');\n                    str += x\n                }\n            }\n        }\n        return str;\n    }\n\n    /**\n     * Get the current theme name (either from local storage or the browser settings).\n     * @param {string} [themeName]\n     * @returns {string}\n     */\n    static getThemeName(themeName = '') {\n        if (window.vendorPrefix && window.vendorPrefix !== '@@vendorPrefix@@') {\n            return window.vendorPrefix;\n        }\n\n        return themeName ? themeName : (window._localStorage || window.localStorage) && (window._localStorage || window.localStorage).getItem('App.themeName') ?\n            (window._localStorage || window.localStorage).getItem('App.themeName') : window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'colored';\n    }\n\n    /**\n     * Get the type of theme.\n     * @param {string} [themeName]\n     * @returns {'dark' | 'light'}\n     */\n    static getThemeType(themeName = '') {\n        if (window.vendorPrefix && window.vendorPrefix !== '@@vendorPrefix@@') {\n            return 'light';\n        }\n\n        themeName = themeName || ((window._localStorage || window.localStorage) && (window._localStorage || window.localStorage).getItem('App.themeName'));\n        return themeName === 'dark' || themeName === 'blue' ? 'dark' : 'light';\n    }\n\n    /**\n     * Set the theme name and theme type.\n     * @param {string} themeName\n     */\n    static setThemeName(themeName) {\n        if (window.vendorPrefix && window.vendorPrefix !== '@@vendorPrefix@@') {\n            return; // ignore\n        }\n        (window._localStorage || window.localStorage).setItem('App.themeName', themeName);\n        (window._localStorage || window.localStorage).setItem('App.theme', themeName === 'dark' || themeName === 'blue' ? 'dark' : 'light');\n    }\n\n    /**\n     * Toggle the theme name between 'dark' and 'colored'.\n     * @param {string | null} themeName\n     * @returns {string} the new theme name.\n     */\n    static toggleTheme(themeName) {\n        if (window.vendorPrefix && window.vendorPrefix !== '@@vendorPrefix@@') {\n            return window.vendorPrefix;\n        }\n        themeName = themeName || ((window._localStorage || window.localStorage) && (window._localStorage || window.localStorage).getItem('App.themeName'));\n\n        // dark => blue => colored => light => dark\n        const themes = Utils.getThemeNames();\n        const pos = themes.indexOf(themeName);\n        let newTheme;\n        if (pos !== -1) {\n            newTheme = themes[(pos + 1) % themes.length];\n        } else {\n            newTheme = themes[0];\n        }\n        Utils.setThemeName(newTheme);\n\n        return newTheme;\n    }\n\n    /**\n     * Get the list of themes\n     * @returns {array<string>} list of possible themes\n     */\n    static getThemeNames() {\n        if (window.vendorPrefix && window.vendorPrefix !== '@@vendorPrefix@@') {\n            return [window.vendorPrefix];\n        }\n\n        return ['light', 'dark', 'blue', 'colored'];\n    }\n\n    /**\n     * Parse a query string into its parts.\n     * @param {string} query\n     * @returns {Record<string, string | boolean | number>}\n     */\n    static parseQuery(query) {\n        query = (query || '').toString().replace(/^\\?/, '');\n        /** @type {Record<string, string | boolean | number>} */\n        const result = {};\n        query.split('&').forEach(part => {\n            part = part.trim();\n            if (part) {\n                const parts = part.split('=');\n                const attr = decodeURIComponent(parts[0]).trim();\n                if (parts.length > 1) {\n                    result[attr] = decodeURIComponent(parts[1]);\n                    if (result[attr] === 'true') {\n                        result[attr] = true;\n                    } else if (result[attr] === 'false') {\n                        result[attr] = false;\n                    } else {\n                        const f = parseFloat(result[attr]);\n                        if (f.toString() === result[attr]) {\n                            result[attr] = f;\n                        }\n                    }\n                } else {\n                    result[attr] = true;\n                }\n            }\n        });\n        return result;\n    }\n\n    /**\n     * Returns parent ID.\n     * @param {string} id\n     * @returns {string | null} parent ID or null if no parent\n     */\n    static getParentId(id) {\n        const p = (id || '').toString().split('.');\n        if (p.length > 1) {\n            p.pop();\n            return p.join('.');\n        } else {\n            return null;\n        }\n    }\n\n    static formatDate(dateObj, dateFormat) {\n        // format could be DD.MM.YYYY, YYYY.MM.DD or MM/DD/YYYY\n\n        if (!dateObj) {\n            return '';\n        }\n\n        let text;\n        let mm = dateObj.getMonth() + 1;\n        if (mm < 10) {\n            mm = '0' + mm;\n        }\n\n        let dd = dateObj.getDate();\n        if (dd < 10) {\n            dd = '0' + dd;\n        }\n\n        if (dateFormat === 'MM/DD/YYYY') {\n            text = mm + '/' + dd + '/' + dateObj.getFullYear();\n        } else {\n            text = dateObj.getFullYear() + '-' + mm + '-' + dd;\n        }\n\n        // time\n        let v = dateObj.getHours();\n        if (v < 10) {\n            text += ' 0' + v;\n        } else {\n            text += ' ' + v;\n        }\n        v = dateObj.getMinutes();\n        if (v < 10) {\n            text += ':0' + v;\n        } else {\n            text += ':' + v;\n        }\n\n        v = dateObj.getSeconds();\n        if (v < 10) {\n            text += ':0' + v;\n        } else {\n            text += ':' + v;\n        }\n\n        v = dateObj.getMilliseconds();\n        if (v < 10) {\n            text += '.00' + v;\n        } else if (v < 100) {\n            text += '.0' + v;\n        } else {\n            text += '.' + v;\n        }\n\n        return text;\n    }\n\n    static formatTime(seconds) {\n        if (seconds) {\n            seconds = Math.round(seconds);\n            const d = Math.floor(seconds / (3600 * 24));\n            const h = Math.floor((seconds % (3600 * 24)) / 3600);\n            const m = Math.floor((seconds % 3600) / 60);\n            const s = seconds % 60;\n            if (d) {\n                return `${d}.${h.toString().padStart(2, '0')}:${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\n            } else if (h) {\n                return `${h}:${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\n            } else {\n                return `0:${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\n            }\n        } else {\n            return '0:00:00';\n        }\n    }\n\n    static MDtext2link(text) {\n        const m = text.match(/\\d+\\.\\)\\s/);\n        if (m) {\n            text = text.replace(m[0], m[0].replace(/\\s/, '&nbsp;'));\n        }\n\n        return text.replace(/[^a-zA-Zа-яА-Я0-9]/g, '').trim().replace(/\\s/g, '').toLowerCase();\n    }\n\n    static openLink(url, target) {\n        // replace IPv6 Address with [ipv6]:port\n        url = url.replace(/\\/\\/([0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*:[0-9a-f]*)(:\\d+)?\\//i, '//[$1]$2/');\n\n        if (target === 'this') {\n            window.location = url;\n        } else {\n            window.open(url, target || '_blank');\n        }\n    }\n\n    static MDgetTitle(text) {\n        let {body, header} = Utils.extractHeader(text);\n        if (!header.title) {\n            // remove {docsify-bla}\n            body = body.replace(/{[^}]*}/g, '');\n            body = body.trim();\n            const lines = body.replace(/\\r/g, '').split('\\n');\n            for (let i = 0; i < lines.length; i++) {\n                if (lines[i].startsWith('# ')) {\n                    return lines[i].substring(2).trim();\n                }\n            }\n            return '';\n        } else {\n            return header.title;\n        }\n    }\n\n    static MDextractHeader(text) {\n        const attrs = {};\n        if (text.substring(0, 3) === '---') {\n            const pos = text.substring(3).indexOf('\\n---');\n            if (pos !== -1) {\n                const _header = text.substring(3, pos + 3);\n                const lines = _header.replace(/\\r/g, '').split('\\n');\n                lines.forEach(line => {\n                    if (!line.trim()) {\n                        return;\n                    }\n                    const pos = line.indexOf(':');\n                    if (pos !== -1) {\n                        const attr = line.substring(0, pos).trim();\n                        attrs[attr] = line.substring(pos + 1).trim();\n                        attrs[attr] = attrs[attr].replace(/^['\"]|['\"]$/g, '');\n                        if (attrs[attr] === 'true') {\n                            attrs[attr] = true;\n                        } else if (attrs[attr] === 'false') {\n                            attrs[attr] = false;\n                        } else if (parseFloat(attrs[attr]).toString() === attrs[attr]) {\n                            attrs[attr] = parseFloat(attrs[attr]);\n                        }\n                    } else {\n                        attrs[line.trim()] = true;\n                    }\n                });\n                text = text.substring(pos + 7);\n            }\n        }\n        return {header: attrs, body: text};\n    }\n\n    static MDremoveDocsify(text) {\n        const m = text.match(/{docsify-[^}]*}/g);\n        if (m) {\n            m.forEach(doc => text = text.replace(doc, ''));\n        }\n        return text;\n    }\n\n    /**\n     * Generate the json file on the file for download.\n     * @param {string} filename file name\n     * @returns {object} json structure (not stringified)\n     */\n    static generateFile(filename, json) {\n        let el = document.createElement('a');\n        el.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json, null, 2)));\n        el.setAttribute('download', filename);\n\n        el.style.display = 'none';\n        document.body.appendChild(el);\n\n        el.click();\n\n        document.body.removeChild(el);\n    }\n\n    /**\n     * Convert quality code into text\n     * @param {number} quality code\n     * @returns {array<string>} lines that decode qulity\n     */\n    static quality2text(quality) {\n        const custom = quality & 0xFFFF0000;\n        const text = QUALITY_BITS[quality];\n        let result;\n        if (text) {\n            result = [text];\n        } else if (quality & 0x01) {\n            result = [QUALITY_BITS[0x01], '0x' + (quality & (0xFFFF & ~1)).toString(16)];\n        } else if (quality & 0x02) {\n            result = [QUALITY_BITS[0x02], '0x' + (quality & (0xFFFF & ~2)).toString(16)];\n        } else {\n            result = ['0x' + quality.toString(16)];\n        }\n        if (custom) {\n            result.push('0x' + (custom >> 16).toString(16).toUpperCase());\n        }\n        return result;\n    }\n\n    /**\n     * Deep copy object\n     * @param {object} object\n     * @returns {object}\n     */\n    static clone(object) {\n        return JSON.parse(JSON.stringify(object));\n    }\n\n    /**\n     * Get states of object\n     * @param {object} obj\n     * @returns {object} states as an object in form {\"value1\": \"label1\", \"value2\": \"label2\"} or null\n     */\n    static getStates(obj) {\n        let states = obj?.common?.states;\n        if (states) {\n            if (typeof states === 'string' && states[0] === '{') {\n                try {\n                    states = JSON.parse(states);\n                } catch (ex) {\n                    console.error(`Cannot parse states: ${states}`);\n                    states = null;\n                }\n            } else\n            // if old format val1:text1;val2:text2\n            if (typeof states === 'string') {\n                const parts = states.split(';');\n                states = {};\n                for (let p = 0; p < parts.length; p++) {\n                    const s = parts[p].split(':');\n                    states[s[0]] = s[1];\n                }\n            } else if (Array.isArray(states)) {\n                const result = {};\n                if (obj.common.type === 'number') {\n                    states.forEach((value, key) => result[key] = value);\n                } else\n                if (obj.common.type === 'string') {\n                    states.forEach(value => result[value] = value);\n                } else if (obj.common.type === 'boolean') {\n                    result['false'] = states[0];\n                    result['true'] = states[1];\n                }\n\n                return result;\n            }\n        }\n\n        return states;\n    }\n\n    /**\n     * Get svg file as text\n     * @param {string} url URL of SVG file\n     * @returns {object} Promise with \"data:image...\"\n     */\n    static getSvg(url) {\n        return fetch(url)\n            .then(response => response.blob())\n            .then(blob => {\n                return new Promise(resolve => {\n                    const reader = new FileReader();\n                    reader.onload = function() { // do not optimize this function. \"this\" is important.\n                        resolve(this.result);\n                    };\n                    reader.readAsDataURL(blob);\n                });\n            });\n    }\n\n    /**\n     * Detect file xtension by its content\n     * @param {string} base64 Base64 encoded binary file\n     * @returns {string} Detected extension, like 'jpg'\n     */\n    static detectMimeType(base64) {\n        const signature = Object.keys(SIGNATURES).find(s => base64.startsWith(s));\n        return signature ? SIGNATURES[signature] : null;\n    }\n}\n\nexport default Utils;\n","/**\n * Copyright 2020-2022, bluefox <dogafox@gmail.com>\n *\n * MIT License\n *\n **/\nimport PropTypes from 'prop-types';\n\n/** Possible progress states. */\nexport const PROGRESS = {\n    /** The socket is connecting. */\n    CONNECTING: 0,\n    /** The socket is successfully connected. */\n    CONNECTED: 1,\n    /** All objects are loaded. */\n    OBJECTS_LOADED: 2,\n    /** The socket is ready for use. */\n    READY: 3\n};\n\nconst PERMISSION_ERROR = 'permissionError';\nconst NOT_CONNECTED    = 'notConnectedError';\nconst TIMEOUT_FOR_ADMIN4 = 1300;\n\nexport const ERRORS = {\n    PERMISSION_ERROR,\n    NOT_CONNECTED\n};\n\nfunction fixAdminUI(obj) {\n    if (obj && obj.common && !obj.common.adminUI) {\n        if (obj.common.noConfig) {\n            obj.common.adminUI = obj.common.adminUI || {};\n            obj.common.adminUI.config = 'none';\n        } else if (obj.common.jsonConfig) {\n            obj.common.adminUI = obj.common.adminUI || {};\n            obj.common.adminUI.config = 'json';\n        } else if (obj.common.materialize) {\n            obj.common.adminUI = obj.common.adminUI || {};\n            obj.common.adminUI.config = 'materialize';\n        } else {\n            obj.common.adminUI = obj.common.adminUI || {};\n            obj.common.adminUI.config = 'html';\n        }\n\n        if (obj.common.jsonCustom) {\n            obj.common.adminUI = obj.common.adminUI || {};\n            obj.common.adminUI.custom = 'json';\n        } else if (obj.common.supportCustoms) {\n            obj.common.adminUI = obj.common.adminUI || {};\n            obj.common.adminUI.custom = 'json';\n        }\n\n        if (obj.common.materializeTab && obj.common.adminTab) {\n            obj.common.adminUI = obj.common.adminUI || {};\n            obj.common.adminUI.tab = 'materialize';\n        } else if (obj.common.adminTab) {\n            obj.common.adminUI = obj.common.adminUI || {};\n            obj.common.adminUI.tab = 'html';\n        }\n\n        obj.common.adminUI && console.debug(`Please add to \"${obj._id.replace(/\\.\\d+$/, '')}\" common.adminUI=${JSON.stringify(obj.common.adminUI)}`);\n    }\n    return obj;\n}\n\nclass Connection {\n    /**\n     * @param {import('./types').ConnectionProps} props\n     */\n    constructor(props) {\n        props                 = props || { protocol: window.location.protocol, host: window.location.hostname };\n        this.props            = props;\n\n        this.autoSubscribes   = this.props.autoSubscribes || [];\n        this.autoSubscribeLog = this.props.autoSubscribeLog;\n\n        this.props.protocol   = this.props.protocol || window.location.protocol;\n        this.props.host       = this.props.host     || window.location.hostname;\n        this.props.port       = this.props.port     || (window.location.port === '3000' ? (Connection.isWeb() ? 8082 : 8081) : window.location.port);\n        this.props.ioTimeout  = Math.max(this.props.ioTimeout  || 20000, 20000);\n        this.props.cmdTimeout = Math.max(this.props.cmdTimeout || 5000, 5000);\n\n        // breaking change. Do not load all objects by default is true\n        this.doNotLoadAllObjects = this.props.doNotLoadAllObjects === undefined ? true : this.props.doNotLoadAllObjects;\n        this.doNotLoadACL        = this.props.doNotLoadACL        === undefined ? true : this.props.doNotLoadACL;\n\n        /** @type {Record<string, ioBroker.State>} */\n        this.states = {};\n        this.objects = null;\n        this.acl = null;\n        this.firstConnect = true;\n        this.waitForRestart = false;\n        /** @type {ioBroker.Languages} */\n        this.systemLang = 'en';\n        this.connected = false;\n        this._waitForFirstConnection = new Promise(resolve => { this._waitForFirstConnectionResolve = resolve });\n\n        /** @type {Record<string, { reg: RegExp; cbs: ioBroker.StateChangeHandler[]}>} */\n        this.statesSubscribes = {}; // subscribe for states\n\n        /** @type {Record<string, { reg: RegExp; cbs: import('./types').ObjectChangeHandler[]}>} */\n        this.objectsSubscribes = {}; // subscribe for objects\n        this.onProgress = this.props.onProgress || function () { };\n        this.onError = this.props.onError || function (err) { console.error(err); };\n        this.loaded = false;\n        this.loadTimer = null;\n        this.loadCounter = 0;\n        this.admin5only = this.props.admin5only || false;\n\n        /** @type {((connected: boolean) => void)[]} */\n        this.onConnectionHandlers = [];\n        /** @type {((message: string) => void)[]} */\n        this.onLogHandlers = [];\n\n        /** @type {Record<string, Promise<any>>} */\n        this._promises = {};\n\n        this.log.error = text => this.log(text, 'error');\n        this.log.warn = text => this.log(text, 'warn');\n        this.log.info = text => this.log(text, 'info');\n        this.log.debug = text => this.log(text, 'debug');\n        this.log.silly = text => this.log(text, 'silly');\n\n        this.startSocket();\n    }\n\n    /**\n     * Checks if this connection is running in a web adapter and not in an admin.\n     * @returns {boolean} True if running in a web adapter or in a socketio adapter.\n     */\n    static isWeb() {\n        return window.adapterName === 'material' ||\n            window.adapterName === 'vis' ||\n            window.adapterName === 'echarts-show' ||\n            window.socketUrl !== undefined;\n    }\n\n    /**\n     * Starts the socket.io connection.\n     * @returns {void}\n     */\n    startSocket() {\n        // if socket io is not yet loaded\n        if (typeof window.io === 'undefined') {\n            // if in index.html the onLoad function not defined\n            if (typeof window.registerSocketOnLoad !== 'function') {\n                // poll if loaded\n                this.scriptLoadCounter = this.scriptLoadCounter || 0;\n                this.scriptLoadCounter++;\n\n                if (this.scriptLoadCounter < 30) {\n                    // wait till the script loaded\n                    setTimeout(() => this.startSocket(), 100);\n                    return;\n                } else {\n                    window.alert('Cannot load socket.io.js!');\n                }\n            } else {\n                // register on load\n                window.registerSocketOnLoad(() => this.startSocket());\n            }\n            return;\n        } else {\n            // socket was initialized, do not repeat\n            if (this._socket) {\n                return;\n            }\n        }\n\n        let host = this.props.host;\n        let port = this.props.port;\n        let protocol = this.props.protocol.replace(':', '');\n        let path = window.location.pathname;\n\n        if (\n            window.location.hostname === 'iobroker.net' ||\n            window.location.hostname === 'iobroker.pro'\n        ) {\n            path = '';\n        } else {\n            // if web adapter, socket io could be on other port or even host\n            if (window.socketUrl) {\n                let parts = window.socketUrl.split(':');\n                host = parts[0] || host;\n                port = parts[1] || port;\n                if (host.includes('://')) {\n                    parts = host.split('://');\n                    protocol = parts[0];\n                    host = parts[1];\n                }\n            }\n            // get current path\n            const pos = path.lastIndexOf('/');\n            if (pos !== -1) {\n                path = path.substring(0, pos + 1);\n            }\n\n            if (Connection.isWeb()) {\n                // remove one level, like echarts, vis, .... We have here: '/echarts/'\n                const parts = path.split('/');\n                if (parts.length > 2) {\n                    parts.pop();\n                    parts.pop();\n                    path = parts.join('/');\n                    if (!path.endsWith('/')) {\n                        path += '/';\n                    }\n                }\n            }\n        }\n\n        const url = port ? `${protocol}://${host}:${port}${path}` : `${protocol}://${host}${path}`;\n\n        this._socket = window.io.connect(\n            url,\n            {\n                path: path.endsWith('/') ? path + 'socket.io' : path + '/socket.io',\n                query: 'ws=true',\n                name: this.props.name,\n                timeout: this.props.ioTimeout\n            }\n        );\n\n        this._socket.on('connect', noTimeout => {\n            // If the user is not admin it takes some time to install the handlers, because all rights must be checked\n            if (noTimeout !== true) {\n                setTimeout(() =>\n                    this.getVersion()\n                        .then(info => {\n                            const [major, minor, patch] = info.version.split('.');\n                            const v = parseInt(major, 10) * 10000 + parseInt(minor, 10) * 100 + parseInt(patch, 10);\n                            if (v < 40102) {\n                                this._authTimer = null;\n                                // possible this is old version of admin\n                                this.onPreConnect(false, false);\n                            } else {\n                                this._socket.emit('authenticate', (isOk, isSecure) => this.onPreConnect(isOk, isSecure));\n                            }\n                        }), 500);\n            } else {\n                // iobroker websocket waits, till all handlers are installed\n                this._socket.emit('authenticate', (isOk, isSecure) => this.onPreConnect(isOk, isSecure));\n            }\n        });\n\n        this._socket.on('reconnect', () => {\n            this.onProgress(PROGRESS.READY);\n            this.connected = true;\n\n            if (this.waitForRestart) {\n                window.location.reload(false);\n            } else {\n                this._subscribe(true);\n                this.onConnectionHandlers.forEach(cb => cb(true));\n            }\n        });\n\n        this._socket.on('disconnect', () => {\n            this.connected  = false;\n            this.subscribed = false;\n            this.onProgress(PROGRESS.CONNECTING);\n            this.onConnectionHandlers.forEach(cb => cb(false));\n        });\n\n        this._socket.on('reauthenticate', () =>\n            this.authenticate());\n\n        this._socket.on('log', message => {\n            this.props.onLog && this.props.onLog(message);\n            this.onLogHandlers.forEach(cb => cb(message));\n        });\n\n        this._socket.on('error', err => {\n            let _err = err || '';\n            if (typeof _err.toString !== 'function') {\n                _err = JSON.stringify(_err);\n                console.error(`Received strange error: ${_err}`);\n            }\n            _err = _err.toString();\n            if (_err.includes('User not authorized')) {\n                this.authenticate();\n            } else {\n                window.alert(`Socket Error: ${err}`);\n            }\n        });\n\n        this._socket.on('connect_error', err =>\n            console.error(`Connect error: ${err}`));\n\n        this._socket.on('permissionError', err =>\n            this.onError({ message: 'no permission', operation: err.operation, type: err.type, id: (err.id || '') }));\n\n        this._socket.on('objectChange', (id, obj) =>\n            setTimeout(() => this.objectChange(id, obj), 0));\n\n        this._socket.on('stateChange', (id, state) =>\n            setTimeout(() => this.stateChange(id, state), 0));\n\n        this._socket.on('cmdStdout', (id, text) =>\n            this.onCmdStdoutHandler && this.onCmdStdoutHandler(id, text));\n\n        this._socket.on('cmdStderr', (id, text) =>\n            this.onCmdStderrHandler && this.onCmdStderrHandler(id, text));\n\n        this._socket.on('cmdExit', (id, exitCode) =>\n            this.onCmdExitHandler && this.onCmdExitHandler(id, exitCode));\n    }\n\n    /**\n     * Called internally.\n     * @private\n     * @param {boolean} isOk\n     * @param {boolean} isSecure\n     */\n    onPreConnect(isOk, isSecure) {\n        if (this._authTimer) {\n            clearTimeout(this._authTimer);\n            this._authTimer = null;\n        }\n\n        this.connected = true;\n        this.isSecure = isSecure;\n\n        if (this.waitForRestart) {\n            window.location.reload(false);\n        } else {\n            if (this.firstConnect) {\n                // retry strategy\n                this.loadTimer = setTimeout(() => {\n                    this.loadTimer = null;\n                    this.loadCounter++;\n                    if (this.loadCounter < 10) {\n                        this.onConnect();\n                    }\n                }, 1000);\n\n                if (!this.loaded) {\n                    this.onConnect();\n                }\n            } else {\n                this.onProgress(PROGRESS.READY);\n            }\n\n            this._subscribe(true);\n            this.onConnectionHandlers.forEach(cb => cb(true));\n        }\n\n        if (this._waitForFirstConnectionResolve) {\n            this._waitForFirstConnectionResolve();\n            this._waitForFirstConnectionResolve = null;\n        }\n    }\n\n    /**\n     * Checks if the socket is connected.\n     * @returns {boolean} true if connected.\n     */\n    isConnected() {\n        return this.connected;\n    }\n\n    /**\n     * Checks if the socket is connected.\n     * @returns {Promise<void>} Promise resolves if once connected.\n     */\n    waitForFirstConnection() {\n        return this._waitForFirstConnection;\n    }\n\n    /**\n     * Called internally.\n     * @private\n     */\n    _getUserPermissions(cb) {\n        if (this.doNotLoadACL) {\n            return cb && cb();\n        } else {\n            this._socket.emit('getUserPermissions', cb);\n        }\n    }\n\n    /**\n     * Called internally.\n     * @private\n     */\n    onConnect() {\n        this._getUserPermissions((err, acl) => {\n            if (err) {\n                return this.onError('Cannot read user permissions: ' + err);\n            } else\n            if (!this.doNotLoadACL) {\n                if (this.loaded) {\n                    return;\n                }\n                this.loaded = true;\n                clearTimeout(this.loadTimer);\n                this.loadTimer = null;\n\n                this.onProgress(PROGRESS.CONNECTED);\n                this.firstConnect = false;\n\n                this.acl = acl;\n            }\n\n            // Read system configuration\n            return (this.admin5only && !window.vendorPrefix ? this.getCompactSystemConfig() : this.getSystemConfig())\n                .then(data => {\n                    if (this.doNotLoadACL) {\n                        if (this.loaded) {\n                            return undefined;\n                        }\n                        this.loaded = true;\n                        clearTimeout(this.loadTimer);\n                        this.loadTimer = null;\n\n                        this.onProgress(PROGRESS.CONNECTED);\n                        this.firstConnect = false;\n                    }\n\n                    this.systemConfig = data;\n                    if (this.systemConfig && this.systemConfig.common) {\n                        this.systemLang = this.systemConfig.common.language;\n                    } else {\n                        this.systemLang = window.navigator.userLanguage || window.navigator.language;\n\n                        if (this.systemLang !== 'en' && this.systemLang !== 'de' && this.systemLang !== 'ru') {\n                            this.systemConfig.common.language = 'en';\n                            this.systemLang = 'en';\n                        }\n                    }\n\n                    this.props.onLanguage && this.props.onLanguage(this.systemLang);\n\n                    if (!this.doNotLoadAllObjects) {\n                        return this.getObjects()\n                            .then(() => {\n                                this.onProgress(PROGRESS.READY);\n                                this.props.onReady && this.props.onReady(this.objects);\n                            });\n                    } else {\n                        this.objects = this.admin5only ? {} : { 'system.config': data };\n                        this.onProgress(PROGRESS.READY);\n                        this.props.onReady && this.props.onReady(this.objects);\n                    }\n                    return undefined;\n                })\n                .catch(e => this.onError('Cannot read system config: ' + e));\n        });\n    }\n\n    /**\n     * Called internally.\n     * @private\n     */\n    authenticate() {\n        if (window.location.search.includes('&href=')) {\n            window.location = `${window.location.protocol}//${window.location.host}${window.location.pathname}${window.location.search}${window.location.hash}`;\n        } else {\n            window.location = `${window.location.protocol}//${window.location.host}${window.location.pathname}?login&href=${window.location.search}${window.location.hash}`;\n        }\n    }\n\n    /**\n     * Subscribe to changes of the given state.\n     * @param {string} id The ioBroker state ID.\n     * @param {ioBroker.StateChangeHandler} cb The callback.\n     */\n    /**\n     * Subscribe to changes of the given state.\n     * @param {string} id The ioBroker state ID.\n     * @param {boolean} binary Set to true if the given state is binary and requires Base64 decoding.\n     * @param {ioBroker.StateChangeHandler} cb The callback.\n     */\n    subscribeState(id, binary, cb) {\n        if (typeof binary === 'function') {\n            cb = binary;\n            binary = false;\n        }\n\n        if (!this.statesSubscribes[id]) {\n            let reg = id\n                .replace(/\\./g, '\\\\.')\n                .replace(/\\*/g, '.*')\n                .replace(/\\(/g, '\\\\(')\n                .replace(/\\)/g, '\\\\)')\n                .replace(/\\+/g, '\\\\+')\n                .replace(/\\[/g, '\\\\[');\n\n            if (reg.indexOf('*') === -1) {\n                reg += '$';\n            }\n            this.statesSubscribes[id] = { reg: new RegExp(reg), cbs: [] };\n            this.statesSubscribes[id].cbs.push(cb);\n            if (this.connected) {\n                this._socket.emit('subscribe', id);\n            }\n        } else {\n            !this.statesSubscribes[id].cbs.includes(cb) && this.statesSubscribes[id].cbs.push(cb);\n        }\n        if (typeof cb === 'function' && this.connected) {\n            if (binary) {\n                this.getBinaryState(id)\n                    .then(base64 => cb(id, base64))\n                    .catch(e => console.error(`Cannot getForeignStates \"${id}\": ${JSON.stringify(e)}`));\n            } else {\n                if (Connection.isWeb()) {\n                    this._socket.emit('getStates', id, (err, states) => {\n                        err && console.error(`Cannot getForeignStates \"${id}\": ${JSON.stringify(err)}`);\n                        states && Object.keys(states).forEach(id => cb(id, states[id]));\n                    });\n                } else {\n                    this._socket.emit('getForeignStates', id, (err, states) => {\n                        err && console.error(`Cannot getForeignStates \"${id}\": ${JSON.stringify(err)}`);\n                        states && Object.keys(states).forEach(id => cb(id, states[id]));\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Unsubscribes all callbacks from changes of the given state.\n     * @param {string} id The ioBroker state ID.\n     */\n    /**\n     * Unsubscribes the given callback from changes of the given state.\n     * @param {string} id The ioBroker state ID.\n     * @param {ioBroker.StateChangeHandler} cb The callback.\n     */\n    unsubscribeState(id, cb) {\n        if (this.statesSubscribes[id]) {\n            if (cb) {\n                const pos = this.statesSubscribes[id].cbs.indexOf(cb);\n                pos !== -1 && this.statesSubscribes[id].cbs.splice(pos, 1);\n            } else {\n                this.statesSubscribes[id].cbs = [];\n            }\n\n            if (!this.statesSubscribes[id].cbs || !this.statesSubscribes[id].cbs.length) {\n                delete this.statesSubscribes[id];\n                this.connected && this._socket.emit('unsubscribe', id);\n            }\n        }\n    }\n\n    /**\n     * Subscribe to changes of the given object.\n     * @param {string} id The ioBroker object ID.\n     * @param {import('./types').ObjectChangeHandler} cb The callback.\n     * @returns {Promise<void>}\n     */\n    subscribeObject(id, cb) {\n        if (!this.objectsSubscribes[id]) {\n            let reg = id.replace(/\\./g, '\\\\.').replace(/\\*/g, '.*');\n            if (!reg.includes('*')) {\n                reg += '$';\n            }\n            this.objectsSubscribes[id] = { reg: new RegExp(reg), cbs: [] };\n            this.objectsSubscribes[id].cbs.push(cb);\n            this.connected && this._socket.emit('subscribeObjects', id);\n        } else {\n            !this.objectsSubscribes[id].cbs.includes(cb) && this.objectsSubscribes[id].cbs.push(cb);\n        }\n        return Promise.resolve();\n    }\n\n    /**\n     * Unsubscribes all callbacks from changes of the given object.\n     * @param {string} id The ioBroker object ID.\n     * @returns {Promise<void>}\n     */\n    /**\n     * Unsubscribes the given callback from changes of the given object.\n     * @param {string} id The ioBroker object ID.\n     * @param {import('./types').ObjectChangeHandler} cb The callback.\n     * @returns {Promise<void>}\n     */\n    unsubscribeObject(id, cb) {\n        if (this.objectsSubscribes[id]) {\n            if (cb) {\n                const pos = this.objectsSubscribes[id].cbs.indexOf(cb);\n                pos !== -1 && this.objectsSubscribes[id].cbs.splice(pos, 1);\n            } else {\n                this.objectsSubscribes[id].cbs = [];\n            }\n\n            if (this.connected && (!this.objectsSubscribes[id].cbs || !this.objectsSubscribes[id].cbs.length)) {\n                delete this.objectsSubscribes[id];\n                this.connected && this._socket.emit('unsubscribeObjects', id);\n            }\n        }\n        return Promise.resolve();\n    }\n\n    /**\n     * Called internally.\n     * @private\n     * @param {string} id\n     * @param {ioBroker.Object | null | undefined} obj\n     */\n    objectChange(id, obj) {\n        // update main.objects cache\n        if (!this.objects) {\n            return;\n        }\n\n        /** @type {import(\"./types\").OldObject} */\n        let oldObj;\n\n        let changed = false;\n        if (obj) {\n            if (obj._rev && this.objects[id]) {\n                this.objects[id]._rev = obj._rev;\n            }\n\n            if (this.objects[id]) {\n                oldObj = { _id: id, type: this.objects[id].type };\n            }\n\n            if (!this.objects[id] || JSON.stringify(this.objects[id]) !== JSON.stringify(obj)) {\n                this.objects[id] = obj;\n                changed = true;\n            }\n        } else if (this.objects[id]) {\n            oldObj = { _id: id, type: this.objects[id].type };\n            delete this.objects[id];\n            changed = true;\n        }\n\n        Object.keys(this.objectsSubscribes).forEach(_id => {\n            if (_id === id || this.objectsSubscribes[_id].reg.test(id)) {\n                //@ts-ignore\n                this.objectsSubscribes[_id].cbs.forEach(cb => cb(id, obj, oldObj));\n            }\n        });\n\n        if (changed && this.props.onObjectChange) {\n            this.props.onObjectChange(id, obj);\n        }\n    }\n\n    /**\n     * Called internally.\n     * @private\n     * @param {string} id\n     * @param {ioBroker.State | null | undefined} state\n     */\n    stateChange(id, state) {\n        for (const task in this.statesSubscribes) {\n            if (this.statesSubscribes.hasOwnProperty(task) && this.statesSubscribes[task].reg.test(id)) {\n                this.statesSubscribes[task].cbs.forEach(cb => cb(id, state));\n            }\n        }\n    }\n\n    /**\n     * Gets all states.\n     * @param {boolean} disableProgressUpdate don't call onProgress() when done\n     * @returns {Promise<Record<string, ioBroker.State>>}\n     */\n    getStates(disableProgressUpdate) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getStates', (err, res) => {\n                this.states = res;\n                //@ts-ignore\n                !disableProgressUpdate && this.onProgress(PROGRESS.STATES_LOADED);\n                return err ? reject(err) : resolve(this.states);\n            }));\n    }\n\n    /**\n     * Gets the given state.\n     * @param {string} id The state ID.\n     * @returns {Promise<ioBroker.State | null | undefined>}\n     */\n    getState(id) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getState', id, (err, state) => err ? reject(err) : resolve(state)));\n    }\n\n    /**\n     * Gets the given binary state.\n     * @param {string} id The state ID.\n     * @returns {Promise<Buffer | undefined>}\n     */\n    getBinaryState(id) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        // the data will come in base64\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getBinaryState', id, (err, state) => err ? reject(err) : resolve(state)));\n    }\n\n    /**\n     * Sets the given binary state.\n     * @param {string} id The state ID.\n     * @param {string} base64 The Base64 encoded binary data.\n     * @returns {Promise<void>}\n     */\n    setBinaryState(id, base64) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        // the data will come in base64\n        return new Promise((resolve, reject) =>\n            this._socket.emit('setBinaryState', id, base64, err => err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Sets the given state value.\n     * @param {string} id The state ID.\n     * @param {string | number | boolean | ioBroker.State | ioBroker.SettableState | null} val The state value.\n     * @returns {Promise<void>}\n     */\n    setState(id, val) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('setState', id, val, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Gets all objects.\n     * @param {(objects?: Record<string, ioBroker.Object>) => void} update Callback that is executed when all objects are retrieved.\n     * @returns {void}\n     */\n    /**\n     * Gets all objects.\n     * @param {boolean} update Set to true to retrieve all objects from the server (instead of using the local cache).\n     * @param {boolean} disableProgressUpdate don't call onProgress() when done\n     * @returns {Promise<Record<string, ioBroker.Object>> | undefined}\n     */\n    getObjects(update, disableProgressUpdate) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        } else {\n            return new Promise((resolve, reject) => {\n                if (!update && this.objects) {\n                    return resolve(this.objects);\n                }\n\n                this._socket.emit(Connection.isWeb() ? 'getObjects' : 'getAllObjects', (err, res) => {\n                    this.objects = res;\n                    disableProgressUpdate && this.onProgress(PROGRESS.OBJECTS_LOADED);\n                    err ? reject(err) : resolve(this.objects);\n                });\n            });\n        }\n    }\n\n    /**\n     * Called internally.\n     * @private\n     * @param {boolean} isEnable\n     */\n    _subscribe(isEnable) {\n        if (isEnable && !this.subscribed) {\n            this.subscribed = true;\n            this.autoSubscribes.forEach(id => this._socket.emit('subscribeObjects', id));\n            // re subscribe objects\n            Object.keys(this.objectsSubscribes).forEach(id => this._socket.emit('subscribeObjects', id));\n            // re-subscribe logs\n            this.autoSubscribeLog && this._socket.emit('requireLog', true);\n            // re subscribe states\n            Object.keys(this.statesSubscribes).forEach(id => this._socket.emit('subscribe', id));\n        } else if (!isEnable && this.subscribed) {\n            this.subscribed = false;\n            // un-subscribe objects\n            this.autoSubscribes.forEach(id => this._socket.emit('unsubscribeObjects', id));\n            Object.keys(this.objectsSubscribes).forEach(id => this._socket.emit('unsubscribeObjects', id));\n            // un-subscribe logs\n            this.autoSubscribeLog && this._socket.emit('requireLog', false);\n\n            // un-subscribe states\n            Object.keys(this.statesSubscribes).forEach(id => this._socket.emit('unsubscribe', id));\n        }\n    }\n\n    /**\n     * Requests log updates.\n     * @param {boolean} isEnabled Set to true to get logs.\n     * @returns {Promise<void>}\n     */\n    requireLog(isEnabled) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('requireLog', isEnabled, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Deletes the given object.\n     * @param {string} id The object ID.\n     * @param {boolean} maintenance Force deletion of non conform IDs.\n     * @returns {Promise<void>}\n     */\n    delObject(id, maintenance) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('delObject', id, { maintenance: !!maintenance }, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Deletes the given object and all its children.\n     * @param {string} id The object ID.\n     * @param {boolean} maintenance Force deletion of non conform IDs.\n     * @returns {Promise<void>}\n     */\n    delObjects(id, maintenance) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('delObjects', id, {maintenance: !!maintenance}, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Sets the object.\n     * @param {string} id The object ID.\n     * @param {ioBroker.SettableObject} obj The object.\n     * @returns {Promise<void>}\n     */\n    setObject(id, obj) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        if (!obj) {\n            return Promise.reject('Null object is not allowed');\n        }\n\n        obj = JSON.parse(JSON.stringify(obj));\n\n        if (obj.hasOwnProperty('from')) {\n            delete obj.from;\n        }\n        if (obj.hasOwnProperty('user')) {\n            delete obj.user;\n        }\n        if (obj.hasOwnProperty('ts')) {\n            delete obj.ts;\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('setObject', id, obj, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Gets the object with the given id from the server.\n     * @param {string} id The object ID.\n     * @returns {ioBroker.GetObjectPromise} The object.\n     */\n    getObject(id) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getObject', id, (err, obj) =>\n                err ? reject(err) : resolve(obj)));\n    }\n\n    /**\n     * Get all adapter instances.\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<ioBroker.Object[]>}\n     */\n    /**\n     * Get all instances of the given adapter.\n     * @param {string} adapter The name of the adapter.\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<ioBroker.Object[]>}\n     */\n    getAdapterInstances(adapter, update) {\n        if (typeof adapter === 'boolean') {\n            update = adapter;\n            adapter = '';\n        }\n        adapter = adapter || '';\n\n        if (!update && this._promises['instances_' + adapter]) {\n            return this._promises['instances_' + adapter];\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises['instances_' + adapter] = new Promise((resolve, reject) => {\n            let timeout = setTimeout(() => {\n                timeout = null;\n                this.getObjectView(\n                    `system.adapter.${adapter ? adapter + '.' : ''}`,\n                    `system.adapter.${adapter ? adapter + '.' : ''}\\u9999`,\n                    'instance'\n                )\n                    .then(items => resolve(Object.keys(items).map(id => fixAdminUI(items[id]))))\n                    .catch(e => reject(e));\n            }, TIMEOUT_FOR_ADMIN4);\n\n            this._socket.emit('getAdapterInstances', adapter, (err, instances) => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                    return err ? reject(err) : resolve(instances);\n                }\n            });\n        });\n\n        return this._promises['instances_' + adapter];\n    }\n\n    /**\n     * Get all adapters.\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<ioBroker.Object[]>}\n     */\n    /**\n     * Get adapters with the given name.\n     * @param {string} adapter The name of the adapter.\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<ioBroker.Object[]>}\n     */\n    getAdapters(adapter, update) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n\n        if (typeof adapter === 'boolean') {\n            update = adapter;\n            adapter = '';\n        }\n\n        adapter = adapter || '';\n\n        if (!update && this._promises['adapter_' + adapter]) {\n            return this._promises['adapter_' + adapter];\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises['adapter_' + adapter] = new Promise((resolve, reject) => {\n            let timeout = setTimeout(() => {\n                timeout = null;\n                this.getObjectView(\n                    `system.adapter.${adapter}.`,\n                    `system.adapter.${adapter}.\\u9999`,\n                    'adapter'\n                )\n                    .then(items => resolve(Object.keys(items).map(id => fixAdminUI(items[id]))))\n                    .catch(e => reject(e));\n            }, TIMEOUT_FOR_ADMIN4);\n\n            this._socket.emit('getAdapters', adapter, (err, adapters) => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                    return err ? reject(err) : resolve(adapters);\n                }\n            });\n        });\n\n        return this._promises['adapter_' + adapter];\n    }\n\n    /**\n     * Called internally.\n     * @private\n     * @param {any[]} objs\n     * @param {(err?: any) => void} cb\n     */\n    _renameGroups(objs, cb) {\n        if (!objs || !objs.length) {\n            cb && cb();\n        } else {\n            let obj = objs.pop();\n            let oldId = obj._id;\n            obj._id = obj.newId;\n            delete obj.newId;\n\n            this.setObject(obj._id, obj)\n                .then(() => this.delObject(oldId))\n                .then(() => setTimeout(() => this._renameGroups(objs, cb), 0))\n                .catch(err => cb && cb(err));\n        }\n    }\n\n    /**\n     * Rename a group.\n     * @param {string} id The id.\n     * @param {string} newId The new id.\n     * @param {string | { [lang in ioBroker.Languages]?: string; }} newName The new name.\n     */\n    renameGroup(id, newId, newName) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n\n        return this.getGroups(true)\n            .then(groups => {\n                if (groups.length) {\n                    // find all elements\n                    const groupsToRename = groups\n                        .filter(group => group._id.startsWith(id + '.'));\n\n                    groupsToRename.forEach(group => group.newId = newId + group._id.substring(id.length));\n\n                    return new Promise((resolve, reject) =>\n                        this._renameGroups(groupsToRename, err => err ? reject(err) : resolve()))\n                        .then(() => {\n                            const obj = groups.find(group => group._id === id);\n\n                            if (obj) {\n                                obj._id = newId;\n                                if (newName !== undefined) {\n                                    obj.common = obj.common || {};\n                                    obj.common.name = newName;\n                                }\n\n                                return this.setObject(obj._id, obj)\n                                    .then(() => this.delObject(id));\n                            }\n                        });\n                }\n            });\n    }\n\n    /**\n     * Sends a message to a specific instance or all instances of some specific adapter.\n     * @param {string} instance The instance to send this message to.\n     * @param {string} [command] Command name of the target instance.\n     * @param {ioBroker.MessagePayload} [data] The message data to send.\n     * @returns {Promise<ioBroker.Message | undefined>}\n     */\n    sendTo(instance, command, data) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise(resolve =>\n            this._socket.emit('sendTo', instance, command, data, result =>\n                resolve(result)));\n    }\n\n    /**\n     * Extend an object and create it if it might not exist.\n     * @param {string} id The id.\n     * @param {ioBroker.PartialObject} obj The object.\n     */\n    extendObject(id, obj) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        obj = JSON.parse(JSON.stringify(obj));\n\n        if (obj.hasOwnProperty('from')) {\n            delete obj.from;\n        }\n        if (obj.hasOwnProperty('user')) {\n            delete obj.user;\n        }\n        if (obj.hasOwnProperty('ts')) {\n            delete obj.ts;\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('extendObject', id, obj, err => err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Register a handler for log messages.\n     * @param {(message: string) => void} handler The handler.\n     */\n    registerLogHandler(handler) {\n        !this.onLogHandlers.includes(handler) && this.onLogHandlers.push(handler);\n    }\n\n    /**\n     * Unregister a handler for log messages.\n     * @param {(message: string) => void} handler The handler.\n     */\n    unregisterLogHandler(handler) {\n        const pos = this.onLogHandlers.indexOf(handler);\n        pos !== -1 && this.onLogHandlers.splice(pos, 1);\n    }\n\n    /**\n     * Register a handler for the connection state.\n     * @param {(connected: boolean) => void} handler The handler.\n     */\n    registerConnectionHandler(handler) {\n        !this.onConnectionHandlers.includes(handler) && this.onConnectionHandlers.push(handler);\n    }\n\n    /**\n     * Unregister a handler for the connection state.\n     * @param {(connected: boolean) => void} handler The handler.\n     */\n    unregisterConnectionHandler(handler) {\n        const pos = this.onConnectionHandlers.indexOf(handler);\n        pos !== -1 && this.onConnectionHandlers.splice(pos, 1);\n    }\n\n    /**\n     * Set the handler for standard output of a command.\n     * @param {(id: string, text: string) => void} handler The handler.\n     */\n    registerCmdStdoutHandler(handler) {\n        this.onCmdStdoutHandler = handler;\n    }\n\n    /**\n     * Unset the handler for standard output of a command.\n     * @param {(id: string, text: string) => void} handler The handler.\n     */\n    unregisterCmdStdoutHandler(handler) {\n        this.onCmdStdoutHandler = null;\n    }\n\n    /**\n     * Set the handler for standard error of a command.\n     * @param {(id: string, text: string) => void} handler The handler.\n     */\n    registerCmdStderrHandler(handler) {\n        this.onCmdStderrHandler = handler;\n    }\n\n    /**\n     * Unset the handler for standard error of a command.\n     * @param {(id: string, text: string) => void} handler The handler.\n     */\n    unregisterCmdStderrHandler(handler) {\n        this.onCmdStderrHandler = null;\n    }\n\n    /**\n     * Set the handler for exit of a command.\n     * @param {(id: string, exitCode: number) => void} handler The handler.\n     */\n    registerCmdExitHandler(handler) {\n        this.onCmdExitHandler = handler;\n    }\n\n    /**\n     * Unset the handler for exit of a command.\n     * @param {(id: string, exitCode: number) => void} handler The handler.\n     */\n    unregisterCmdExitHandler(handler) {\n        this.onCmdExitHandler = null;\n    }\n\n    /**\n     * Get all enums with the given name.\n     * @param {string} [_enum] The name of the enum\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<Record<string, ioBroker.Object>>}\n     */\n    getEnums(_enum, update) {\n        if (!update && this._promises['enums_' + (_enum || 'all')]) {\n            return this._promises['enums_' + (_enum || 'all')];\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises['enums_' + (_enum || 'all')] = new Promise((resolve, reject) => {\n            this._socket.emit('getObjectView', 'system', 'enum', { startkey: 'enum.' + (_enum || ''), endkey: 'enum.' + (_enum ? (_enum + '.') : '') + '\\u9999' }, (err, res) => {\n                if (!err && res) {\n                    const _res = {};\n                    for (let i = 0; i < res.rows.length; i++) {\n                        if (_enum && res.rows[i].id === 'enum.' + _enum) {\n                            continue;\n                        }\n                        _res[res.rows[i].id] = res.rows[i].value;\n                    }\n                    resolve(_res);\n                } else {\n                    reject(err);\n                }\n            });\n        });\n\n        return this._promises['enums_' + (_enum || 'all')];\n    }\n\n    /**\n     * Query a predefined object view.\n     * @param {string} start The start ID.\n     * @param {string} end The end ID.\n     * @param {string} type The type of object.\n     * @returns {Promise<Record<string, ioBroker.Object>>}\n     */\n    getObjectView(start, end, type) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        start = start || '';\n        end   = end   || '\\u9999';\n\n        return new Promise((resolve, reject) => {\n            this._socket.emit('getObjectView', 'system', type, { startkey: start, endkey: end }, (err, res) => {\n                if (!err) {\n                    const _res = {};\n                    if (res && res.rows) {\n                        for (let i = 0; i < res.rows.length; i++) {\n                            _res[res.rows[i].id] = res.rows[i].value;\n                        }\n                    }\n                    resolve(_res);\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n\n    /**\n     * Get the stored certificates.\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<{name: string; type: 'public' | 'private' | 'chained'}[]>}\n     */\n    getCertificates(update) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n\n        if (this._promises.cert && !update) {\n            return this._promises.cert;\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises.cert = this.getObject('system.certificates')\n            .then(res => {\n                const certs = [];\n                if (res && res.native && res.native.certificates) {\n                    Object.keys(res.native.certificates).forEach(c => {\n                        const cert = res.native.certificates[c];\n                        if (!cert) {\n                            return;\n                        }\n                        const _cert = {\n                            name: c,\n                            type: ''\n                        };\n                        // If it is filename, it could be everything\n                        if (cert.length < 700 && (cert.indexOf('/') !== -1 || cert.indexOf('\\\\') !== -1)) {\n                            if (c.toLowerCase().includes('private')) {\n                                _cert.type = 'private';\n                            } else if (cert.toLowerCase().includes('private')) {\n                                _cert.type = 'private';\n                            } else if (c.toLowerCase().includes('public')) {\n                                _cert.type = 'public';\n                            } else if (cert.toLowerCase().includes('public')) {\n                                _cert.type = 'public';\n                            }\n                            certs.push(_cert);\n                        } else {\n                            _cert.type = (cert.substring(0, '-----BEGIN RSA PRIVATE KEY'.length) === '-----BEGIN RSA PRIVATE KEY' || cert.substring(0, '-----BEGIN PRIVATE KEY'.length) === '-----BEGIN PRIVATE KEY') ? 'private' : 'public';\n\n                            if (_cert.type === 'public') {\n                                const m = cert.split('-----END CERTIFICATE-----');\n                                if (m.filter(t => t.replace(/\\r\\n|\\r|\\n/, '').trim()).length > 1) {\n                                    _cert.type = 'chained';\n                                }\n                            }\n\n                            certs.push(_cert);\n                        }\n                    });\n                }\n                return certs;\n            });\n\n        return this._promises.cert;\n    }\n\n    /**\n     * Get the logs from a host (only for admin connection).\n     * @param {string} host\n     * @param {number} [linesNumber]\n     * @returns {Promise<string[]>}\n     */\n    getLogs(host, linesNumber) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise(resolve =>\n            this._socket.emit('sendToHost', host, 'getLogs', linesNumber || 200, lines =>\n                resolve(lines)));\n    }\n\n    /**\n     * Get the log files (only for admin connection).\n     * @returns {Promise<string[]>}\n     */\n    getLogsFiles(host) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('readLogs', host, (err, files) =>\n                err ? reject(err) : resolve(files)));\n    }\n\n    /**\n     * Delete the logs from a host (only for admin connection).\n     * @param {string} host\n     * @returns {Promise<void>}\n     */\n    delLogs(host) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('sendToHost', host, 'delLogs', null, error =>\n                error ? reject(error) : resolve()));\n    }\n\n    /**\n     * Read the meta items.\n     * @returns {Promise<ioBroker.Object[]>}\n     */\n    readMetaItems() {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getObjectView', 'system', 'meta', { startkey: '', endkey: '\\u9999' }, (err, objs) =>\n                err ? reject(err) : resolve(objs.rows && objs.rows.map(obj => obj.value))));\n    }\n\n    /**\n     * Read the directory of an adapter.\n     * @param {string} adapter The adapter name.\n     * @param {string} fileName The directory name.\n     * @returns {Promise<ioBroker.ReadDirResult[]>}\n     */\n    readDir(adapter, fileName) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('readDir', adapter, fileName, (err, files) =>\n                err ? reject(err) : resolve(files)));\n    }\n\n    /**\n     * Read a file of an adapter.\n     * @param {string} adapter The adapter name.\n     * @param {string} fileName The file name.\n     * @param {boolean} base64 If it must be a base64 format\n     * @returns {Promise<string>}\n     */\n    readFile(adapter, fileName, base64) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) => {\n            if (!base64) {\n                this._socket.emit('readFile', adapter, fileName, (err, data, type) => {\n                    //@ts-ignore\n                    err ? reject(err) : resolve({data, type});\n                });\n            } else {\n                this._socket.emit('readFile64', adapter, fileName, base64, (err, data) =>\n                    err ? reject(err) : resolve(data));\n            }\n        });\n    }\n\n    /**\n     * Write a file of an adapter.\n     * @param {string} adapter The adapter name.\n     * @param {string} fileName The file name.\n     * @param {Buffer | string} data The data (if it's a Buffer, it will be converted to Base64).\n     * @returns {Promise<void>}\n     */\n    writeFile64(adapter, fileName, data) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) => {\n            if (typeof data === 'string') {\n                this._socket.emit('writeFile', adapter, fileName, data, err =>\n                    err ? reject(err) : resolve());\n            } else {\n                const base64 = btoa(\n                    new Uint8Array(data)\n                        .reduce((data, byte) => data + String.fromCharCode(byte), '')\n                );\n\n                this._socket.emit('writeFile64', adapter, fileName, base64, err =>\n                    err ? reject(err) : resolve());\n            }\n        });\n    }\n\n    /**\n     * Rename a file or folder of an adapter.\n     *\n     * All files in folder will be renamed too.\n     * @param {string} adapter The adapter name.\n     * @param {string} oldName The file name of the file to be renamed.\n     * @param {string} newName The new file name.\n     * @returns {Promise<void>}\n     */\n    rename(adapter, oldName, newName) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('rename', adapter, oldName, newName, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Delete a file of an adapter.\n     * @param {string} adapter The adapter name.\n     * @param {string} fileName The file name.\n     * @returns {Promise<void>}\n     */\n    deleteFile(adapter, fileName) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('unlink', adapter, fileName, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Delete a folder of an adapter.\n     * All files in folder will be deleted.\n     * @param {string} adapter The adapter name.\n     * @param {string} folderName The folder name.\n     * @returns {Promise<void>}\n     */\n    deleteFolder(adapter, folderName) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('deleteFolder', adapter, folderName, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Get the list of all hosts.\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<ioBroker.Object[]>}\n     */\n    getHosts(update) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!update && this._promises.hosts) {\n            return this._promises.hosts;\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises.hosts = new Promise((resolve, reject) =>\n            this._socket.emit(\n                'getObjectView',\n                'system',\n                'host',\n                {startkey: 'system.host.', endkey: 'system.host.\\u9999'},\n                (err, doc) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(doc.rows.map(item => item.value));\n                    }\n                }));\n\n        return this._promises.hosts;\n    }\n\n    /**\n     * Get the list of all users.\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<ioBroker.Object[]>}\n     */\n    getUsers(update) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!update && this._promises.users) {\n            return this._promises.users;\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises.users = new Promise((resolve, reject) =>\n            this._socket.emit(\n                'getObjectView',\n                'system',\n                'user',\n                {startkey: 'system.user.', endkey: 'system.user.\\u9999'},\n                (err, doc) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(doc.rows.map(item => item.value));\n                    }\n                }));\n\n        return this._promises.users;\n    }\n\n    /**\n     * Get the list of all groups.\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<ioBroker.Object[]>}\n     */\n    getGroups(update) {\n        if (!update && this._promises.groups) {\n            return this._promises.groups;\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises.groups = new Promise((resolve, reject) =>\n            this._socket.emit(\n                'getObjectView',\n                'system',\n                'group',\n                {startkey: 'system.group.', endkey: 'system.group.\\u9999'},\n                (err, doc) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(doc.rows.map(item => item.value));\n                    }\n                }));\n\n        return this._promises.groups;\n    }\n\n    /**\n     * Get the host information.\n     * @param {string} host\n     * @param {boolean} [update] Force update.\n     * @param {number} [timeoutMs] optional read timeout.\n     * @returns {Promise<any>}\n     */\n    getHostInfo(host, update, timeoutMs) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!host.startsWith('system.host.')) {\n            host += 'system.host.' + host;\n        }\n\n        if (!update && this._promises['hostInfo' + host]) {\n            return this._promises['hostInfo' + host];\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises['hostInfo' + host] = new Promise((resolve, reject) => {\n            let timeout = setTimeout(() => {\n                if (timeout) {\n                    timeout = null;\n                    reject('getHostInfo timeout');\n                }\n            }, timeoutMs || this.props.cmdTimeout);\n\n            this._socket.emit('sendToHost', host, 'getHostInfo', null, data => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                    if (data === PERMISSION_ERROR) {\n                        reject('May not read \"getHostInfo\"');\n                    } else if (!data) {\n                        reject('Cannot read \"getHostInfo\"');\n                    } else {\n                        resolve(data);\n                    }\n                }\n            });\n        });\n\n        return this._promises['hostInfo' + host];\n    }\n\n    /**\n     * Get the host information (short version).\n     * @param {string} host\n     * @param {boolean} [update] Force update.\n     * @param {number} [timeoutMs] optional read timeout.\n     * @returns {Promise<any>}\n     */\n    getHostInfoShort(host, update, timeoutMs) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!host.startsWith('system.host.')) {\n            host += 'system.host.' + host;\n        }\n\n        if (!update && this._promises['hostInfoShort' + host]) {\n            return this._promises['hostInfoShort' + host];\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises['hostInfoShort' + host] = new Promise((resolve, reject) => {\n            let timeout = setTimeout(() => {\n                if (timeout) {\n                    timeout = null;\n                    reject('hostInfoShort timeout');\n                }\n            }, timeoutMs || this.props.cmdTimeout);\n\n            this._socket.emit('sendToHost', host, 'getHostInfoShort', null, data => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                    if (data === PERMISSION_ERROR) {\n                        reject('May not read \"getHostInfoShort\"');\n                    } else if (!data) {\n                        reject('Cannot read \"getHostInfoShort\"');\n                    } else {\n                        resolve(data);\n                    }\n                }\n            });\n        });\n\n        return this._promises['hostInfoShort' + host];\n    }\n\n    /**\n     * Get the repository.\n     * @param {string} host\n     * @param {any} [args]\n     * @param {boolean} [update] Force update.\n     * @param {number} [timeoutMs] timeout in ms.\n     * @returns {Promise<any>}\n     */\n    getRepository(host, args, update, timeoutMs) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!update && this._promises.repo) {\n            return this._promises.repo;\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        if (!host.startsWith('system.host.')) {\n            host += 'system.host.' + host;\n        }\n\n        this._promises.repo = new Promise((resolve, reject) => {\n            let timeout = setTimeout(() => {\n                if (timeout) {\n                    timeout = null;\n                    reject('getRepository timeout');\n                }\n            }, timeoutMs || this.props.cmdTimeout);\n\n            this._socket.emit('sendToHost', host, 'getRepository', args, data => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                    if (data === PERMISSION_ERROR) {\n                        reject('May not read \"getRepository\"');\n                    } else if (!data) {\n                        reject('Cannot read \"getRepository\"');\n                    } else {\n                        resolve(data);\n                    }\n                }\n            });\n        });\n\n        return this._promises.repo;\n    }\n\n    /**\n     * Get the installed.\n     * @param {string} host\n     * @param {boolean} [update] Force update.\n     * @param {number} [cmdTimeout] timeout in ms (optional)\n     * @returns {Promise<any>}\n     */\n    getInstalled(host, update, cmdTimeout) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n\n        this._promises.installed = this._promises.installed || {};\n\n        if (!update && this._promises.installed[host]) {\n            return this._promises.installed[host];\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        if (!host.startsWith('system.host.')) {\n            host += 'system.host.' + host;\n        }\n\n        this._promises.installed[host] = new Promise((resolve, reject) => {\n            let timeout = setTimeout(() => {\n                if (timeout) {\n                    timeout = null;\n                    reject('getInstalled timeout');\n                }\n            }, cmdTimeout || this.props.cmdTimeout);\n\n            this._socket.emit('sendToHost', host, 'getInstalled', null, data => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                    if (data === PERMISSION_ERROR) {\n                        reject('May not read \"getInstalled\"');\n                    } else if (!data) {\n                        reject('Cannot read \"getInstalled\"');\n                    } else {\n                        resolve(data);\n                    }\n                }\n            });\n        });\n\n        return this._promises.installed[host];\n    }\n\n    /**\n     * Execute a command on a host.\n     * @param {string} host The host name.\n     * @param {string} cmd The command.\n     * @param {string} cmdId The command ID.\n     * @param {number} cmdTimeout Timeout of command in ms\n     * @returns {Promise<void>}\n     */\n    cmdExec(host, cmd, cmdId, cmdTimeout) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        if (!host.startsWith(host)) {\n            host += 'system.host.' + host;\n        }\n\n        return new Promise((resolve, reject) => {\n            let timeout = cmdTimeout && setTimeout(() => {\n                if (timeout) {\n                    timeout = null;\n                    reject('cmdExec timeout');\n                }\n            }, cmdTimeout);\n\n            this._socket.emit('cmdExec', host, cmdId, cmd, null, err => {\n                if (!cmdTimeout || timeout) {\n                    timeout && clearTimeout(timeout);\n                    timeout = null;\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve();\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Checks if a given feature is supported.\n     * @param {string} feature The feature to check.\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<any>}\n     */\n    checkFeatureSupported(feature, update) {\n        if (!update && this._promises['supportedFeatures_' + feature]) {\n            return this._promises['supportedFeatures_' + feature];\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises['supportedFeatures_' + feature] = new Promise((resolve, reject) =>\n            this._socket.emit('checkFeatureSupported', feature, (err, features) => {\n                err ? reject(err) : resolve(features)\n            }));\n\n        return this._promises['supportedFeatures_' + feature];\n    }\n\n    /**\n     * Read the base settings of a given host.\n     * @param {string} host\n     * @returns {Promise<any>}\n     */\n    readBaseSettings(host) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        return this.checkFeatureSupported('CONTROLLER_READWRITE_BASE_SETTINGS')\n            .then(result => {\n                if (result) {\n                    if (!this.connected) {\n                        return Promise.reject(NOT_CONNECTED);\n                    }\n                    return new Promise((resolve, reject) => {\n                        let timeout = setTimeout(() => {\n                            if (timeout) {\n                                timeout = null;\n                                reject('readBaseSettings timeout');\n                            }\n                        }, this.props.cmdTimeout);\n\n                        if (host.startsWith('system.host.')) {\n                            host = host.replace(/^system\\.host\\./, '');\n                        }\n\n                        this._socket.emit('sendToHost', host, 'readBaseSettings', null, data => {\n                            if (timeout) {\n                                clearTimeout(timeout);\n                                timeout = null;\n\n                                if (data === PERMISSION_ERROR) {\n                                    reject('May not read \"BaseSettings\"');\n                                } else if (!data) {\n                                    reject('Cannot read \"BaseSettings\"');\n                                } else {\n                                    resolve(data);\n                                }\n                            }\n                        });\n                    });\n                } else {\n                    return Promise.reject('Not supported');\n                }\n            });\n    }\n\n    /**\n     * Write the base settings of a given host.\n     * @param {string} host\n     * @param {any} config\n     * @returns {Promise<any>}\n     */\n    writeBaseSettings(host, config) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        return this.checkFeatureSupported('CONTROLLER_READWRITE_BASE_SETTINGS')\n            .then(result => {\n                if (result) {\n                    if (!this.connected) {\n                        return Promise.reject(NOT_CONNECTED);\n                    }\n                    return new Promise((resolve, reject) => {\n                        let timeout = setTimeout(() => {\n                            if (timeout) {\n                                timeout = null;\n                                reject('writeBaseSettings timeout');\n                            }\n                        }, this.props.cmdTimeout);\n\n                        this._socket.emit('sendToHost', host, 'writeBaseSettings', config, data => {\n                            if (timeout) {\n                                clearTimeout(timeout);\n                                timeout = null;\n\n                                if (data === PERMISSION_ERROR) {\n                                    reject('May not write \"BaseSettings\"');\n                                } else if (!data) {\n                                    reject('Cannot write \"BaseSettings\"');\n                                } else {\n                                    resolve(data);\n                                }\n                            }\n                        });\n                    });\n                } else {\n                    return Promise.reject('Not supported');\n                }\n            })\n    }\n\n    /**\n     * Send command to restart the iobroker on host\n     * @param {string} host\n     * @returns {Promise<any>}\n     */\n    restartController(host) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        return new Promise((resolve, reject) => {\n            this._socket.emit('sendToHost', host, 'restartController', null, error => {\n                error ? reject(error) : resolve(true);\n            });\n        });\n    }\n\n    /**\n     * Read statistics information from host\n     * @param {string} host\n     * @param {string} typeOfDiag one of none, normal, no-city, extended\n     * @returns {Promise<any>}\n     */\n    getDiagData(host, typeOfDiag) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        return new Promise(resolve => {\n            this._socket.emit('sendToHost', host, 'getDiagData', typeOfDiag, result =>\n                resolve(result));\n        });\n    }\n\n    /**\n     * Read all states (which might not belong to this adapter) which match the given pattern.\n     * @param {string} pattern\n     * @returns {ioBroker.GetStatesPromise}\n     */\n    getForeignStates(pattern) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        if (Connection.isWeb()) {\n            return new Promise((resolve, reject) =>\n                this._socket.emit('getStates', pattern || '*', (err, states) =>\n                    err ? reject(err) : resolve(states)));\n        } else {\n            return new Promise((resolve, reject) =>\n                this._socket.emit('getForeignStates', pattern || '*', (err, states) =>\n                    err ? reject(err) : resolve(states)));\n        }\n    }\n\n    /**\n     * Get foreign objects by pattern, by specific type and resolve their enums.\n     * @param {string} pattern\n     * @param {string} [type]\n     * @returns {ioBroker.GetObjectsPromise}\n     */\n    getForeignObjects(pattern, type) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getForeignObjects', pattern || '*', type, (err, states) =>\n                err ? reject(err) : resolve(states)));\n    }\n\n    /**\n     * Gets the system configuration.\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<ioBroker.OtherObject>}\n     */\n    getSystemConfig(update) {\n        if (!update && this._promises.systemConfig) {\n            return this._promises.systemConfig;\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises.systemConfig = this.getObject('system.config')\n            .then(systemConfig => {\n                //@ts-ignore\n                systemConfig = systemConfig || {};\n                //@ts-ignore\n                systemConfig.common = systemConfig.common || {};\n                //@ts-ignore\n                systemConfig.native = systemConfig.native || {};\n                return systemConfig;\n            });\n\n        return this._promises.systemConfig;\n    }\n\n    /**\n     * Sets the system configuration.\n     * @param {ioBroker.SettableObjectWorker<ioBroker.OtherObject>} obj\n     * @returns {Promise<ioBroker.SettableObjectWorker<ioBroker.OtherObject>>}\n     */\n    setSystemConfig(obj) {\n        return this.setObject('system.config', obj)\n            .then(() => this._promises.systemConfig = Promise.resolve(obj));\n    }\n\n    /**\n     * Get the raw socket.io socket.\n     * @returns {any}\n     */\n    getRawSocket() {\n        return this._socket;\n    }\n\n    /**\n     * Get the history of a given state.\n     * @param {string} id\n     * @param {ioBroker.GetHistoryOptions} options\n     * @returns {Promise<ioBroker.GetHistoryResult>}\n     */\n    getHistory(id, options) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getHistory', id, options, (err, values) =>\n                err ? reject(err) : resolve(values)));\n    }\n\n    /**\n     * Get the history of a given state.\n     * @param {string} id\n     * @param {ioBroker.GetHistoryOptions} options\n     * @returns {Promise<{values: ioBroker.GetHistoryResult; sesionId: string; stepIgnore: number}>}\n     */\n    getHistoryEx(id, options) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getHistory', id, options, (err, values, stepIgnore, sessionId) =>\n                err ? reject(err) : resolve({ values, sessionId, stepIgnore })));\n    }\n\n    /**\n     * Change the password of the given user.\n     * @param {string} user\n     * @param {string} password\n     * @returns {Promise<void>}\n     */\n    changePassword(user, password) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('changePassword', user, password, err =>\n                err ? reject(err) : resolve()));\n    }\n\n    /**\n     * Get the IP addresses of the given host.\n     * @param {string} host\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<string[]>}\n     */\n    getIpAddresses(host, update) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!host.startsWith('system.host.')) {\n            host = 'system.host.' + host;\n        }\n\n        if (!update && this._promises['IPs_' + host]) {\n            return this._promises['IPs_' + host];\n        }\n        this._promises['IPs_' + host] = this.getObject(host)\n            .then(obj => obj && obj.common ? obj.common.address || [] : []);\n\n        return this._promises['IPs_' + host];\n    }\n\n    /**\n     * Get the IP addresses with interface names of the given host or find host by IP.\n     * @param {string} ipOrHostName\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<any[<name, address, family>]>}\n     */\n    getHostByIp(ipOrHostName, update) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (ipOrHostName.startsWith('system.host.')) {\n            ipOrHostName = ipOrHostName.replace(/^system\\.host\\./, '');\n        }\n\n        if (!update && this._promises['rIPs_' + ipOrHostName]) {\n            return this._promises['rIPs_' + ipOrHostName];\n        }\n        this._promises['rIPs_' + ipOrHostName] = new Promise(resolve =>\n            this._socket.emit('getHostByIp', ipOrHostName, (ip, host) => {\n                const IPs4 = [{name: '[IPv4] 0.0.0.0 - Listen on all IPs', address: '0.0.0.0', family: 'ipv4'}];\n                const IPs6 = [{name: '[IPv6] :: - Listen on all IPs',      address: '::',      family: 'ipv6'}];\n                if (host?.native?.hardware?.networkInterfaces) {\n                    for (const eth in host.native.hardware.networkInterfaces) {\n                        if (!host.native.hardware.networkInterfaces.hasOwnProperty(eth)) {\n                            continue;\n                        }\n                        for (let num = 0; num < host.native.hardware.networkInterfaces[eth].length; num++) {\n                            if (host.native.hardware.networkInterfaces[eth][num].family !== 'IPv6') {\n                                IPs4.push({name: `[${host.native.hardware.networkInterfaces[eth][num].family}] ${host.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, address: host.native.hardware.networkInterfaces[eth][num].address, family: 'ipv4'});\n                            } else {\n                                IPs6.push({name: `[${host.native.hardware.networkInterfaces[eth][num].family}] ${host.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, address: host.native.hardware.networkInterfaces[eth][num].address, family: 'ipv6'});\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < IPs6.length; i++) {\n                    IPs4.push(IPs6[i]);\n                }\n                resolve(IPs4);\n            }));\n\n        return this._promises['rIPs_' + ipOrHostName];\n    }\n\n    /**\n     * Encrypt a text\n     * @param {string} text\n     * @returns {Promise<string>}\n     */\n    encrypt(text) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('encrypt', text, (err, text) =>\n                err ? reject(err) : resolve(text)));\n    }\n\n    /**\n     * Decrypt a text\n     * @param {string} encryptedText\n     * @returns {Promise<string>}\n     */\n    decrypt(encryptedText) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('decrypt', encryptedText, (err, text) =>\n                err ? reject(err) : resolve(text)));\n    }\n\n    /**\n     * Gets the version.\n     * @returns {Promise<{version: string; serverName: string}>}\n     */\n    getVersion(update) {\n        if (update && this._promises.version) {\n            this._promises.version = null;\n        }\n\n        this._promises.version = this._promises.version || new Promise((resolve, reject) =>\n            this._socket.emit('getVersion', (err, version, serverName) => {\n                // support of old socket.io\n                if (err && !version && typeof err === 'string' && err.match(/\\d+\\.\\d+\\.\\d+/)) {\n                    resolve({ version: err, serverName: 'socketio' });\n                } else {\n                    return err ? reject(err) : resolve({ version, serverName });\n                }\n            }));\n\n        return this._promises.version;\n    }\n\n    /**\n     * Gets the web server name.\n     * @returns {Promise<string>}\n     */\n    getWebServerName() {\n        this._promises.webName = this._promises.webName || new Promise((resolve, reject) =>\n            this._socket.emit('getAdapterName', (err, name) =>\n                err ? reject(err) : resolve(name)));\n\n        return this._promises.webName;\n    }\n\n    /**\n     * Gets the admin version.\n     * @deprecated use getVersion()\n     * @returns {Promise<{version: string; serverName: string}>}\n     */\n    getAdminVersion() {\n        console.log('Deprecated: use getVersion');\n        return this.getVersion();\n    }\n\n    /**\n     * Change access rights for file\n     * @param {string} [adapter] adapter name\n     * @param {string} [filename] file name with full path. it could be like vis.0/*\n     * @param {object} [options] like {mode: 0x644}\n     * @returns {Promise<{entries: array}>}\n     */\n    chmodFile(adapter, filename, options) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('chmodFile', adapter, filename, options, (err, entries, id) =>\n                err ? reject(err) : resolve({entries, id})));\n    }\n\n    /**\n     * Change owner or/and owner group for file\n     * @param {string} [adapter] adapter name\n     * @param {string} [filename] file name with full path. it could be like vis.0/*\n     * @param {object} [options] like {owner: 'newOwner', ownerGroup: 'newGroup'}\n     * @returns {Promise<{entries: array}>}\n     */\n    chownFile(adapter, filename, options) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('chownFile', adapter, filename, options, (err, entries, id) =>\n                err ? reject(err) : resolve({entries, id})));\n    }\n\n    /**\n     * Check if the file exists\n     * @param {string} [adapter] adapter name\n     * @param {string} [filename] file name with full path. it could be like vis.0/*\n     * @returns {Promise<boolean>}\n     */\n    fileExists(adapter, filename) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('fileExists', adapter, filename, (err, exists) =>\n                err ? reject(err) : resolve(exists)));\n    }\n\n    /**\n     * Get the alarm notifications from a host (only for admin connection).\n     * @param {string} host\n     * @param {string} [category] - optional\n     * @returns {Promise<any>}\n     */\n    getNotifications(host, category) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise(resolve =>\n            this._socket.emit('sendToHost', host, 'getNotifications', {category}, notifications =>\n                resolve(notifications)));\n    }\n\n    /**\n     * Clear the alarm notifications on a host (only for admin connection).\n     * @param {string} host\n     * @param {string} [category] - optional\n     * @returns {Promise<any>}\n     */\n    clearNotifications(host, category) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise(resolve =>\n            this._socket.emit('sendToHost', host, 'clearNotifications', {category}, notifications =>\n                resolve(notifications)));\n    }\n\n    /**\n     * Read if only easy mode is allowed  (only for admin connection).\n     * @returns {Promise<boolean>}\n     */\n    getIsEasyModeStrict() {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getIsEasyModeStrict', (error, isStrict) =>\n                error ? reject(error) : resolve(isStrict)));\n    }\n\n    /**\n     * Read easy mode configuration (only for admin connection).\n     * @returns {Promise<any>}\n     */\n    getEasyMode() {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getEasyMode', (error, config) =>\n                error ? reject(error) : resolve(config)));\n    }\n\n    /**\n     * Read current user\n     * @returns {Promise<string>}\n     */\n    getCurrentUser() {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise(resolve =>\n            this._socket.emit('authEnabled', (isSecure, user) =>\n                resolve(user)));\n    }\n\n    getCurrentSession(cmdTimeout) {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise((resolve, reject) => {\n            const controller = new AbortController();\n\n            let timeout = setTimeout(() => {\n                if (timeout) {\n                    timeout = null;\n                    controller.abort();\n                    reject('getCurrentSession timeout');\n                }\n            }, cmdTimeout || 5000);\n\n            return fetch('./session', { signal: controller.signal })\n                .then(res => res.json())\n                .then(json => {\n                    if (timeout) {\n                        clearTimeout(timeout);\n                        timeout = null;\n                        resolve(json);\n                    }\n                })\n                .catch(e =>\n                    reject('getCurrentSession: ' + e));\n        });\n    }\n\n    /**\n     * Read adapter ratings\n     * @returns {Promise<any>}\n     */\n    getRatings(update) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        return new Promise((resolve, reject) =>\n            this._socket.emit('getRatings', update, (err, ratings) =>\n                err ? reject(err) : resolve(ratings)));\n    }\n\n    /**\n     * Read current web, socketio or admin namespace, like admin.0\n     * @returns {Promise<string>}\n     */\n    getCurrentInstance() {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises.currentInstance = this._promises.currentInstance ||\n            new Promise((resolve, reject) =>\n                this._socket.emit('getCurrentInstance', (err, namespace) =>\n                    err ? reject(err) : resolve(namespace)));\n\n        return this._promises.currentInstance;\n    }\n\n    // returns very optimized information for adapters to minimize connection load\n    getCompactAdapters(update) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!update && this._promises.compactAdapters) {\n            return this._promises.compactAdapters;\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n        this._promises.compactAdapters = new Promise((resolve, reject) =>\n            this._socket.emit('getCompactAdapters', (err, adapters) =>\n                err ? reject(err) : resolve(adapters)));\n\n        return this._promises.compactAdapters;\n    }\n\n    // returns very optimized information for adapters to minimize connection load\n    getCompactInstances(update) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!update && this._promises.compactInstances) {\n            return this._promises.compactInstances;\n        }\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises.compactInstances = new Promise((resolve, reject) =>\n            this._socket.emit('getCompactInstances', (err, instances) =>\n                err ? reject(err) : resolve(instances)));\n\n        return this._promises.compactInstances;\n    }\n\n    // returns very optimized information for adapters to minimize connection load\n    // reads only version of installed adapter\n    getCompactInstalled(host, update, cmdTimeout) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n\n        this._promises.installedCompact = this._promises.installedCompact || {};\n\n        if (!update && this._promises.installedCompact[host]) {\n            return this._promises.installedCompact[host];\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        if (!host.startsWith('system.host.')) {\n            host += 'system.host.' + host;\n        }\n\n        this._promises.installedCompact[host] = new Promise((resolve, reject) => {\n            let timeout = setTimeout(() => {\n                if (timeout) {\n                    timeout = null;\n                    reject('getCompactInstalled timeout');\n                }\n            }, cmdTimeout || this.props.cmdTimeout);\n\n            this._socket.emit('getCompactInstalled', host, data => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                    if (data === PERMISSION_ERROR) {\n                        reject('May not read \"getCompactInstalled\"');\n                    } else if (!data) {\n                        reject('Cannot read \"getCompactInstalled\"');\n                    } else {\n                        resolve(data);\n                    }\n                }\n            });\n        });\n\n        return this._promises.installedCompact[host];\n    }\n\n    // returns very optimized information for adapters to minimize connection load\n    getCompactSystemConfig(update) {\n        if (!update && this._promises.systemConfigCommon) {\n            return this._promises.systemConfigCommon;\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises.systemConfigCommon = new Promise((resolve, reject) =>\n            this._socket.emit('getCompactSystemConfig', (err, systemConfig) =>\n                err ? reject(err) : resolve(systemConfig)));\n\n        return this._promises.systemConfigCommon;\n    }\n\n    /**\n     * Get the repository in compact form (only version and icon).\n     * @param {string} host\n     * @param {boolean} [update] Force update.\n     * @param {number} [timeoutMs] timeout in ms.\n     * @returns {Promise<any>}\n     */\n    getCompactRepository(host, update, timeoutMs) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!update && this._promises.repoCompact) {\n            return this._promises.repoCompact;\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        if (!host.startsWith('system.host.')) {\n            host += 'system.host.' + host;\n        }\n\n        this._promises.repoCompact = new Promise((resolve, reject) => {\n            let timeout = setTimeout(() => {\n                if (timeout) {\n                    timeout = null;\n                    reject('getCompactRepository timeout');\n                }\n            }, timeoutMs || this.props.cmdTimeout);\n\n            this._socket.emit('getCompactRepository', host, data => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                    if (data === PERMISSION_ERROR) {\n                        reject('May not read \"getCompactRepository\"');\n                    } else if (!data) {\n                        reject('Cannot read \"getCompactRepository\"');\n                    } else {\n                        resolve(data);\n                    }\n                }\n            });\n        });\n\n        return this._promises.repoCompact;\n    }\n\n    /**\n     * Get the list of all hosts in compact form (only _id, common.name, common.icon, common.color, native.hardware.networkInterfaces)\n     * @param {boolean} [update] Force update.\n     * @returns {Promise<ioBroker.Object[]>}\n     */\n    getCompactHosts(update) {\n        if (Connection.isWeb()) {\n            return Promise.reject('Allowed only in admin');\n        }\n        if (!update && this._promises.hostsCompact) {\n            return this._promises.hostsCompact;\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises.hostsCompact = new Promise((resolve, reject) =>\n            this._socket.emit('getCompactHosts', (err, hosts) =>\n                err ? reject(err) : resolve(hosts)));\n\n        return this._promises.hostsCompact;\n    }\n\n    /**\n     * Get uuid\n     * @returns {Promise<ioBroker.Object[]>}\n     */\n    getUuid() {\n        if (this._promises.uuid) {\n            return this._promises.uuid;\n        }\n\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        this._promises.uuid = this.getObject('system.meta.uuid')\n            //@ts-ignore\n            .then(obj => obj?.native?.uuid);\n\n        return this._promises.uuid;\n    }\n\n    /**\n     * Send log to ioBroker log\n     * @param {string} [text] Log text\n     * @param {string} [level] `info`, `debug`, `warn`, `error` or `silly`\n     * @returns {void}\n     */\n    log(text, level) {\n        text && this._socket.emit('log', text, level || 'debug');\n    }\n\n    /**\n     * Logout current user\n     * @returns {Promise<null>}\n     */\n    logout() {\n        if (!this.connected) {\n            return Promise.reject(NOT_CONNECTED);\n        }\n\n        return new Promise((resolve, reject) =>\n            this._socket.emit('logout', err =>\n                err ? reject(err) : resolve(null)));\n    }\n}\n\nConnection.Connection = {\n    onLog: PropTypes.func,\n    onReady: PropTypes.func,\n    onProgress: PropTypes.func,\n};\n\nexport default Connection;\n","/**\n * Copyright 2018-2022 bluefox <dogafox@gmail.com>\n *\n * MIT License\n *\n **/\n// please do not delete React, as without it other projects could not be compiled: ReferenceError: React is not defined\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@mui/styles/withStyles';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport IconCheck from '@mui/icons-material/Check';\n\nimport I18n from '../i18n';\n\nconst styles = theme => ({\n    titleBackground: {\n\n    },\n    titleColor: {\n\n    }\n});\n\n/**\n * @typedef {object} DialogErrorProps\n * @property {string} [key] The key to identify this component.\n * @property {string} [title] The dialog title; default: Error (translated)\n * @property {string | JSX.Element} text The dialog text.\n * @property {() => void} [onClose] Close handler.\n * @property {{titleBackground: string; titleColor: string}} classes The styling class names.\n *\n * @extends {React.Component<DialogErrorProps>}\n */\nclass DialogError extends React.Component {\n    handleOk() {\n        this.props.onClose && this.props.onClose();\n    };\n\n    render() {\n        return <Dialog\n            open={true}\n            maxWidth=\"sm\"\n            fullWidth={true}\n            onClose={() => this.handleOk()}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle className={this.props.classes.titleBackground}\n                         classes={{root: this.props.classes.titleColor}}\n                         id=\"alert-dialog-title\">{this.props.title || I18n.t('ra_Error')}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {this.props.text || I18n.t('ra_Unknown error!')}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"contained\" onClick={() => this.handleOk()} color=\"primary\" autoFocus startIcon={<IconCheck />}>{I18n.t('ra_Ok')}</Button>\n            </DialogActions>\n        </Dialog>;\n    }\n}\n\nDialogError.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element\n    ]),\n    icon: PropTypes.object\n};\n\n/** @type {typeof DialogError} */\nconst _export = withStyles(styles)(DialogError);\nexport default _export;\n","\n/**\n * Print the ioBroker welcome screen to the developer console.\n */\nfunction printPrompt() {\n    const prompt = `\n██╗ ██████╗ ██████╗ ██████╗  ██████╗ ██╗  ██╗███████╗██████╗ \n██║██╔═══██╗██╔══██╗██╔══██╗██╔═══██╗██║ ██╔╝██╔════╝██╔══██╗\n██║██║   ██║██████╔╝██████╔╝██║   ██║█████╔╝ █████╗  ██████╔╝\n██║██║   ██║██╔══██╗██╔══██╗██║   ██║██╔═██╗ ██╔══╝  ██╔══██╗\n██║╚██████╔╝██████╔╝██║  ██║╚██████╔╝██║  ██╗███████╗██║  ██║\n╚═╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝\n`;\n\n    console.log(prompt);\n    console.log('Nice to see you here! :) Join our dev community here https://github.com/ioBroker/ioBroker or here https://github.com/iobroker-community-adapters');\n    console.log('Help us to create open source project with reactJS!');\n    console.log('See you :)');\n}\n\nexport default printPrompt;","import {createTheme, adaptV4Theme, alpha} from '@mui/material/styles';\n\nimport {orange, grey} from '@mui/material/colors';\n\nconst step = (16 - 5) / 23 / 100;\n\n/**\n * Convert hex color in the format '#rrggbb' or '#rgb' to an RGB object.\n * @param {string} hex\n * @returns {{r: number, g: number, b: number}}\n */\nfunction toInt(hex) {\n    const rgb = {\n        r: 0,\n        g: 0,\n        b: 0,\n    };\n\n    if (hex.length === 7) {\n        rgb.r = parseInt(hex.substr(1, 2), 16);\n        rgb.g = parseInt(hex.substr(3, 2), 16);\n        rgb.b = parseInt(hex.substr(5, 2), 16);\n    } else if (hex.length === 4) {\n        const r = hex.substr(1, 1);\n        const g = hex.substr(2, 1);\n        const b = hex.substr(3, 1);\n\n        rgb.r = parseInt(r + r, 16);\n        rgb.g = parseInt(g + g, 16);\n        rgb.b = parseInt(b + b, 16);\n    }\n\n    return rgb;\n}\n\n/**\n * Convert an RGB object to a hex color string in the format '#rrggbb'.\n * @param {{r: number, g: number, b: number}} int\n * @returns {string}\n */\nfunction toHex(int) {\n    return `#${Math.round(int.r).toString(16)}${Math.round(int.g).toString(16)}${Math.round(int.b).toString(16)}`;\n}\n\n/**\n * @param {string} color color in the format '#rrggbb' or '#rgb'\n * @param {string} overlayColor overlay color in the format '#rrggbb' or '#rgb'\n * @param {number} elevation elevation as an integer starting with 1\n * @returns {string} the hex color string in the format '#rrggbb'\n */\nfunction getElevation(color, overlayColor, elevation) {\n    const rgb = toInt(color);\n    const overlay = toInt(overlayColor);\n\n    rgb.r += overlay.r * (0.05 + step * (elevation - 1));\n    rgb.g += overlay.g * (0.05 + step * (elevation - 1));\n    rgb.b += overlay.b * (0.05 + step * (elevation - 1));\n\n    return toHex(rgb);\n}\n\n/**\n * Get all 24 elevations of the given color and overlay.\n * @param {string} color color in the format '#rrggbb' or '#rgb'\n * @param {string} overlay overlay color in the format '#rrggbb' or '#rgb'\n * @returns {import('@mui/material/styles/withStyles').CSSProperties}\n */\nfunction getElevations(color, overlay) {\n    /** @type {import('@mui/material/styles/withStyles').CSSProperties} */\n    const elevations = {};\n\n    for (let i = 1; i <= 24; i++) {\n        elevations[`elevation${i}`] = {\n            backgroundColor: getElevation(color, overlay, i),\n        };\n    }\n\n    return elevations;\n}\n\nconst buttonsPalette = theme => ({\n    palette: {\n        // mode: \"dark\",\n        grey: {\n            main: grey[300],\n            dark: grey[400],\n        },\n    },\n});\n\nconst buttonsTheme = theme => ({\n    components: {\n        MuiButton: {\n            variants: [\n                {\n                    props: {variant: 'contained', color: 'grey'},\n                    style: {\n                        color: theme.palette.getContrastText(theme.palette.grey[300]),\n                    },\n                },\n                {\n                    props: {variant: 'outlined', color: 'grey'},\n                    style: {\n                        color: theme.palette.text.primary,\n                        borderColor:\n                            theme.palette.mode === 'light'\n                                ? 'rgba(0, 0, 0, 0.23)'\n                                : 'rgba(255, 255, 255, 0.23)',\n                        '&.Mui-disabled': {\n                            border: `1px solid ${theme.palette.action.disabledBackground}`,\n                        },\n                        '&:hover': {\n                            borderColor:\n                                theme.palette.mode === 'light'\n                                    ? 'rgba(0, 0, 0, 0.23)'\n                                    : 'rgba(255, 255, 255, 0.23)',\n                            backgroundColor: alpha(\n                                theme.palette.text.primary,\n                                theme.palette.action.hoverOpacity,\n                            ),\n                        },\n                    },\n                },\n                {\n                    props: {color: 'grey', variant: 'text'},\n                    style: {\n                        color: 'black',\n                        '&:hover': {\n                            backgroundColor: alpha(\n                                theme.palette.text.primary,\n                                theme.palette.action.hoverOpacity,\n                            ),\n                        },\n                    },\n                },\n            ],\n        },\n    },\n});\n\n/**\n * The theme creation factory function.\n * @param {string} type\n * @returns {import('./types').Theme}\n */\nconst Theme = type => {\n    let theme;\n    if (type === 'dark') {\n        theme = {\n            name: type,\n            palette: {\n                mode: 'dark',\n                background: {\n                    paper: '#121212',\n                    default: '#121212',\n                },\n                primary: {\n                    main: '#4dabf5',\n                },\n                secondary: {\n                    main: '#436a93',\n                },\n                expert: '#14bb00',\n                text: {\n                    primary: '#ffffff',\n                    secondary: '#ffffff',\n                },\n            },\n            overrides: {\n                MuiAppBar: {\n                    colorDefault: {\n                        backgroundColor: '#272727',\n                    },\n                },\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[200],\n                        '&:hover': {\n                            color: orange[100],\n                        },\n                    },\n                },\n                MuiPaper: getElevations('#121212', '#fff'),\n            },\n        };\n    } else if (type === 'blue') {\n        theme = {\n            name: type,\n            palette: {\n                mode: 'dark',\n                background: {\n                    paper: '#151d21',\n                    default: '#151d21',\n                },\n                primary: {\n                    main: '#4dabf5',\n                },\n                secondary: {\n                    main: '#436a93',\n                },\n                expert: '#14bb00',\n                text: {\n                    primary: '#ffffff',\n                    secondary: '#ffffff',\n                },\n            },\n            overrides: {\n                MuiAppBar: {\n                    colorDefault: {\n                        backgroundColor: '#2a3135',\n                    },\n                },\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[200],\n                        '&:hover': {\n                            color: orange[100],\n                        },\n                    },\n                },\n                MuiPaper: getElevations('#151d21', '#fff'),\n            },\n        };\n    } else if (type === 'colored') {\n        theme = {\n            name: type,\n            palette: {\n                mode: 'light',\n                primary: {\n                    main: '#3399CC',\n                },\n                secondary: {\n                    main: '#164477',\n                },\n                expert: '#96fc96',\n            },\n            overrides: {\n                MuiAppBar: {\n                    colorDefault: {\n                        backgroundColor: '#3399CC',\n                    },\n                },\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[400],\n                        '&:hover': {\n                            color: orange[300],\n                        },\n                    },\n                },\n            },\n        };\n    } else if (type === 'PT') {\n        theme = {\n            name: type,\n            palette: {\n                mode: 'light',\n                primary: {\n                    main: '#0F99DE',\n                },\n                secondary: {\n                    main: '#88A536',\n                },\n                expert: '#BD1B24',\n            },\n            overrides: {\n                MuiAppBar: {\n                    colorDefault: {\n                        backgroundColor: '#0F99DE',\n                    },\n                },\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[400],\n                        '&:hover': {\n                            color: orange[300],\n                        },\n                    },\n                },\n            },\n        };\n    } else if (type === 'DX') {\n        theme = {\n            name: type,\n            palette: {\n                mode: 'light',\n                primary: {\n                    main: '#F5F5F7',\n                },\n                secondary: {\n                    main: '#a9a9a9',\n                },\n                expert: '#BD1B24',\n                text: {\n                    primary: '#007AFE',\n                    secondary: '#007AFE',\n                    disabled: '#007AFEAA',\n                },\n            },\n            overrides: {\n                MuiAppBar: {\n                    colorDefault: {\n                        backgroundColor: '#a9a9a9',\n                    },\n                },\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[400],\n                        '&:hover': {\n                            color: orange[300],\n                        },\n                    },\n                },\n            },\n        };\n    } else {\n        theme = {\n            name: type,\n            palette: {\n                mode: 'light',\n                primary: {\n                    main: '#3399CC',\n                },\n                secondary: {\n                    main: '#164477',\n                },\n                expert: '#14bb00',\n            },\n            overrides: {\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[400],\n                        '&:hover': {\n                            color: orange[300],\n                        },\n                    },\n                },\n            },\n        };\n    }\n\n    theme.toolbar = {\n        height: 48,\n    };\n\n    // add save toolbar\n    theme.saveToolbar = {\n        background: theme.palette.primary.main,\n        button: {\n            borderRadius: 3,\n            height: 32,\n        },\n    };\n\n    theme.palette.grey = {\n        main: grey[300],\n        dark: grey[400],\n    };\n\n    theme = createTheme(adaptV4Theme(theme));\n\n    return createTheme(theme, {\n        components: {\n            MuiButton: {\n                variants: [\n                    {\n                        props: {variant: 'contained', color: 'grey'},\n                        style: {\n                            color: theme.palette.getContrastText(theme.palette.grey[300]),\n                        },\n                    },\n                    {\n                        props: {variant: 'outlined', color: 'grey'},\n                        style: {\n                            color: theme.palette.text.primary,\n                            borderColor:\n                                theme.palette.mode === 'light'\n                                    ? 'rgba(0, 0, 0, 0.23)'\n                                    : 'rgba(255, 255, 255, 0.23)',\n                            '&.Mui-disabled': {\n                                border: `1px solid ${theme.palette.action.disabledBackground}`,\n                            },\n                            '&:hover': {\n                                borderColor:\n                                    theme.palette.mode === 'light'\n                                        ? 'rgba(0, 0, 0, 0.23)'\n                                        : 'rgba(255, 255, 255, 0.23)',\n                                backgroundColor: alpha(\n                                    theme.palette.text.primary,\n                                    theme.palette.action.hoverOpacity,\n                                ),\n                            },\n                        },\n                    },\n                    {\n                        props: {variant: 'text', color: 'grey'},\n                        style: {\n                            color: theme.palette.text.primary,\n                            '&:hover': {\n                                backgroundColor: alpha(\n                                    theme.palette.text.primary,\n                                    theme.palette.action.hoverOpacity,\n                                ),\n                            },\n                        },\n                    },\n                ],\n            },\n        },\n    });\n};\n\nexport default Theme;\n","/***\n * Copyright 2018-2022 bluefox <dogafox@gmail.com>\n *\n * MIT License\n *\n ***/\n\n /**\n  * Translation string management.\n  */\nclass I18n {\n    /**\n     * List of all languages with their translations.\n     * @type {{ [lang in ioBroker.Languages]?: Record<string, string>; }}\n     */\n    static translations = {};\n\n    /**\n     * The currently displayed language.\n     * @type {ioBroker.Languages}\n     */\n    static lang = window.sysLang || 'en';\n\n    static _disableWarning = false;\n\n    /**\n     * Set the language to display.\n     * @param {ioBroker.Languages} lang\n     */\n    static setLanguage(lang) {\n        if (lang) {\n            I18n.lang = lang;\n        }\n    }\n\n     /**\n      * Add translations\n      * User can provide two types of structures:\n      * - {\"word1\": \"translated word1\", \"word2\": \"translated word2\"}, but in this case the lang must be provided\n      * - {\"word1\": {\"en\": \"translated en word1\", \"de\": \"translated de word1\"}, \"word2\": {\"en\": \"translated en word2\", \"de\": \"translated de word2\"}}, but no lang must be provided\n      * @param {object} words additional words for specific language\n      * @param {ioBroker.Languages} lang\n      */\n     static extendTranslations(words, lang) {\n         try {\n             if (!lang) {\n                 Object.keys(words).forEach(word => {\n                     Object.keys(words[word]).forEach(lang => {\n                         if (!I18n.translations[lang]) {\n                             console.warn(`Used unknown language: ${lang}`);\n                         }\n                         if (!I18n.translations[lang][word]) {\n                             I18n.translations[lang][word] = words[word][lang];\n                         } else if (I18n.translations[lang][word] !== words[word][lang]) {\n                             console.warn(`Translation for word \"${word}\" in \"${lang}\" was ignored: existing = \"${I18n.translations[lang][word]}\", new = ${words[word][lang]}`);\n                         }\n                     });\n                 });\n             } else {\n                 if (!I18n.translations[lang]) {\n                     console.warn(`Used unknown language: ${lang}`);\n                 }\n                 I18n.translations[lang] = I18n.translations[lang] || {};\n                 Object.keys(words)\n                     .forEach(word => {\n                         if (!I18n.translations[lang][word]) {\n                             I18n.translations[lang][word] = words[word];\n                         } else if (I18n.translations[lang][word] !== words[word]) {\n                             console.warn(`Translation for word \"${word}\" in \"${lang}\" was ignored: existing = \"${I18n.translations[lang][word]}\", new = ${words[word]}`);\n                         }\n                     });\n             }\n         } catch (e) {\n             console.error(`Cannot apply translations: ${e}`);\n         }\n    }\n\n    /**\n     * Sets all translations (in all languages).\n     * @param {{ [lang in ioBroker.Languages]?: Record<string, string>; }} translations\n     */\n    static setTranslations(translations) {\n        if (translations) {\n            I18n.translations = translations;\n        }\n    }\n\n    /**\n     * Get the currently chosen language.\n     * @returns {ioBroker.Languages} The current language.\n     */\n    static getLanguage() {\n        return I18n.lang;\n    }\n\n    /**\n     * Translate the given string to the selected language.\n     * @param {string} word The (key) word to look up the string.\n     * @param {string[]} args Optional arguments which will replace the first (second, third, ...) occurrences of %s\n     */\n    static t(word, ...args) {\n        const translation = I18n.translations[I18n.lang];\n        if (translation) {\n            const w = translation[word];\n            if (w) {\n                word = w;\n            } else {\n                I18n._disableWarning && console.log(`Translate: ${word}`);\n            }\n        }\n        for (const arg of args) {\n            word = word.replace('%s', arg);\n        }\n        return word;\n    }\n\n     /**\n      * Disable warning about non-translated words\n      * Required during development\n      * @param {boolean} disable Do the warning should be disabled\n      */\n    static disableWarning(disable) {\n        I18n._disableWarning = !!disable;\n    }\n}\n\n/*I18n.translations = {\n    'en': require('./i18n/en'),\n    'ru': require('./i18n/ru'),\n    'de': require('./i18n/de'),\n};\nI18n.fallbacks = true;\nI18n.t = function () {};*/\n\nexport default I18n;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@mui/material/utils\");","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}