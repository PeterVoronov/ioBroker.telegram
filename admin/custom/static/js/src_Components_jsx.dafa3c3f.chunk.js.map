{"version":3,"sources":["TelegramComponent.jsx","Components.jsx"],"names":[],"mappings":"kcAYA,KAAM,GAAS,IAAO,EAClB,MAAO,CACH,SAAU,GACd,EACA,OAAQ,CACJ,SAAU,GACV,WAAY,MAChB,CACJ,GAEA,MAAM,SAA0B,gBAAc,CAA9C,kCAQI,uBAAgB,IAAM,CAClB,OAAO,MAAM,cAAc,CAC/B,CAAC,CAAD,CATA,mBAAoB,CAChB,MAAM,kBAAkB,EAExB,KAAK,MAAM,OAAO,SAAS,8BAA8B,EACpD,KAAK,GAAU,QAAQ,IAAI,CAAM,CAAC,CAC3C,CAMA,YAA8C,CAC1C,KAAM,GAAQ,yBAAuB,KAAK,MAAM,KAAM,KAAK,MAAM,IAAI,EAErE,MAAO,qCACH,kBAAC,SAAM,CAAC,MAAM,YAAY,QAAQ,YAAY,QAAS,KAAK,eAAe,gBAAc,EACzF,kBAAC,cAAW,CAAC,QAAc,SAAU,GAAS,CAC1C,KAAK,SAAS,KAAK,MAAM,KAAM,CAAK,CACxC,EAAE,CACN,CACJ,CACJ,CAEA,EAAkB,UAAY,CAC1B,OAAQ,sBACR,UAAW,WACX,UAAW,WACX,MAAO,WACP,UAAW,WACX,KAAM,sBACN,KAAM,WACN,OAAQ,WACR,QAAS,SACT,SAAU,QACd,EAEA,MAAe,iBAAW,CAAM,EAAE,CAAiB,ECzDnD,EAAe,CAAE,kBAAiB,CAAC,C","file":"static/js/src_Components_jsx.dafa3c3f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@mui/styles';\r\n\r\nimport { Button } from '@mui/material';\r\n\r\n// important to make from package and not from some children.\r\n// invalid\r\n// import ConfigGeneric from '@iobroker/adapter-react-v5/ConfigGeneric';\r\n// valid\r\nimport { ConfigGeneric, ColorPicker } from '@iobroker/adapter-react-v5';\r\n\r\nconst styles = () => ({\r\n    table: {\r\n        minWidth: 400\r\n    },\r\n    header: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nclass TelegramComponent extends ConfigGeneric {\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n\r\n        this.props.socket.getState('system.adapter.admin.0.alive')\r\n            .then(result => console.log(result));\r\n    }\r\n\r\n    buttonHandler = () => {\r\n        window.alert('button event');\r\n    };\r\n\r\n    renderItem(/*error, disabled, defaultValue*/) {\r\n        const value = ConfigGeneric.getValue(this.props.data, this.props.attr);\r\n\r\n        return <>\r\n            <Button color=\"secondary\" variant=\"contained\" onClick={this.buttonHandler}>Example Button</Button>\r\n            <ColorPicker value={value} onChange={color => {\r\n                this.onChange(this.props.attr, color);\r\n            }}/>\r\n        </>;\r\n    }\r\n}\r\n\r\nTelegramComponent.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(TelegramComponent);","import TelegramComponent from './TelegramComponent';\r\n\r\nexport default { TelegramComponent };"],"sourceRoot":""}