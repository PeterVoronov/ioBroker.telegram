{"version":3,"sources":["../node_modules/@iobroker/adapter-react-v5/GenericApp.js","../node_modules/@sentry/src/integrations/functiontostring.ts","../node_modules/@sentry/src/integrations/inboundfilters.ts","../node_modules/@sentry/src/syncpromise.ts","../node_modules/@sentry/src/session.ts","../node_modules/@sentry/src/scope.ts","../node_modules/@sentry/src/hub.ts","../node_modules/@sentry/src/exports.ts","../node_modules/@sentry/src/error.ts","../node_modules/@sentry/src/promisebuffer.ts","../node_modules/@sentry/src/envelope.ts","../node_modules/@sentry/src/ratelimit.ts","../node_modules/@sentry/src/transports/base.ts","../node_modules/@sentry/src/instrument.ts","../node_modules/src/eventbuilder.ts","../node_modules/src/helpers.ts","../node_modules/src/integrations/globalhandlers.ts","../node_modules/src/integrations/trycatch.ts","../node_modules/@sentry/src/url.ts","../node_modules/src/integrations/breadcrumbs.ts","../node_modules/src/integrations/linkederrors.ts","../node_modules/src/integrations/httpcontext.ts","../node_modules/src/integrations/dedupe.ts","../node_modules/@sentry/src/dsn.ts","../node_modules/@sentry/src/api.ts","../node_modules/@sentry/src/integration.ts","../node_modules/@sentry/src/baseclient.ts","../node_modules/@sentry/src/clientreport.ts","../node_modules/src/transports/utils.ts","../node_modules/src/client.ts","../node_modules/src/transports/fetch.ts","../node_modules/src/transports/xhr.ts","../node_modules/src/stack-parsers.ts","../node_modules/@sentry/src/sdk.ts","../node_modules/src/sdk.ts","../node_modules/src/index.ts","../node_modules/src/captureconsole.ts","../node_modules/src/debug.ts","../node_modules/src/dedupe.ts","../node_modules/src/extraerrordata.ts","../node_modules/src/offline.ts","../node_modules/src/reportingobserver.ts","../node_modules/@sentry/src/path.ts","../node_modules/src/rewriteframes.ts","../node_modules/src/sessiontiming.ts","../node_modules/src/transaction.ts","../node_modules/@sentry/src/browser.ts","../node_modules/@sentry/src/global.ts","../node_modules/@sentry/src/is.ts","../node_modules/@sentry/src/logger.ts","../node_modules/@sentry/src/misc.ts","../node_modules/@sentry/src/env.ts","../node_modules/@sentry/src/node.ts","../node_modules/@sentry/src/memo.ts","../node_modules/@sentry/src/normalize.ts","../node_modules/@sentry/src/object.ts","../node_modules/@sentry/src/severity.ts","../node_modules/@sentry/src/stacktrace.ts","../node_modules/@sentry/src/string.ts","../node_modules/@sentry/src/supports.ts","../node_modules/@sentry/src/time.ts","../node_modules/localforage/dist/localforage.js","../node_modules/react-dom/client.js"],"names":["cssStyle","window","localStorage","getItem","setItem","GenericApp","props","settings","ConnectionClass","Connection","document","getElementById","style","createElement","setAttribute","innerHTML","head","appendChild","isWeb","io","location","port","SocketClient","e","id","obj","socket","systemLang","common","language","I18n","setLanguage","_systemConfig","expertMode","setState","getExpertMode","message","data","newThemeName","Utils","getThemeName","setThemeName","theme","createTheme","themeName","themeType","getThemeType","onThemeChange","onThemeChanged","onToggleExpertMode","console","warn","JSON","stringify","resizeTimer","clearTimeout","setTimeout","width","getWidth","printPrompt","query","search","replace","args","trim","split","filter","t","forEach","b","parts","length","instance","undefined","parseInt","slice","tmp","pathname","adapterName","instanceId","newReact","Router","getLocation","tab","_localStorage","themeInstance","state","selectedTab","selectedTabNum","errorText","changed","connected","loaded","isConfigurationError","toast","bottomButtons","confirmClose","translations","require","Object","keys","lang","assign","setTranslations","savedNative","encryptedFields","sentryDSN","name","doNotLoadAllObjects","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","objects","scripts","subscribeObject","onSystemConfigChanged","then","getSystemConfig","_secret","secret","getObject","instanceObj","waitPromise","sentryEnabled","diag","version","disableDataReporting","host","sentryStarted","Sentry","init","dsn","release","integrations","SentryIntegrations","Dedupe","sentryInited","uuidObj","uuid","configureScope","scope","setUser","Promise","resolve","onPrepareLoad","encryptedNative","parse","onConnectionReady","onError","err","error","showError","addEventListener","onResize","onReceiveMessage","removeEventListener","palette","mode","sessionStorage","value","result","i","String","fromCharCode","charCodeAt","selectTab","index","attr","encrypt","decrypt","includes","push","_socket","emit","doc","rows","item","webExtendable","map","reject","ip","_host","IPs4","address","family","IPs6","hardware","networkInterfaces","eth","inter","isClose","oldObj","_oldObj","a","hasOwnProperty","onPrepareSave","setObject","globalThis","parent","postMessage","onClose","vertical","horizontal","classes","close","native","isChanged","newNative","getIsChanged","onSave","isYes","attrs","shift","Error","_updateNativeValue","cb","text","renderError","renderToast","renderSaveCloseButtons","SIZES","xs","sm","md","lg","xl","innerWidth","reverse","widthComputed","find","key","$iframeDialog","propTypes","PropTypes","string","func","object","array","bool","originalFunctionToString","context","hub","self","_shouldDropEvent","event","options","eventProcess","addGlobalEventProcessor","internalOptions","clientOptions","DEFAULT_IGNORE_ERRORS","_isSentryError","logger","_isIgnoredError","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreErrors","_getPossibleEventMessages","pattern","denyUrls","url","allowUrls","type","oO","_getLastValidUrl","frames","frame","SyncPromise","_","reason","executor","onfulfilled","onrejected","val","isRejected","onfinally","States","is","cachedHandlers","handler","startingTime","sessionToJSON","session","updateSession","time","duration","status","newScope","callback","user","requestSession","tags","extras","extra","fingerprint","level","span","captureContext","updatedScope","Scope","maxCrumbs","breadcrumb","mergedBreadcrumb","attachment","transactionName","getGlobalEventProcessors","hint","newData","processors","processor","final","client","top","exception","syntheticException","eventId","maxBreadcrumbs","beforeBreadcrumb","finalBreadcrumb","makeMain","oldHub","integration","_oO","customSamplingContext","endSession","closeSession","environment","userAgent","global","currentSession","sentry","method","carrier","setHubOnCarrier","registry","hasHubOnCarrier","getHubFromCarrier","API_VERSION","Hub","getHubFromActiveDomain","activeDomain","registryHubTopStack","_Oo","__SENTRY__","getCurrentHub","logLevel","isReady","limit","buffer","remove","task","add","taskProducer","rejectedSyncPromise","SentryError","drain","timeout","counter","resolvedSyncPromise","capturedSetTimeout","headers","items","envelope","newItem","envelopeItems","envelopeItem","envelopeItemType","encodeUTF8","input","utf8","envHeaders","append","next","textEncoder","itemHeaders","payload","concatBuffers","buffers","offset","merged","ITEM_TYPE_TO_DATA_CATEGORY_MAP","headerDelay","headerDate","DEFAULT_RETRY_AFTER","now","limits","category","disabledUntil","statusCode","rateLimitHeader","retryAfter","categories","updatedRateLimits","delay","retryAfterHeader","parseRetryAfterHeader","makeRequest","rateLimits","send","forEachEnvelopeItem","isRateLimited","envelopeItemDataCategory","filteredEnvelopeItems","filteredEnvelope","envelopeItemTypeToDataCategory","serializeEnvelope","response","updateRateLimits","recordEnvelopeLoss","requestTask","flush","instrument","instrumented","instrumentConsole","instrumentDOM","instrumentXHR","instrumentFetch","instrumentHistory","instrumentError","instrumentUnhandledRejection","handlers","triggerHandlers","originalConsoleMethod","supports","originalFetch","getFetchMethod","getFetchUrl","handlerData","fetchArgs","xhrproto","originalOpen","xhr","xhrInfo","original","readyStateArgs","onreadystatechangeHandler","originalSend","lastHref","to","from","oldOnPopState","historyReplacementFunction","originalHistoryFunction","debounceTimerID","lastCapturedEvent","shouldShortcircuitPreviousDebounce","previous","current","shouldSkipDOMEvent","target","makeDOMEventHandler","globalListener","debounceDuration","globalDOMEventHandler","proto","originalAddEventListener","listener","handlerForType","originalRemoveEventListener","el","_oldOnErrorHandler","msg","column","line","_oldOnUnhandledRejectionHandler","ex","extractMessage","stackParser","isUnhandledRejection","normalize","normalizeDepth","exceptionFromError","stacktrace","popSize","getPopSize","reactMinifiedRegexp","attachStacktrace","eventFromError","errorEvent","eventFromString","domException","eventFromPlainObject","objectException","ignoreOnError","fn","before","wrapper","wrappedArguments","ignoreNextOnError","withScope","captureException","property","sentryWrapped","descriptor","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","installFunc","globalHandlerLog","addInstrumentationHandler","getHubAndOptions","GlobalHandlers","shouldIgnoreOnError","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","eventFromUnknownInput","addMechanismAndCapture","_eventFromRejectionWithPrimitive","groups","ev0sf","colno","filename","lineno","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","eventTarget","_wrapEventTarget","wrap","originalCallback","xmlHttpRequestProps","prop","originalFunction","wrapOptions","eventName","originalEventHandler","wrappedEventHandler","match","fragment","s","_consoleBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","dom","keyAttrs","_innerDomBreadcrumb","severity","status_code","body","parsedFrom","parseUrl","parsedLoc","parsedTo","DEFAULT_KEY","DEFAULT_LIMIT","_handler","parser","linkedErrors","stack","_walkErrorTree","HttpContext","referrer","request","currentEvent","eventProcessor","previousEvent","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","previousException","currentException","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","_getExceptionFromEvent","isValidProtocol","protocol","path","pass","projectId","publicKey","withPassword","str","lastPath","projectMatch","dsnFromComponents","components","validateDsn","requiredComponents","component","getBaseApiEndpoint","_getIngestEndpoint","_encodedAuth","SENTRY_API_VERSION","sdkInfo","tunnelOrOptions","tunnel","dsnLike","dialogOptions","encodedOptions","dsnToString","endpoint","filterDuplicates","currentInstance","existingInstance","integrationsByName","defaultIntegrations","userIntegrations","debugIndex","debugInstance","finalIntegrations","integrationIndex","installedIntegrations","makeDsn","promisedEvent","transport","clientFinished","transportFlushed","setupIntegrations","integrationId","env","createEventEnvelope","addItemToEnvelope","createAttachmentEnvelopeItem","crashed","errored","exceptions","mechanism","shouldUpdateAndSend","ticked","interval","tick","normalizeMaxBreadth","prepared","finalScope","attachments","evt","depth","maxBreadth","normalized","dist","maxValueLength","integrationsArray","finalEvent","sentryError","beforeSend","sampleRate","isTransaction","isInternalException","_ensureBeforeSendRv","beforeSendResult","processedEvent","transactionInfo","source","promise","outcomes","rv","nullErr","discarded_events","timestamp","createEnvelope","cachedFetchImpl","fetchImpl","sandbox","contentWindow","hasSendBeacon","sendBeacon","fetch","SDK_VERSION","globalObject","eventFromException","eventFromMessage","breadcrumbIntegration","sendReport","nativeFetch","requestOptions","createTransport","XHR_READYSTATE_DONE","header","createFrame","isEval","subMatch","extractSafariExtensionDetails","UNKNOWN_FUNCTION","isSafariExtension","isSafariWebExtension","clientClass","TryCatch","Breadcrumbs","LinkedErrors","defaultStackParser","getIntegrationsToSetup","makeFetchTransport","makeXHRTransport","initAndBind","BrowserClient","startSessionTracking","script","getReportDialogEndpoint","injectionPoint","startSessionOnHub","windowIntegrations","_window","CaptureConsole","errorData","normalizedErrorData","contexts","exceptionName","nativeKeys","extraErrorInfo","Offline","_event","_error","events","cacheKey","cacheKeys","ReportingObserver","report","details","plainBody","label","normalizeArray","up","last","allowAboveRoot","splitPath","resolvedPath","resolvedAbsolute","p","arr","start","end","samePartsLength","fromParts","toParts","outputParts","normalizedPath","isPathAbsolute","trailingSlash","normalizePath","dir","root","ext","originalEvent","isWindowsFrame","startsWithSlash","base","currentElem","elem","height","len","nextStr","_htmlElementAsString","out","sepLength","MAX_OUTPUT_LEN","separator","className","keyAttr","keyAttrPairs","keyAttrPair","allowedAttrs","selector","fallbackGlobalObject","singleton","objectToString","wat","isInstanceOf","isBuiltin","isPlainObject","_e","CONSOLE_LEVELS","originalConsole","originalWrappedFunc","wrappedLevels","makeLogger","enabled","consoleSandbox","PREFIX","crypto","getFirstException","firstException","defaultMechanism","currentMechanism","newMechanism","mergedData","major","minor","patch","lines","sourceLine","linesOfContext","maxLines","maybeArray","isBrowserBundle","mod","dynamicRequire","module","moduleName","cwd","memoize","hasWeakSet","inner","unmemoize","visit","maxProperties","maxSize","jsonSize","normalizeToSize","memo","stringified","valueWithToJSON","jsonValue","numAdded","visitable","visitKey","visitValue","stringifyValue","utf8Length","wrapped","markFunctionWrapped","addNonEnumerableProperty","getOwnProperties","serializeEventTarget","newObj","extractedProps","maxLength","includedKeys","serialized","_dropUndefinedKeys","inputValue","memoizationMap","memoVal","returnValue","objectified","severityLevelFromString","validSeverityLevels","max","newLine","lineLength","output","delimiter","regexString","supportsFetch","isChromePackagedApp","hasHistoryApi","getBrowserPerformance","performance","timeOrigin","getNodePerformance","perfHooks","platformPerformance","dateTimestampSource","_browserPerformanceTimeOriginMode","performanceNow","dateNow","threshold","timeOriginIsReliable","navigationStartIsReliable","timeOriginDelta","navigationStartDelta","navigationStart","f","define","exports","n","r","o","u","l","_dereq_","Mutation","scheduleDrain","called","observer","nextTick","element","channel","scriptEl","draining","queue","oldQueue","immediate","INTERNAL","REJECTED","FULFILLED","PENDING","resolver","safelyResolveThenable","onRejected","onFulfilled","unwrap","QueueItem","tryCatch","getThen","thenable","onSuccess","tryToUnwrap","all","iterable","values","resolved","allResolver","resolveFromAll","outValue","race","_typeof","_classCallCheck","Constructor","getIDB","idb","isIndexedDBValid","isSafari","hasFetch","createBlob","properties","Builder","builder","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","toString","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","_checkBlobSupportWithoutCaching","txn","blob","matchedChrome","matchedEdge","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","_advanceReadiness","_rejectReadiness","_getConnection","upgradeNeeded","createDbContext","dbArgs","openreq","db","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","base64","_decodeBlob","encodedBlob","arrayBuff","_isEncodedBlob","_fullyReady","_tryReconnect","forages","forage","createTransaction","retries","tx","_initStorage","initPromises","j","k","transaction","store","req","iterate","iterator","iterationNumber","cursor","blobSupport","removeItem","clear","advanced","dropInstance","currentConfig","isCurrentDb","dbPromise","newVersion","dropObjectPromise","_forage2","dropDBPromise","_forage","asyncStorage","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","encoded1","encoded2","encoded3","encoded4","bytes","bufferToString","base64String","serialize","valueType","marker","fileReader","deserialize","blobType","matcher","localforageSerializer","createDbTable","_initStorage$1","dbInfoPromise","tryExecuteSql","sqlStatement","results","getItem$1","iterate$1","_setItem","retriesLeft","originalValue","sqlError","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","storeName","operations","webSQLStorage","isLocalStorageValid","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","LocalForage","driverTypeKey","driver","driverName","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","getDriverPromise","serializerPromise","drivers","supportedDrivers","setDriverToConfig","extendSelfWithDriver","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","libraryMethodsAndProperties","localforage_js","m"],"mappings":"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","file":"static/js/vendors-node_modules_iobroker_adapter-react-v5_GenericApp_js-node_modules_react-dom_client_js.09ea6523.chunk.js","sourcesContent":["/**\n * Copyright 2018-2022 bluefox <dogafox@gmail.com>\n *\n * MIT License\n *\n **/\nimport React from 'react';\nimport Connection, { PROGRESS } from './Connection';\nimport PropTypes from 'prop-types';\nimport * as Sentry from '@sentry/browser';\nimport * as SentryIntegrations from '@sentry/integrations';\n\nimport DialogError from './Dialogs/Error';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\n\nimport IconClose from '@mui/icons-material/Close';\n\nimport printPrompt from './Prompt';\nimport theme from './Theme';\nimport Loader from './Components/Loader';\nimport Router from './Components/Router';\nimport Utils from './Components/Utils';\nimport SaveCloseButtons from './Components/SaveCloseButtons';\nimport ConfirmDialog from './Dialogs/Confirm';\nimport I18n from './i18n';\n\n// import './index.css';\nconst cssStyle = `\nhtml {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n/* scrollbar */\n::-webkit-scrollbar-track {\n    background-color: #ccc;\n    border-radius: 5px;\n}\n\n::-webkit-scrollbar {\n    width: 5px;\n    height: 5px;\n    background-color: #ccc;\n}\n\n::-webkit-scrollbar-thumb {\n    background-color: #575757;\n    border-radius: 5px;\n}\n\n#root {\n    height: 100%;\n}\n\n.App {\n    height: 100%;\n}\n\n@keyframes glow {\n    from {\n        background-color: initial;\n    }\n    to {\n        background-color: #58c458;\n    }\n}\n`;\n\nif (!window.localStorage) {\n    window.localStorage = {\n        getItem: () => null,\n        setItem: () => null,\n    };\n}\n\n/**\n * @extends {Router<import('./types').GenericAppProps, import('./types').GenericAppState>}\n */\nclass GenericApp extends Router {\n    /**\n     * @param {import('./types').GenericAppProps} props\n     * @param {import('./types').GenericAppSettings | undefined} settings\n     */\n    constructor(props, settings) {\n        const ConnectionClass = props.Connection || settings.Connection || Connection;\n\n        if (!window.document.getElementById('generic-app-iobroker-component')) {\n            const style = window.document.createElement('style');\n            style.setAttribute('id', 'generic-app-iobroker-component');\n            style.innerHTML = cssStyle;\n            window.document.head.appendChild(style);\n        }\n\n        // Remove `!Connection.isWeb() && window.adapterName !== 'material'` when iobroker.socket will support native ws\n        if (!ConnectionClass.isWeb() && window.io && window.location.port === '3000') {\n            try {\n                const io = new window.SocketClient();\n                delete window.io;\n                window.io = io;\n            } catch (e) {\n                // ignore\n            }\n        }\n\n        super(props);\n\n        printPrompt();\n\n        let query = (window.location.search || '').replace(/^\\?/, '').replace(/#.*$/, '');\n        let args = {};\n        query.trim().split('&').filter(t => t.trim()).forEach(b => {\n            const parts = b.split('=');\n            args[parts[0]] = parts.length === 2 ? parts[1] : true;\n            if (args[parts[0]] === 'true') {\n                args[parts[0]] = true;\n            } else if (args[parts[0]] === 'false') {\n                args[parts[0]] = false;\n            }\n        });\n\n        // extract instance from URL\n        this.instance = args.instance !== undefined ? parseInt(args.instance, 10) || 0 : (parseInt(window.location.search.slice(1), 10) || 0);\n        // extract adapter name from URL\n        const tmp = window.location.pathname.split('/');\n        this.adapterName = settings?.adapterName || props.adapterName || window.adapterName || tmp[tmp.length - 2] || 'iot';\n        this.instanceId  = `system.adapter.${this.adapterName}.${this.instance}`;\n        this.newReact = args.newReact === true; // it is admin5\n\n        const location = Router.getLocation();\n        location.tab = location.tab || (window._localStorage || window.localStorage).getItem(`${this.adapterName}-adapter`) || '';\n\n        const themeInstance = this.createTheme();\n\n        this.state = {\n            selectedTab:    (window._localStorage || window.localStorage).getItem(`${this.adapterName}-adapter`) || '',\n            selectedTabNum: -1,\n            native:         {},\n            errorText:      '',\n            changed:        false,\n            connected:      false,\n            loaded:         false,\n            isConfigurationError: '',\n            expertMode:     false,\n            toast:          '',\n            theme:          themeInstance,\n            themeName:      this.getThemeName(themeInstance),\n            themeType:      this.getThemeType(themeInstance),\n            bottomButtons:  (settings && settings.bottomButtons) === false ? false : ((props && props.bottomButtons) === false ? false : true),\n            width:          GenericApp.getWidth(),\n            confirmClose:   false,\n        };\n\n        // init translations\n        const translations = {\n            'en': require('./i18n/en.json'),\n            'de': require('./i18n/de.json'),\n            'ru': require('./i18n/ru.json'),\n            'pt': require('./i18n/pt.json'),\n            'nl': require('./i18n/nl.json'),\n            'fr': require('./i18n/fr.json'),\n            'it': require('./i18n/it.json'),\n            'es': require('./i18n/es.json'),\n            'pl': require('./i18n/pl.json'),\n            'zh-cn': require('./i18n/zh-cn.json'),\n        };\n\n        // merge together\n        if (settings && settings.translations) {\n            Object.keys(settings.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], settings.translations[lang]));\n        } else if (props.translations) {\n            Object.keys(props.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], props.translations[lang]));\n        }\n\n        I18n.setTranslations(translations);\n\n        this.savedNative = {}; // to detect if the config changed\n\n        this.encryptedFields = props.encryptedFields || settings?.encryptedFields || [];\n\n        this.sentryDSN = (settings && settings.sentryDSN) || props.sentryDSN;\n\n        this.socket = new ConnectionClass({\n            ...(props?.socket || settings?.socket),\n            name: this.adapterName,\n            doNotLoadAllObjects: settings?.doNotLoadAllObjects,\n            onProgress: progress => {\n                if (progress === PROGRESS.CONNECTING) {\n                    this.setState({ connected: false });\n                } else if (progress === PROGRESS.READY) {\n                    this.setState({ connected: true });\n                } else {\n                    this.setState({ connected: true });\n                }\n            },\n            onReady: (objects, scripts) => {\n                I18n.setLanguage(this.socket.systemLang);\n\n                // subscribe because of language and expert mode\n                this.socket.subscribeObject('system.config', this.onSystemConfigChanged)\n                    .then(() => this.getSystemConfig())\n                    .then(obj => {\n                        this._secret = (typeof obj !== 'undefined' && obj.native && obj.native.secret) || 'Zgfr56gFe87jJOM';\n                        this._systemConfig = obj?.common || {};\n                        return this.socket.getObject(this.instanceId);\n                    })\n                    .then(instanceObj => {\n                        let waitPromise;\n\n                        const sentryEnabled =\n                            this._systemConfig.diag !== 'none' &&\n                            instanceObj &&\n                            instanceObj.common &&\n                            instanceObj.common.name &&\n                            instanceObj.common.version &&\n                            !instanceObj.common.disableDataReporting &&\n                            window.location.host !== 'localhost:3000';\n\n                        // activate sentry plugin\n                        if (!this.sentryStarted && this.sentryDSN && sentryEnabled) {\n                            this.sentryStarted = true;\n\n                            Sentry.init({\n                                dsn: this.sentryDSN,\n                                release: `iobroker.${instanceObj.common.name}@${instanceObj.common.version}`,\n                                integrations: [\n                                    new SentryIntegrations.Dedupe()\n                                ]\n                            });\n                        }\n\n                        // read UUID and init sentry with it.\n                        // for backward compatibility it will be processed separately from above logic: some adapters could still have this.sentryDSN as undefined\n                        if (!this.sentryInited && sentryEnabled) {\n                            this.sentryInited = true;\n\n                            waitPromise = this.socket.getObject('system.meta.uuid')\n                                .then(uuidObj => {\n                                    if (uuidObj && uuidObj.native && uuidObj.native.uuid) {\n                                        Sentry.configureScope(scope =>\n                                            scope.setUser({id: uuidObj.native.uuid}));\n                                    }\n                                });\n                        }\n\n                        waitPromise = waitPromise || Promise.resolve();\n\n                        waitPromise\n                            .then(() => {\n                                if (instanceObj) {\n                                    this.common = instanceObj?.common;\n                                    this.onPrepareLoad(instanceObj.native, instanceObj.encryptedNative); // decode all secrets\n                                    this.savedNative = JSON.parse(JSON.stringify(instanceObj.native));\n                                    this.setState({ native: instanceObj.native, loaded: true, expertMode: this.getExpertMode() }, () =>\n                                        this.onConnectionReady && this.onConnectionReady());\n                                } else {\n                                    console.warn('Cannot load instance settings');\n                                    this.setState({ native: {}, loaded: true, expertMode: this.getExpertMode()},\n                                        () => this.onConnectionReady && this.onConnectionReady());\n                                }\n                            });\n                    });\n            },\n            onError: err => {\n                console.error(err);\n                this.showError(err);\n            }\n        });\n    }\n\n    onSystemConfigChanged = (id, obj) => {\n        if (obj && id === 'system.config') {\n            if (this.socket.systemLang !== obj?.common.language) {\n                this.socket.systemLang = obj?.common.language || 'en';\n                I18n.setLanguage(this.socket.systemLang);\n            }\n\n            if (this._systemConfig.expertMode !== !!obj?.common?.expertMode) {\n                this._systemConfig = obj?.common || {};\n                this.setState({ expertMode: this.getExpertMode() });\n            } else {\n                this._systemConfig = obj?.common || {};\n            }\n        }\n    }\n\n    /**\n     * Called immediately after a component is mounted. Setting state here will trigger re-rendering.\n     */\n    componentDidMount() {\n        window.addEventListener('resize', this.onResize, true);\n        window.addEventListener('message', this.onReceiveMessage, false);\n        super.componentDidMount();\n    }\n\n    /**\n     * Called immediately before a component is destroyed.\n     */\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize, true);\n        window.removeEventListener('message', this.onReceiveMessage, false);\n        super.componentWillUnmount();\n    }\n\n    onReceiveMessage = message => {\n        if (message?.data) {\n            if (message.data === 'updateTheme') {\n                const newThemeName = Utils.getThemeName()\n                Utils.setThemeName(Utils.getThemeName());\n\n                const theme = this.createTheme(newThemeName);\n\n                this.setState({\n                    theme,\n                    themeName: this.getThemeName(theme),\n                    themeType: this.getThemeType(theme)\n                }, () => {\n                    this.props.onThemeChange && this.props.onThemeChange(newThemeName);\n                    this.onThemeChanged && this.onThemeChanged(newThemeName);\n                });\n            } else if (message.data === 'updateExpertMode') {\n                this.onToggleExpertMode && this.onToggleExpertMode(this.getExpertMode());\n            } else {\n                console.warn('Received unknown message: ' + JSON.stringify(message.data));\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    onResize = () => {\n        this.resizeTimer && clearTimeout(this.resizeTimer);\n        this.resizeTimer = setTimeout(() => {\n            this.resizeTimer = null;\n            this.setState({ width: GenericApp.getWidth() });\n        }, 200);\n    };\n\n    /**\n     * Gets the width depending on the window inner width.\n     * @returns {import('./types').Width}\n     */\n    static getWidth() {\n        /**\n         * innerWidth |xs      sm      md      lg      xl\n         *            |-------|-------|-------|-------|------>\n         * width      |  xs   |  sm   |  md   |  lg   |  xl\n         */\n\n        const SIZES = {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920\n        };\n        const width = window.innerWidth;\n        const keys = Object.keys(SIZES).reverse();\n        const widthComputed = keys.find(key => width >= SIZES[key]);\n\n        return widthComputed || 'xs';\n    }\n\n    /**\n     * Get a theme\n     * @param {string} name Theme name\n     * @returns {import('./types').Theme}\n     */\n    createTheme(name = '') {\n        return theme(Utils.getThemeName(name));\n    }\n\n    /**\n     * Get the theme name\n     * @param {import('./types').Theme} theme Theme\n     * @returns {string} Theme name\n     */\n    getThemeName(theme) {\n        return theme.name;\n    }\n\n    /**\n     * Get the theme type\n     * @param {import('./types').Theme} theme Theme\n     * @returns {string} Theme type\n     */\n    getThemeType(theme) {\n        return theme.palette.mode;\n    }\n\n    /**\n     * Changes the current theme\n     */\n    toggleTheme() {\n        const themeName = this.state.themeName;\n\n        // dark => blue => colored => light => dark\n        const newThemeName = themeName === 'dark' ? 'blue' :\n            (themeName === 'blue' ? 'colored' :\n                (themeName === 'colored' ? 'light' : 'dark'));\n\n        Utils.setThemeName(newThemeName);\n\n        const theme = this.createTheme(newThemeName);\n\n        this.setState({\n            theme,\n            themeName: this.getThemeName(theme),\n            themeType: this.getThemeType(theme)\n        }, () => {\n            this.props.onThemeChange && this.props.onThemeChange(newThemeName);\n            this.onThemeChanged && this.onThemeChanged(newThemeName);\n        });\n    }\n\n    /**\n     * Gets the system configuration.\n     * @returns {Promise<ioBroker.OtherObject>}\n     */\n    getSystemConfig() {\n        return this.socket.getSystemConfig();\n    }\n\n    /**\n     * Get current expert mode\n     * @returns {boolean}\n     */\n    getExpertMode() {\n        return window.sessionStorage.getItem('App.expertMode') === 'true' || !!this._systemConfig.expertMode;\n    }\n\n    /**\n     * Gets called when the socket.io connection is ready.\n     * You can overload this function to execute own commands.\n     */\n    onConnectionReady() {\n    }\n\n    /**\n     * Encrypts a string.\n     * @param {string} value\n     * @returns {string}\n     */\n    encrypt(value) {\n        let result = '';\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n        }\n        return result;\n    }\n\n    /**\n     * Decrypts a string.\n     * @param {string} value\n     * @returns {string}\n     */\n    decrypt(value) {\n        let result = '';\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n        }\n        return result;\n    }\n\n    /**\n     * Gets called when the navigation hash changes.\n     * You may override this if needed.\n     */\n    onHashChanged() {\n        const location = Router.getLocation();\n        if (location.tab !== this.state.selectedTab) {\n            this.selectTab(location.tab);\n        }\n    }\n\n    /**\n     * Selects the given tab.\n     * @param {string} tab\n     * @param {number} [index]\n     */\n    selectTab(tab, index) {\n        (window._localStorage || window.localStorage).setItem(this.adapterName + '-adapter', tab);\n        this.setState({ selectedTab: tab, selectedTabNum: index })\n    }\n\n    /**\n     * Gets called before the settings are saved.\n     * You may override this if needed.\n     * @param {Record<string, any>} settings\n     */\n    onPrepareSave(settings) {\n        // here you can encode values\n        this.encryptedFields && this.encryptedFields.forEach(attr => {\n            if (settings[attr]) {\n                settings[attr] = this.encrypt(settings[attr]);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Gets called after the settings are loaded.\n     * You may override this if needed.\n     * @param {Record<string, any>} settings\n     * @param {string[]} encryptedNative optional list of fields to be decrypted\n     */\n    onPrepareLoad(settings, encryptedNative) {\n        // here you can encode values\n        this.encryptedFields && this.encryptedFields.forEach(attr => {\n            if (settings[attr]) {\n                settings[attr] = this.decrypt(settings[attr]);\n            }\n        });\n        encryptedNative && encryptedNative.forEach(attr => {\n            this.encryptedFields = this.encryptedFields || [];\n            !this.encryptedFields.includes(attr) && this.encryptedFields.push(attr);\n            if (settings[attr]) {\n                settings[attr] = this.decrypt(settings[attr]);\n            }\n        });\n    }\n\n    /**\n     * Gets the extendable instances.\n     * @returns {Promise<any[]>}\n     */\n    getExtendableInstances() {\n        return new Promise(resolve => {\n            this.socket._socket.emit('getObjectView', 'system', 'instance', null, (err, doc) => {\n                if (err) {\n                    resolve([]);\n                } else {\n                    resolve(doc.rows\n                        .filter(item => item.value.common.webExtendable)\n                        .map(item => item.value)\n                    );\n                }\n            });\n        });\n    }\n\n    /**\n     * Gets the IP addresses of the given host.\n     * @param {string} host\n     */\n    getIpAddresses(host) {\n        return new Promise((resolve, reject) => {\n            this.socket._socket.emit('getHostByIp', host || this.common.host, (ip, _host) => {\n                const IPs4 = [{ name: `[IPv4] 0.0.0.0 - ${I18n.t('ra_Listen on all IPs')}`, address: '0.0.0.0', family: 'ipv4' }];\n                const IPs6 = [{ name: '[IPv6] ::', address: '::', family: 'ipv6' }];\n                if (_host) {\n                    host = _host;\n                    if (host.native.hardware && host.native.hardware.networkInterfaces) {\n                        Object.keys(host.native.hardware.networkInterfaces).forEach(eth =>\n                            host.native.hardware.networkInterfaces[eth].forEach(inter => {\n                                if (inter.family !== 'IPv6') {\n                                    IPs4.push({ name: `[${inter.family}] ${inter.address} - ${eth}`, address: inter.address, family: 'ipv4' });\n                                } else {\n                                    IPs6.push({ name: `[${inter.family}] ${inter.address} - ${eth}`, address: inter.address, family: 'ipv6' });\n                                }\n                            }));\n                    }\n                    IPs6.forEach(ip => IPs4.push(ip));\n                }\n                resolve(IPs4);\n            });\n        });\n    }\n\n    /**\n     * Saves the settings to the server.\n     * @param {boolean} isClose True if the user is closing the dialog.\n     */\n    onSave(isClose) {\n        let oldObj;\n        if (this.state.isConfigurationError) {\n            this.setState({ errorText: this.state.isConfigurationError });\n            return;\n        }\n\n        this.socket.getObject(this.instanceId)\n            .then(_oldObj => {\n                oldObj = _oldObj || {};\n\n                for (const a in this.state.native) {\n                    if (this.state.native.hasOwnProperty(a)) {\n                        if (this.state.native[a] === null) {\n                            oldObj.native[a] = null;\n                        } else\n                        if (this.state.native[a] !== undefined) {\n                            oldObj.native[a] = JSON.parse(JSON.stringify(this.state.native[a]));\n                        } else {\n                            delete oldObj.native[a];\n                        }\n                    }\n                }\n\n                if (this.state.common) {\n                    for (const b in this.state.common) {\n                        if (this.state.common[b] === null) {\n                            oldObj.common[b] = null;\n                        } else\n                        if (this.state.common[b] !== undefined) {\n                            oldObj.common[b] = JSON.parse(JSON.stringify(this.state.common[b]));\n                        } else {\n                            delete oldObj.common[b];\n                        }\n                    }\n                }\n\n                if (this.onPrepareSave(oldObj.native) !== false) {\n                    return this.socket.setObject(this.instanceId, oldObj);\n                } else {\n                    return Promise.reject('Invalid configuration');\n                }\n            })\n            .then(() => {\n                this.savedNative = oldObj.native;\n                globalThis.changed = false;\n                try {\n                    window.parent.postMessage('nochange', '*');\n                } catch (e) {\n                    // ignore\n                }\n\n                this.setState({ changed: false });\n                isClose && GenericApp.onClose();\n            })\n            .catch(e => {\n                console.error(`Cannot save configuration: ${e}`);\n            });\n    }\n\n    /**\n     * Renders the toast.\n     * @returns {JSX.Element | null} The JSX element.\n     */\n    renderToast() {\n        if (!this.state.toast) {\n            return null;\n        }\n\n        return <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            open={true}\n            autoHideDuration={6000}\n            onClose={() => this.setState({ toast: '' })}\n            ContentProps={{ 'aria-describedby': 'message-id' }}\n            message={<span id=\"message-id\">{this.state.toast}</span>}\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={this.props.classes.close}\n                    onClick={() => this.setState({ toast: '' })}\n                    size=\"large\">\n                    <IconClose />\n                </IconButton>,\n            ]}\n        />;\n    }\n\n    /**\n     * Closes the dialog.\n     * @private\n     */\n    static onClose() {\n        if (typeof window.parent !== 'undefined' && window.parent) {\n            try {\n                if (window.parent.$iframeDialog && typeof window.parent.$iframeDialog.close === 'function') {\n                    window.parent.$iframeDialog.close();\n                } else {\n                    window.parent.postMessage('close', '*');\n                }\n            } catch (e) {\n                window.parent.postMessage('close', '*');\n            }\n        }\n    }\n\n    /**\n     * Renders the error dialog.\n     * @returns {JSX.Element | null} The JSX element.\n     */\n    renderError() {\n        if (!this.state.errorText) {\n            return null;\n        } else {\n            return <DialogError text={this.state.errorText} onClose={() => this.setState({ errorText: '' })}/>;\n        }\n    }\n\n    /**\n     * Checks if the configuration has changed.\n     * @param {Record<string, any>} [native] the new state\n     */\n    getIsChanged(native) {\n        native = native || this.state.native;\n        const isChanged =  JSON.stringify(native) !== JSON.stringify(this.savedNative);\n\n        globalThis.changed = isChanged;\n\n        return isChanged;\n    }\n\n    /**\n     * Gets called when loading the configuration.\n     * @param {Record<string, any>} newNative The new configuration object.\n     */\n    onLoadConfig(newNative) {\n        if (JSON.stringify(newNative) !== JSON.stringify(this.state.native)) {\n            this.setState({ native: newNative, changed: this.getIsChanged(newNative) })\n        }\n    }\n\n    /**\n     * Sets the configuration error.\n     * @param {string} errorText\n     */\n    setConfigurationError(errorText) {\n        if (this.state.isConfigurationError !== errorText) {\n            this.setState({ isConfigurationError: errorText });\n        }\n    }\n\n    /**\n     * Renders the save and close buttons.\n     * @returns {JSX.Element | undefined} The JSX element.\n     */\n    renderSaveCloseButtons() {\n        if (!this.state.confirmClose && !this.state.bottomButtons) {\n            return null;\n        }\n\n        return <>\n            {this.state.bottomButtons ? <SaveCloseButtons\n                theme={this.state.theme}\n                newReact={this.newReact}\n                noTextOnButtons={this.state.width === 'xs' || this.state.width === 'sm' || this.state.width === 'md'}\n                changed={this.state.changed}\n                onSave={isClose => this.onSave(isClose)}\n                onClose={() => {\n                    if (this.state.changed) {\n                        this.setState({ confirmClose: true });\n                    } else {\n                        GenericApp.onClose();\n                    }\n                }}\n            /> : null}\n            {this.state.confirmClose ? <ConfirmDialog\n                title={I18n.t('ra_Please confirm')}\n                text={I18n.t('ra_Some data are not stored. Discard?')}\n                ok={I18n.t('ra_Discard')}\n                cancel={I18n.t('ra_Cancel')}\n                onClose={isYes =>\n                    this.setState({ confirmClose: false }, () =>\n                        isYes && GenericApp.onClose())}\n            /> : null}\n        </>;\n    }\n\n    /**\n     * @private\n     * @param {Record<string, any>} obj\n     * @param {any} attrs\n     * @param {any} value\n     * @returns {boolean | undefined}\n     */\n    _updateNativeValue(obj, attrs, value) {\n        if (typeof attrs !== 'object') {\n            attrs = attrs.split('.');\n        }\n        const attr = attrs.shift();\n        if (!attrs.length) {\n            if (value && typeof value === 'object') {\n                if (JSON.stringify(obj[attr]) !== JSON.stringify(value)) {\n                    obj[attr] = value;\n                    return true;\n                }\n            } else if (obj[attr] !== value) {\n                obj[attr] = value;\n                return true;\n            } else {\n                return false;\n            }\n\n        } else {\n            obj[attr] = obj[attr] || {};\n            if (typeof obj[attr] !== 'object') {\n                throw new Error(`attribute ${attr} is no object, but ${typeof obj[attr]}`);\n            }\n            return this._updateNativeValue(obj[attr], attrs, value);\n        }\n    }\n\n    /**\n     * Update the native value\n     * @param {string} attr The attribute name with dots as delimiter.\n     * @param {any} value The new value.\n     * @param {(() => void)} [cb] Callback which will be called upon completion.\n     */\n    updateNativeValue(attr, value, cb) {\n        const native = JSON.parse(JSON.stringify(this.state.native));\n        if (this._updateNativeValue(native, attr, value)) {\n            const changed = this.getIsChanged(native);\n\n            if (changed !== this.state.changed) {\n                try {\n                    window.parent.postMessage(changed ? 'change' : 'nochange', '*');\n                } catch (e) {\n                    // ignore\n                }\n            }\n\n            this.setState({ native, changed }, cb);\n        }\n    }\n\n    /**\n     * Set the error text to be shown.\n     * @param {string | JSX.Element} text\n     */\n    showError(text) {\n        this.setState({ errorText: text });\n    }\n\n    /**\n     * Sets the toast to be shown.\n     * @param {string} toast\n     */\n    showToast(toast) {\n        this.setState({ toast });\n    }\n\n    /**\n     * Renders this component.\n     * @returns {JSX.Element} The JSX element.\n     */\n    render() {\n        if (!this.state.loaded) {\n            return <Loader theme={this.state.themeType}/>;\n        }\n\n        return <div className=\"App\">\n            {this.renderError()}\n            {this.renderToast()}\n            {this.renderSaveCloseButtons()}\n        </div>;\n    }\n}\n\nGenericApp.propTypes = {\n    adapterName: PropTypes.string, // (optional) name of adapter\n    onThemeChange: PropTypes.func, // (optional) called by theme change\n    socket: PropTypes.object, // (optional) socket information (host, port)\n    encryptedFields: PropTypes.array, // (optional) list of native attributes, that must be encrypted\n    bottomButtons: PropTypes.bool, // If the bottom buttons (Save/Close) must be shown\n    Connection: PropTypes.object, // If the bottom buttons (Save/Close) must be shown\n};\n\nexport default GenericApp;\n","import { Integration, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n      const context = getOriginalFunction(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n","import { Event, EventProcessor, Hub, Integration, StackFrame } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreInternal: boolean;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (processor: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const eventProcess: EventProcessor = (event: Event) => {\n      const hub = getCurrentHub();\n      if (hub) {\n        const self = hub.getIntegration(InboundFilters);\n        if (self) {\n          const client = hub.getClient();\n          const clientOptions = client ? client.getOptions() : {};\n          const options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n}\n\n/** JSDoc */\nexport function _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nexport function _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message =>\n    ignoreErrors.some(pattern => isMatchingPattern(message, pattern)),\n  );\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : denyUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : allowUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      __DEBUG_BUILD__ && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    __DEBUG_BUILD__ && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n","/* eslint-disable max-lines */\nimport {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport {\n  arrayify,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isPlainObject,\n  isThenable,\n  logger,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { updateSession } from './session';\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /** Transaction Name */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext as <T>(scope: T) => T)(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getAttachments(): Attachment[] {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint: EventHint = {}): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n\n        __DEBUG_BUILD__ &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalObject,\n  getGlobalSingleton,\n  isNodeEnv,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope?: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    hub?: Hub;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Hack to prevent bundlers from breaking our usage of the domain package in the cross-platform Hub package */\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      domain?: { [key: string]: any };\n    } & {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      __DEBUG_BUILD__ && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    const layer = this.getStackTop();\n    const scope = layer && layer.scope;\n    const session = scope && scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const global = getGlobalObject<{ navigator?: { userAgent?: string } }>();\n    const { userAgent } = global.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        updateSession(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n  public shouldSendDefaultPii(): boolean {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  private _withClient(callback: (client: Client, scope: Scope | undefined) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    __DEBUG_BUILD__ && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const sentry = getMainCarrier().__SENTRY__;\n    const activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n","import {\n  Breadcrumb,\n  CaptureContext,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Primitive,\n  Severity,\n  SeverityLevel,\n  TransactionContext,\n  User,\n} from '@sentry/types';\n\nimport { getCurrentHub, Hub } from './hub';\nimport { Scope } from './scope';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function captureException(exception: any, captureContext?: CaptureContext): ReturnType<Hub['captureException']> {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): ReturnType<Hub['captureMessage']> {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event: Event, hint?: EventHint): ReturnType<Hub['captureEvent']> {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb: Breadcrumb): ReturnType<Hub['addBreadcrumb']> {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback: (scope: Scope) => void): ReturnType<Hub['withScope']> {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): ReturnType<Hub['startTransaction']> {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n","import type { ConsoleLevel } from './logger';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n","import { SentryError } from './error';\nimport { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          // eslint-disable-next-line no-plusplus\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import {\n  Attachment,\n  AttachmentItem,\n  DataCategory,\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => void,\n): void {\n  const envelopeItems = envelope[1];\n  envelopeItems.forEach((envelopeItem: EnvelopeItem) => {\n    const envelopeItemType = envelopeItem[0].type;\n    callback(envelopeItem, envelopeItemType);\n  });\n}\n\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item as typeof items[number];\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n    append(typeof payload === 'string' || payload instanceof Uint8Array ? payload : JSON.stringify(payload));\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n","import { TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nexport function disabledUntil(limits: RateLimits, category: string): number {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, category: string, now: number = Date.now()): boolean {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import {\n  Envelope,\n  EnvelopeItem,\n  EventDropReason,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport {\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  PromiseBuffer,\n  RateLimits,\n  resolvedSyncPromise,\n  SentryError,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void> = makePromiseBuffer(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE),\n): Transport {\n  let rateLimits: RateLimits = {};\n\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (_, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    const requestTask = (): PromiseLike<void> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            __DEBUG_BUILD__ && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n        },\n        error => {\n          __DEBUG_BUILD__ && logger.error('Failed while sending event:', error);\n          recordEnvelopeLoss('network_error');\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          __DEBUG_BUILD__ && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { getGlobalObject } from './global';\nimport { isInstanceOf, isString } from './is';\nimport { CONSOLE_LEVELS, logger } from './logger';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\n\nconst global = getGlobalObject<Window>();\n\nexport type InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      __DEBUG_BUILD__ && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      __DEBUG_BUILD__ &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in global)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: string): void {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function (originalConsoleMethod: () => any): Function {\n      return function (...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(global, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\ntype XHRSendInput = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\n/** JSDoc */\ninterface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n    body?: XHRSendInput;\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs: any[] = []): string {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs: any[] = []): string {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      const xhrInfo: SentryWrappedXMLHttpRequest['__sentry_xhr__'] = (xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function (): void {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = global.onpopstate;\n  global.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (global as any)[target] && (global as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount -= 1;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler: OnErrorEventHandler = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg: any, url: any, line: any, column: any, error: any): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n","import { getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, Severity, SeverityLevel, StackFrame, StackParser } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception as DOMError) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  input: string,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n","import { captureException, withScope } from '@sentry/core';\nimport { DsnLike, Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Hub, Integration, Primitive, StackParser } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport { BrowserClient } from '../client';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\n/** JSDoc */\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n  private _installFunc: Record<GlobalHandlersIntegrationsOptionKeys, (() => void) | undefined> = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n    const options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (const key in options) {\n      const installFunc = this._installFunc[key as GlobalHandlersIntegrationsOptionKeys];\n      if (installFunc && options[key as GlobalHandlersIntegrationsOptionKeys]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key as GlobalHandlersIntegrationsOptionKeys] = undefined;\n      }\n    }\n  }\n}\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler(): void {\n  addInstrumentationHandler(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data: { msg: any; url: any; line: any; column: any; error: any }) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      const event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler(): void {\n  addInstrumentationHandler(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e: any) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      const event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  __DEBUG_BUILD__ && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub: Hub, error: EventHint['originalException'], event: Event, type: string): void {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions(): [Hub, StackParser, boolean | undefined] {\n  const hub = getCurrentHub();\n  const client = hub.getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getGlobalObject, getOriginalFunction } from '@sentry/utils';\n\nimport { wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\n/** JSDoc */\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /** JSDoc */\n  private readonly _options: TryCatchOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<TryCatchOptions>) {\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    const global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    const eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n}\n\n/** JSDoc */\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const global = getGlobalObject() as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = global[target] && global[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: () => void): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable max-lines */\nimport { getCurrentHub } from '@sentry/core';\nimport { Integration } from '@sentry/types';\nimport {\n  addInstrumentationHandler,\n  getGlobalObject,\n  htmlTreeAsString,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\n/** JSDoc */\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom: boolean | { serializeAttribute: string | string[] };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\nexport const BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = BREADCRUMB_INTEGRATION_ID;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n  public readonly options: Readonly<BreadcrumbsOptions>;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<BreadcrumbsOptions>) {\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _domBreadcrumb(dom: BreadcrumbsOptions['dom']): (handlerData: { [key: string]: any }) => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function _innerDomBreadcrumb(handlerData: { [key: string]: any }): void {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target as Node, keyAttrs)\n        : htmlTreeAsString(handlerData.event as unknown as Node, keyAttrs);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _consoleBreadcrumb(handlerData: { [key: string]: any }): void {\n  const breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _xhrBreadcrumb(handlerData: { [key: string]: any }): void {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _fetchBreadcrumb(handlerData: { [key: string]: any }): void {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _historyBreadcrumb(handlerData: { [key: string]: any }): void {\n  const global = getGlobalObject<Window>();\n  let from = handlerData.from;\n  let to = handlerData.to;\n  const parsedLoc = parseUrl(global.location.href);\n  let parsedFrom = parseUrl(from);\n  const parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration, StackParser } from '@sentry/types';\nimport { isInstanceOf } from '@sentry/utils';\n\nimport { BrowserClient } from '../client';\nimport { exceptionFromError } from '../eventbuilder';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\ninterface LinkedErrorsOptions {\n  key: string;\n  limit: number;\n}\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: LinkedErrorsOptions['key'];\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: LinkedErrorsOptions['limit'];\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: Partial<LinkedErrorsOptions> = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    const client = getCurrentHub().getClient<BrowserClient>();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n}\n\n/**\n * @inheritDoc\n */\nexport function _handler(\n  parser: StackParser,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): Event | null {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  const linkedErrors = _walkErrorTree(parser, limit, hint.originalException as ExtendedError, key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nexport function _walkErrorTree(\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  stack: Exception[] = [],\n): Exception[] {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  const exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** HttpContext integration collects information about HTTP request headers */\nexport class HttpContext implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'HttpContext';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = HttpContext.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (global.location && global.location.href);\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n","import { Event, EventProcessor, Exception, Hub, Integration, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nexport class Dedupe implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Dedupe';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Dedupe.id;\n\n  /**\n   * @inheritDoc\n   */\n  private _previousEvent?: Event;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const eventProcessor: EventProcessor = currentEvent => {\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            __DEBUG_BUILD__ && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { SentryError } from './error';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nexport function dsnFromString(str: string): DsnComponents {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean | void {\n  if (!__DEBUG_BUILD__) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport function makeDsn(from: DsnLike): DsnComponents {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n","import { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, Options } from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend`. It therefore\n  // has to run after all other integrations, so that the changes of all event processors will be reflected in the\n  // printed values. For lack of a more elegant way to guarantee that, we therefore locate it and, assuming it exists,\n  // pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = finalIntegrations.findIndex(integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    integrationIndex[integration.name] = integration;\n\n    if (installedIntegrations.indexOf(integration.name) === -1) {\n      integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n      installedIntegrations.push(integration.name);\n      __DEBUG_BUILD__ && logger.log(`Integration installed: ${integration.name}`);\n    }\n  });\n\n  return integrationIndex;\n}\n","/* eslint-disable max-lines */\nimport { Scope, updateSession } from '@sentry/hub';\nimport {\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  Event,\n  EventDropReason,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  Outcome,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  Transport,\n} from '@sentry/types';\nimport {\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  dateTimestampInSeconds,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  normalize,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n  SentryError,\n  SyncPromise,\n  truncate,\n  uuid4,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport { IntegrationIndex, setupIntegrations } from './integration';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex = {};\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean = false;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number = 0;\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number } = {};\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      __DEBUG_BUILD__ && logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      __DEBUG_BUILD__ && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      __DEBUG_BUILD__ && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!this._isEnabled()) {\n      __DEBUG_BUILD__ && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      __DEBUG_BUILD__ && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n  public setupIntegrations(): void {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      __DEBUG_BUILD__ && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (const attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    if (this._dsn) {\n      const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory): void {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      __DEBUG_BUILD__ && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = this.getOptions();\n    const prepared: Event = {\n      ...event,\n      event_id: event.event_id || hint.event_id || uuid4(),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = resolvedSyncPromise<Event | null>(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // Collect attachments from the hint and scope\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n  protected _normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n    if (!event) {\n      return null;\n    }\n\n    const normalized: Event = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth, maxBreadth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth, maxBreadth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth, maxBreadth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth, maxBreadth),\n      }),\n    };\n\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace && normalized.contexts) {\n      normalized.contexts.trace = event.contexts.trace;\n\n      // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n      if (event.contexts.trace.data) {\n        normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n      }\n    }\n\n    // event.spans[].data may contain circular/dangerous data so we need to normalize it\n    if (event.spans) {\n      normalized.spans = event.spans.map(span => {\n        // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n        if (span.data) {\n          span.data = normalize(span.data, depth, maxBreadth);\n        }\n        return span;\n      });\n    }\n\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n  protected _applyClientOptions(event: Event): void {\n    const options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    const exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    const request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param event The event that will be filled with all integrations.\n   */\n  protected _applyIntegrationsMetadata(event: Event): void {\n    const integrationsArray = Object.keys(this._integrations);\n    if (integrationsArray.length > 0) {\n      event.sdk = event.sdk || {};\n      event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationsArray];\n    }\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (__DEBUG_BUILD__) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.', 'log'));\n    }\n\n    const isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', event.type || 'error');\n          throw new SentryError('An event processor returned null, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        const beforeSendResult = beforeSend(prepared, hint);\n        return _ensureBeforeSendRv(beforeSendResult);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', event.type || 'error');\n          throw new SentryError('`beforeSend` returned `null`, will not send event.', 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n            changes: [\n              ...transactionInfo.changes,\n              {\n                source,\n                // use the same timestamp as the processed event.\n                timestamp: processedEvent.timestamp as number,\n                propagations: transactionInfo.propagations,\n              },\n            ],\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason as Error,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing += 1;\n    void promise.then(\n      value => {\n        this._numProcessing -= 1;\n        return value;\n      },\n      reason => {\n        this._numProcessing -= 1;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): void {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        __DEBUG_BUILD__ && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      __DEBUG_BUILD__ && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` is of expected type.\n */\nfunction _ensureBeforeSendRv(rv: PromiseLike<Event | null> | Event | null): PromiseLike<Event | null> | Event | null {\n  const nullErr = '`beforeSend` method has to return `null` or a valid event.';\n  if (isThenable(rv)) {\n    return rv.then(\n      event => {\n        if (!(isPlainObject(event) || event === null)) {\n          throw new SentryError(nullErr);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`beforeSend rejected with ${e}`);\n      },\n    );\n  } else if (!(isPlainObject(rv) || rv === null)) {\n    throw new SentryError(nullErr);\n  }\n  return rv;\n}\n","import { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import { getGlobalObject, isNativeFetch, logger, supportsFetch } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\nlet cachedFetchImpl: FetchImpl;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(global.fetch)) {\n    return (cachedFetchImpl = global.fetch.bind(global));\n  }\n\n  const document = global.document;\n  let fetchImpl = global.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      __DEBUG_BUILD__ &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(global));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/**\n * Sends sdk client report using sendBeacon or fetch as a fallback if available\n *\n * @param url report endpoint\n * @param body report payload\n */\nexport function sendReport(url: string, body: string | Uint8Array): void {\n  const isRealNavigator = Object.prototype.toString.call(global && global.navigator) === '[object Navigator]';\n  const hasSendBeacon = isRealNavigator && typeof global.navigator.sendBeacon === 'function';\n\n  if (hasSendBeacon) {\n    // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n    const sendBeacon = global.navigator.sendBeacon.bind(global.navigator);\n    sendBeacon(url, body);\n  } else if (supportsFetch()) {\n    const fetch = getNativeFetchImplementation();\n    fetch(url, {\n      body,\n      method: 'POST',\n      credentials: 'omit',\n      keepalive: true,\n    }).then(null, error => {\n      __DEBUG_BUILD__ && logger.error(error);\n    });\n  }\n}\n","import { BaseClient, getCurrentHub, getEnvelopeEndpointWithUrlEncodedAuth, Scope, SDK_VERSION } from '@sentry/core';\nimport { ClientOptions, Event, EventHint, Options, Severity, SeverityLevel } from '@sentry/types';\nimport {\n  createClientReportEnvelope,\n  dsnToString,\n  getEventDescription,\n  getGlobalObject,\n  logger,\n  serializeEnvelope,\n} from '@sentry/utils';\n\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { Breadcrumbs } from './integrations';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs';\nimport { BrowserTransportOptions } from './transports/types';\nimport { sendReport } from './transports/utils';\n\nconst globalObject = getGlobalObject<Window>();\n\nexport interface BaseBrowserOptions {\n  /**\n   * A pattern for error URLs which should exclusively be sent to Sentry.\n   * This is the opposite of {@link Options.denyUrls}.\n   * By default, all errors will be sent.\n   */\n  allowUrls?: Array<string | RegExp>;\n\n  /**\n   * A pattern for error URLs which should not be sent to Sentry.\n   * To allow certain errors instead, use {@link Options.allowUrls}.\n   * By default, all errors will be sent.\n   */\n  denyUrls?: Array<string | RegExp>;\n}\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport interface BrowserOptions extends Options<BrowserTransportOptions>, BaseBrowserOptions {}\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport interface BrowserClientOptions extends ClientOptions<BrowserTransportOptions>, BaseBrowserOptions {}\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && globalObject.document) {\n      globalObject.document.addEventListener('visibilitychange', () => {\n        if (globalObject.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint?: EventHint): void {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    const breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) as Breadcrumbs | null;\n    if (\n      breadcrumbIntegration &&\n      // We check for definedness of `options`, even though it is not strictly necessary, because that access to\n      // `.sentry` below does not throw, in case users provided their own integration with id \"Breadcrumbs\" that does\n      // not have an`options` field\n      breadcrumbIntegration.options &&\n      breadcrumbIntegration.options.sentry\n    ) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      __DEBUG_BUILD__ && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      __DEBUG_BUILD__ && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    __DEBUG_BUILD__ && logger.log('Sending outcomes:', outcomes);\n\n    const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, this._options);\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    try {\n      sendReport(url, serializeEnvelope(envelope));\n    } catch (e) {\n      __DEBUG_BUILD__ && logger.error(e);\n    }\n  }\n}\n","import { createTransport } from '@sentry/core';\nimport { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\n\nimport { BrowserTransportOptions } from './types';\nimport { FetchImpl, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch), a request with `keepalive: true`\n      //   and a content length of > 64 kibibytes returns a network error. We will therefore only activate the flag when\n      //   we're below that limit.\n      keepalive: request.body.length <= 65536,\n      ...options.fetchOptions,\n    };\n\n    return nativeFetch(options.url, requestOptions).then(response => ({\n      statusCode: response.status,\n      headers: {\n        'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n        'retry-after': response.headers.get('Retry-After'),\n      },\n    }));\n  }\n\n  return createTransport(options, makeRequest);\n}\n","import { createTransport } from '@sentry/core';\nimport { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\nimport { BrowserTransportOptions } from './types';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nexport function makeXHRTransport(options: BrowserTransportOptions): Transport {\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = (): void => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n","import { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    // All browser frames are considered in_app\n    in_app: true,\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.*\\).*?|.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|safari-extension|safari-web-extension|capacitor)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","import { getCurrentHub } from '@sentry/hub';\nimport { Client, ClientOptions } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends ClientOptions> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends ClientOptions>(\n  clientClass: ClientClass<F, O>,\n  options: O,\n): void {\n  if (options.debug === true) {\n    if (__DEBUG_BUILD__) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n","import {\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  Hub,\n  initAndBind,\n  Integrations as CoreIntegrations,\n} from '@sentry/core';\nimport {\n  addInstrumentationHandler,\n  getGlobalObject,\n  logger,\n  resolvedSyncPromise,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport { BrowserClient, BrowserClientOptions, BrowserOptions } from './client';\nimport { ReportDialogOptions, wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, Dedupe, GlobalHandlers, HttpContext, LinkedErrors, TryCatch } from './integrations';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    const window = getGlobalObject<Window>();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}, hub: Hub = getCurrentHub()): void {\n  // doesn't work without a document (React Native)\n  const global = getGlobalObject<Window>();\n  if (!global.document) {\n    __DEBUG_BUILD__ && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    __DEBUG_BUILD__ && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = global.document.head || global.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    __DEBUG_BUILD__ && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport function flush(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  __DEBUG_BUILD__ && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport function close(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  __DEBUG_BUILD__ && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\nfunction startSessionOnHub(hub: Hub): void {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  const window = getGlobalObject<Window>();\n  const document = window.document;\n\n  if (typeof document === 'undefined') {\n    __DEBUG_BUILD__ &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n","export * from './exports';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport * as BrowserIntegrations from './integrations';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\nconst _window = getGlobalObject<Window>();\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n}\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ...CoreIntegrations,\n  ...BrowserIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations };\n","import { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { CONSOLE_LEVELS, fill, getGlobalObject, safeJoin, severityLevelFromString } from '@sentry/utils';\n\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Send Console API calls as Sentry Events */\nexport class CaptureConsole implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'CaptureConsole';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = CaptureConsole.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _levels: readonly string[] = CONSOLE_LEVELS;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { levels?: string[] } = {}) {\n    if (options.levels) {\n      this._levels = options.levels;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!('console' in global)) {\n      return;\n    }\n\n    this._levels.forEach((level: string) => {\n      if (!(level in global.console)) {\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      fill(global.console, level, (originalConsoleMethod: () => any) => (...args: any[]): void => {\n        const hub = getCurrentHub();\n\n        if (hub.getIntegration(CaptureConsole)) {\n          hub.withScope(scope => {\n            scope.setLevel(severityLevelFromString(level));\n            scope.setExtra('arguments', args);\n            scope.addEventProcessor(event => {\n              event.logger = 'console';\n              return event;\n            });\n\n            let message = safeJoin(args, ' ');\n            if (level === 'assert') {\n              if (args[0] === false) {\n                message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n                scope.setExtra('arguments', args.slice(1));\n                hub.captureMessage(message);\n              }\n            } else if (level === 'error' && args[0] instanceof Error) {\n              hub.captureException(args[0]);\n            } else {\n              hub.captureMessage(message);\n            }\n          });\n        }\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(global.console, args);\n        }\n      });\n    });\n  }\n}\n","import { Event, EventHint, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { consoleSandbox } from '@sentry/utils';\n\ninterface DebugOptions {\n  /** Controls whether console output created by this integration should be stringified. Default: `false` */\n  stringify?: boolean;\n  /** Controls whether a debugger should be launched before an event is sent. Default: `false` */\n  debugger?: boolean;\n}\n\n/**\n * Integration to debug sent Sentry events.\n * This integration should not be used in production\n */\nexport class Debug implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Debug';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Debug.id;\n\n  private readonly _options: DebugOptions;\n\n  public constructor(options?: DebugOptions) {\n    this._options = {\n      debugger: false,\n      stringify: false,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((event: Event, hint: EventHint) => {\n      const self = getCurrentHub().getIntegration(Debug);\n      if (self) {\n        if (self._options.debugger) {\n          // eslint-disable-next-line no-debugger\n          debugger;\n        }\n\n        /* eslint-disable no-console */\n        consoleSandbox(() => {\n          if (self._options.stringify) {\n            console.log(JSON.stringify(event, null, 2));\n            if (Object.keys(hint).length) {\n              console.log(JSON.stringify(hint, null, 2));\n            }\n          } else {\n            console.log(event);\n            if (Object.keys(hint).length) {\n              console.log(hint);\n            }\n          }\n        });\n        /* eslint-enable no-console */\n      }\n      return event;\n    });\n  }\n}\n","import { Event, EventProcessor, Exception, Hub, Integration, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nexport class Dedupe implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Dedupe';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Dedupe.id;\n\n  /**\n   * @inheritDoc\n   */\n  private _previousEvent?: Event;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const eventProcessor: EventProcessor = currentEvent => {\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            __DEBUG_BUILD__ && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n}\n\n/** JSDoc */\nexport function _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import { Contexts, Event, EventHint, EventProcessor, ExtendedError, Hub, Integration } from '@sentry/types';\nimport { addNonEnumerableProperty, isError, isPlainObject, logger, normalize } from '@sentry/utils';\n\n/** JSDoc */\ninterface ExtraErrorDataOptions {\n  depth?: number;\n}\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class ExtraErrorData implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'ExtraErrorData';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = ExtraErrorData.id;\n\n  /** JSDoc */\n  private readonly _options: ExtraErrorDataOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: ExtraErrorDataOptions) {\n    this._options = {\n      depth: 3,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((event: Event, hint: EventHint) => {\n      const self = getCurrentHub().getIntegration(ExtraErrorData);\n      if (!self) {\n        return event;\n      }\n      return self.enhanceEventWithErrorData(event, hint);\n    });\n  }\n\n  /**\n   * Attaches extracted information from the Error object to extra field in the Event\n   */\n  public enhanceEventWithErrorData(event: Event, hint: EventHint = {}): Event {\n    if (!hint.originalException || !isError(hint.originalException)) {\n      return event;\n    }\n    const exceptionName = (hint.originalException as ExtendedError).name || hint.originalException.constructor.name;\n\n    const errorData = this._extractErrorData(hint.originalException as ExtendedError);\n\n    if (errorData) {\n      const contexts: Contexts = {\n        ...event.contexts,\n      };\n\n      const normalizedErrorData = normalize(errorData, this._options.depth);\n\n      if (isPlainObject(normalizedErrorData)) {\n        // We mark the error data as \"already normalized\" here, because we don't want other normalization procedures to\n        // potentially truncate the data we just already normalized, with a certain depth setting.\n        addNonEnumerableProperty(normalizedErrorData, '__sentry_skip_normalization__', true);\n        contexts[exceptionName] = normalizedErrorData;\n      }\n\n      return {\n        ...event,\n        contexts,\n      };\n    }\n\n    return event;\n  }\n\n  /**\n   * Extract extra information from the Error object\n   */\n  private _extractErrorData(error: ExtendedError): Record<string, unknown> | null {\n    // We are trying to enhance already existing event, so no harm done if it won't succeed\n    try {\n      const nativeKeys = [\n        'name',\n        'message',\n        'stack',\n        'line',\n        'column',\n        'fileName',\n        'lineNumber',\n        'columnNumber',\n        'toJSON',\n      ];\n\n      const extraErrorInfo: Record<string, unknown> = {};\n\n      // We want only enumerable properties, thus `getOwnPropertyNames` is redundant here, as we filter keys anyway.\n      for (const key of Object.keys(error)) {\n        if (nativeKeys.indexOf(key) !== -1) {\n          continue;\n        }\n        const value = error[key];\n        extraErrorInfo[key] = isError(value) ? value.toString() : value;\n      }\n\n      // Check if someone attached `toJSON` method to grab even more properties (eg. axios is doing that)\n      if (typeof error.toJSON === 'function') {\n        const serializedError = error.toJSON() as Record<string, unknown>;\n\n        for (const key of Object.keys(serializedError)) {\n          const value = serializedError[key];\n          extraErrorInfo[key] = isError(value) ? value.toString() : value;\n        }\n      }\n\n      return extraErrorInfo;\n    } catch (oO) {\n      __DEBUG_BUILD__ && logger.error('Unable to extract extra data from the Error object:', oO);\n    }\n\n    return null;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, logger, normalize, uuid4 } from '@sentry/utils';\nimport localForage from 'localforage';\n\ntype LocalForage = {\n  setItem<T>(key: string, value: T, callback?: (err: any, value: T) => void): Promise<T>;\n  iterate<T, U>(\n    iteratee: (value: T, key: string, iterationNumber: number) => U,\n    callback?: (err: any, result: U) => void,\n  ): Promise<U>;\n  removeItem(key: string, callback?: (err: any) => void): Promise<void>;\n  length(): Promise<number>;\n};\n\nexport type Item = { key: string; value: Event };\n\n/**\n * cache offline errors and send when connected\n */\nexport class Offline implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Offline';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = Offline.id;\n\n  /**\n   * the global instance\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public global: any;\n\n  /**\n   * the current hub instance\n   */\n  public hub?: Hub;\n\n  /**\n   * maximum number of events to store while offline\n   */\n  public maxStoredEvents: number;\n\n  /**\n   * event cache\n   */\n  public offlineEventStore: LocalForage;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { maxStoredEvents?: number } = {}) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.global = getGlobalObject<any>();\n    this.maxStoredEvents = options.maxStoredEvents || 30; // set a reasonable default\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this.offlineEventStore = localForage.createInstance({\n      name: 'sentry/offlineEventStore',\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this.hub = getCurrentHub();\n\n    if ('addEventListener' in this.global) {\n      this.global.addEventListener('online', () => {\n        void this._sendEvents().catch(() => {\n          __DEBUG_BUILD__ && logger.warn('could not send cached events');\n        });\n      });\n    }\n\n    const eventProcessor: EventProcessor = event => {\n      if (this.hub && this.hub.getIntegration(Offline)) {\n        // cache if we are positively offline\n        if ('navigator' in this.global && 'onLine' in this.global.navigator && !this.global.navigator.onLine) {\n          __DEBUG_BUILD__ && logger.log('Event dropped due to being a offline - caching instead');\n\n          void this._cacheEvent(event)\n            .then((_event: Event): Promise<void> => this._enforceMaxEvents())\n            .catch((_error): void => {\n              __DEBUG_BUILD__ && logger.warn('could not cache event while offline');\n            });\n\n          // return null on success or failure, because being offline will still result in an error\n          return null;\n        }\n      }\n\n      return event;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n\n    // if online now, send any events stored in a previous offline session\n    if ('navigator' in this.global && 'onLine' in this.global.navigator && this.global.navigator.onLine) {\n      void this._sendEvents().catch(() => {\n        __DEBUG_BUILD__ && logger.warn('could not send cached events');\n      });\n    }\n  }\n\n  /**\n   * cache an event to send later\n   * @param event an event\n   */\n  private async _cacheEvent(event: Event): Promise<Event> {\n    return this.offlineEventStore.setItem<Event>(uuid4(), normalize(event));\n  }\n\n  /**\n   * purge excess events if necessary\n   */\n  private async _enforceMaxEvents(): Promise<void> {\n    const events: Array<{ event: Event; cacheKey: string }> = [];\n\n    return this.offlineEventStore\n      .iterate<Event, void>((event: Event, cacheKey: string, _index: number): void => {\n        // aggregate events\n        events.push({ cacheKey, event });\n      })\n      .then(\n        (): Promise<void> =>\n          // this promise resolves when the iteration is finished\n          this._purgeEvents(\n            // purge all events past maxStoredEvents in reverse chronological order\n            events\n              .sort((a, b) => (b.event.timestamp || 0) - (a.event.timestamp || 0))\n              .slice(this.maxStoredEvents < events.length ? this.maxStoredEvents : events.length)\n              .map(event => event.cacheKey),\n          ),\n      )\n      .catch((_error): void => {\n        __DEBUG_BUILD__ && logger.warn('could not enforce max events');\n      });\n  }\n\n  /**\n   * purge event from cache\n   */\n  private async _purgeEvent(cacheKey: string): Promise<void> {\n    return this.offlineEventStore.removeItem(cacheKey);\n  }\n\n  /**\n   * purge events from cache\n   */\n  private async _purgeEvents(cacheKeys: string[]): Promise<void> {\n    // trail with .then to ensure the return type as void and not void|void[]\n    return Promise.all(cacheKeys.map(cacheKey => this._purgeEvent(cacheKey))).then();\n  }\n\n  /**\n   * send all events\n   */\n  private async _sendEvents(): Promise<void> {\n    return this.offlineEventStore.iterate<Event, void>((event: Event, cacheKey: string, _index: number): void => {\n      if (this.hub) {\n        this.hub.captureEvent(event);\n\n        void this._purgeEvent(cacheKey).catch((_error): void => {\n          __DEBUG_BUILD__ && logger.warn('could not purge event from cache');\n        });\n      } else {\n        __DEBUG_BUILD__ && logger.warn('no hub found - could not send cached event');\n      }\n    });\n  }\n}\n","import { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, supportsReportingObserver } from '@sentry/utils';\n\ninterface Report {\n  [key: string]: unknown;\n  type: ReportTypes;\n  url: string;\n  body?: ReportBody;\n}\n\ntype ReportTypes = 'crash' | 'deprecation' | 'intervention';\n\ntype ReportBody = CrashReportBody | DeprecationReportBody | InterventionReportBody;\n\ninterface CrashReportBody {\n  [key: string]: unknown;\n  crashId: string;\n  reason?: string;\n}\n\ninterface DeprecationReportBody {\n  [key: string]: unknown;\n  id: string;\n  anticipatedRemoval?: Date;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\ninterface InterventionReportBody {\n  [key: string]: unknown;\n  id: string;\n  message: string;\n  sourceFile?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n}\n\n/** Reporting API integration - https://w3c.github.io/reporting/ */\nexport class ReportingObserver implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'ReportingObserver';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = ReportingObserver.id;\n\n  /**\n   * Returns current hub.\n   */\n  private _getCurrentHub?: () => Hub;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(\n    private readonly _options: {\n      types?: ReportTypes[];\n    } = {\n      types: ['crash', 'deprecation', 'intervention'],\n    },\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!supportsReportingObserver()) {\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    const observer = new (getGlobalObject<any>().ReportingObserver)(this.handler.bind(this), {\n      buffered: true,\n      types: this._options.types,\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    observer.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public handler(reports: Report[]): void {\n    const hub = this._getCurrentHub && this._getCurrentHub();\n    if (!hub || !hub.getIntegration(ReportingObserver)) {\n      return;\n    }\n    for (const report of reports) {\n      hub.withScope(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inheirted\n          const plainBody: {\n            [key: string]: unknown;\n          } = {};\n\n          // eslint-disable-next-line guard-for-in\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === 'crash') {\n            const body = report.body as CrashReportBody;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body as DeprecationReportBody | InterventionReportBody;\n            details = body.message || details;\n          }\n        }\n\n        hub.captureMessage(`${label}: ${details}`);\n      });\n    }\n  }\n}\n","// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://raw.githubusercontent.com/calvinmetcalf/rollup-plugin-node-builtins/master/src/es6/path.js\n\n/** JSDoc */\nfunction normalizeArray(parts: string[], allowAboveRoot?: boolean): string[] {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      // eslint-disable-next-line no-plusplus\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      // eslint-disable-next-line no-plusplus\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    // eslint-disable-next-line no-plusplus\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^/]+?|)(\\.[^./]*|))(?:[/]*)$/;\n/** JSDoc */\nfunction splitPath(filename: string): string[] {\n  const parts = splitPathRe.exec(filename);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nexport function resolve(...args: string[]): string {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr: string[]): string[] {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nexport function relative(from: string, to: string): string {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nexport function normalizePath(path: string): string {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.substr(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nexport function isAbsolute(path: string): boolean {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nexport function join(...args: string[]): string {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nexport function dirname(path: string): string {\n  const result = splitPath(path);\n  const root = result[0];\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nexport function basename(path: string, ext?: string): string {\n  let f = splitPath(path)[2];\n  if (ext && f.substr(ext.length * -1) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n","import { Event, EventProcessor, Hub, Integration, StackFrame, Stacktrace } from '@sentry/types';\nimport { basename, relative } from '@sentry/utils';\n\ntype StackFrameIteratee = (frame: StackFrame) => StackFrame;\n\n/** Rewrite event frames paths */\nexport class RewriteFrames implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'RewriteFrames';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = RewriteFrames.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _root?: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _prefix: string = 'app:///';\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { root?: string; prefix?: string; iteratee?: StackFrameIteratee } = {}) {\n    if (options.root) {\n      this._root = options.root;\n    }\n    if (options.prefix) {\n      this._prefix = options.prefix;\n    }\n    if (options.iteratee) {\n      this._iteratee = options.iteratee;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(RewriteFrames);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  public process(originalEvent: Event): Event {\n    let processedEvent = originalEvent;\n\n    if (originalEvent.exception && Array.isArray(originalEvent.exception.values)) {\n      processedEvent = this._processExceptionsEvent(processedEvent);\n    }\n\n    return processedEvent;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _iteratee: StackFrameIteratee = (frame: StackFrame) => {\n    if (!frame.filename) {\n      return frame;\n    }\n    // Check if the frame filename begins with `/` or a Windows-style prefix such as `C:\\`\n    const isWindowsFrame = /^[A-Z]:\\\\/.test(frame.filename);\n    const startsWithSlash = /^\\//.test(frame.filename);\n    if (isWindowsFrame || startsWithSlash) {\n      const filename = isWindowsFrame\n        ? frame.filename\n            .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n            .replace(/\\\\/g, '/') // replace all `\\\\` instances with `/`\n        : frame.filename;\n      const base = this._root ? relative(this._root, filename) : basename(filename);\n      frame.filename = `${this._prefix}${base}`;\n    }\n    return frame;\n  };\n\n  /** JSDoc */\n  private _processExceptionsEvent(event: Event): Event {\n    try {\n      return {\n        ...event,\n        exception: {\n          ...event.exception,\n          // The check for this is performed inside `process` call itself, safe to skip here\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          values: event.exception!.values!.map(value => ({\n            ...value,\n            ...(value.stacktrace && { stacktrace: this._processStacktrace(value.stacktrace) }),\n          })),\n        },\n      };\n    } catch (_oO) {\n      return event;\n    }\n  }\n\n  /** JSDoc */\n  private _processStacktrace(stacktrace?: Stacktrace): Stacktrace {\n    return {\n      ...stacktrace,\n      frames: stacktrace && stacktrace.frames && stacktrace.frames.map(f => this._iteratee(f)),\n    };\n  }\n}\n","import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\n\n/** This function adds duration since Sentry was initialized till the time event was sent */\nexport class SessionTiming implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'SessionTiming';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = SessionTiming.id;\n\n  /** Exact time Client was initialized expressed in milliseconds since Unix Epoch. */\n  protected readonly _startTime: number = Date.now();\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(SessionTiming);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public process(event: Event): Event {\n    const now = Date.now();\n\n    return {\n      ...event,\n      extra: {\n        ...event.extra,\n        ['session:start']: this._startTime,\n        ['session:duration']: now - this._startTime,\n        ['session:end']: now,\n      },\n    };\n  }\n}\n","import { Event, EventProcessor, Hub, Integration, StackFrame } from '@sentry/types';\n\n/** Add node transaction to the event */\nexport class Transaction implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Transaction';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Transaction.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(Transaction);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public process(event: Event): Event {\n    const frames = this._getFramesFromEvent(event);\n\n    // use for loop so we don't have to reverse whole frames array\n    for (let i = frames.length - 1; i >= 0; i--) {\n      const frame = frames[i];\n\n      if (frame.in_app === true) {\n        event.transaction = this._getTransaction(frame);\n        break;\n      }\n    }\n\n    return event;\n  }\n\n  /** JSDoc */\n  private _getFramesFromEvent(event: Event): StackFrame[] {\n    const exception = event.exception && event.exception.values && event.exception.values[0];\n    return (exception && exception.stacktrace && exception.stacktrace.frames) || [];\n  }\n\n  /** JSDoc */\n  private _getTransaction(frame: StackFrame): string {\n    return frame.module || frame.function ? `${frame.module || '?'}/${frame.function || '?'}` : '<unknown>';\n  }\n}\n","import { getGlobalObject } from './global';\nimport { isString } from './is';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown, keyAttrs?: string[]): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  const global = getGlobalObject<Window>();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  const global = getGlobalObject<Window>();\n  if (global.document && global.document.querySelector) {\n    return global.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Integration } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n      ? window // eslint-disable-line no-restricted-globals\n      : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) as T & SentryGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof SentryGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const global = (obj || getGlobalObject()) as SentryGlobal;\n  const __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport { PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n","import { WrappedFunction } from '@sentry/types';\n\nimport { getGlobalObject, getGlobalSingleton } from './global';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] as const;\nexport type ConsoleLevel = typeof CONSOLE_LEVELS[number];\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<typeof CONSOLE_LEVELS[number], LoggerMethod>;\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  const global = getGlobalObject<Window>();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  const originalConsole = global.console as Console & Record<string, unknown>;\n  const wrappedLevels: Partial<LoggerConsoleMethods> = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] as WrappedFunction).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] as LoggerConsoleMethods[typeof level];\n      originalConsole[level] = originalWrappedFunc as Console[typeof level];\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level as typeof CONSOLE_LEVELS[number]];\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if (__DEBUG_BUILD__) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger: Logger;\nif (__DEBUG_BUILD__) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { logger };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { getGlobalObject } from './global';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/** Many browser now support native uuid v4 generation */\ninterface CryptoWithRandomUUID extends Crypto {\n  randomUUID?(): string;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = (global.crypto || global.msCrypto) as CryptoWithRandomUUID;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","import { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent } from './is';\nimport { memoBuilder, MemoFunc } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = +Infinity, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, depth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n// TODO remove this in v7 (this means the method will no longer be exported, under any name)\nexport { visit as walk };\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) as Prototype).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: { [key: string]: unknown }, name: string, value: unknown): void {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V extends unknown>(\n  value: V,\n):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","/* eslint-disable deprecation/deprecation */\nimport { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n","import { StackFrame, StackLineParser, StackLineParserFn, StackParser } from '@sentry/types';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n\n    for (const line of stack.split('\\n').slice(skipFirst)) {\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = line.replace(/\\(error: (.*)\\)/, '$1');\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: StackFrame[]): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].function || '';\n  const lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\ntype GetModuleFn = (filename: string | undefined) => string | undefined;\n\n// eslint-disable-next-line complexity\nfunction node(getModule?: GetModuleFn): StackLineParserFn {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line: string) => {\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    const lineMatch = line.match(FULL_MATCH);\n    if (!lineMatch) {\n      return undefined;\n    }\n\n    let object: string | undefined;\n    let method: string | undefined;\n    let functionName: string | undefined;\n    let typeName: string | undefined;\n    let methodName: string | undefined;\n\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n\n      let methodStart = functionName.lastIndexOf('.');\n      if (functionName[methodStart - 1] === '.') {\n        // eslint-disable-next-line no-plusplus\n        methodStart--;\n      }\n\n      if (methodStart > 0) {\n        object = functionName.substr(0, methodStart);\n        method = functionName.substr(methodStart + 1);\n        const objectEnd = object.indexOf('.Module');\n        if (objectEnd > 0) {\n          functionName = functionName.substr(objectEnd + 1);\n          object = object.substr(0, objectEnd);\n        }\n      }\n      typeName = undefined;\n    }\n\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n\n    if (method === '<anonymous>') {\n      methodName = undefined;\n      functionName = undefined;\n    }\n\n    if (functionName === undefined) {\n      methodName = methodName || '<anonymous>';\n      functionName = typeName ? `${typeName}.${methodName}` : methodName;\n    }\n\n    const filename = lineMatch[2]?.startsWith('file://') ? lineMatch[2].substr(7) : lineMatch[2];\n    const isNative = lineMatch[5] === 'native';\n    const isInternal =\n      isNative || (filename && !filename.startsWith('/') && !filename.startsWith('.') && filename.indexOf(':\\\\') !== 1);\n\n    // in_app is all that's not an internal Node function or a module within node_modules\n    // note that isNative appears to return true even for node core libraries\n    // see https://github.com/getsentry/raven-node/issues/176\n    const in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n    return {\n      filename,\n      module: getModule?.(filename),\n      function: functionName,\n      lineno: parseInt(lineMatch[3], 10) || undefined,\n      colno: parseInt(lineMatch[4], 10) || undefined,\n      in_app,\n    };\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n","import { isRegExp, isString } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nexport function escapeStringForRegex(regexString: string): string {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n","import { getGlobalObject } from './global';\nimport { logger } from './logger';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const global = getGlobalObject<Window>();\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      __DEBUG_BUILD__ &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (global as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","import { getGlobalObject } from './global';\nimport { dynamicRequire, isNodeEnv } from './node';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds: () => number = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds: () => number = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"sourceRoot":""}