import{i as d,A as _}from"./ActionTelegram__mf_v__runtimeInit__mf_v__-DxlLd_3A.js";const{loadShare:m}=d,{initPromise:f}=_,g=f.then(n=>m("@iobroker/adapter-react-v5",{customShareInfo:{shareConfig:{singleton:!0,strictVersion:!1,requiredVersion:"*"}}})),h=await g.then(n=>n());var p=h,s={},c={};Object.defineProperty(c,"__esModule",{value:!0});let v=class{};c.default=v;var u={};Object.defineProperty(u,"__esModule",{value:!0});(function(n){var e=s.__importDefault||function(a){return a&&a.__esModule?a:{default:a}};Object.defineProperty(n,"__esModule",{value:!0}),n.IGenericBlock=n.GenericBlock=void 0;var t=c;Object.defineProperty(n,"GenericBlock",{enumerable:!0,get:function(){return e(t).default}});var r=u;Object.defineProperty(n,"IGenericBlock",{enumerable:!0,get:function(){return r.IGenericBlock}})})(s);const o=window.GenericBlock||s.GenericBlock;class i extends o{cachePromises;constructor(e){super(e,i.getStaticData()),this.cachePromises={}}static compile(e,t){let r=(e.text||"").replace(/"/g,'\\"');return r?`// Telegram ${r||""}
		const subActionVar${e._id} = "${(r||"").replace(/"/g,'\\"')}"${o.getReplacesInText(t)};
		_sendToFrontEnd(${e._id}, {text: subActionVar${e._id}});
		sendTo("${e.instance}", "send", ${e.user&&e.user!=="_"?`{user: "${(e.user||"").replace(/"/g,'\\"')}", text: subActionVar${e._id}}`:`subActionVar${e._id}`});`:`// no text defined
_sendToFrontEnd(${e._id}, {text: 'No text defined'});`}renderDebug(e){return`${p.I18n.t("Sent:")} ${e.data.text}`}onValueChanged(e,t){t==="instance"&&this._setUsers(e)}_setUsers(e){if(e=e||this.state.settings.instance||"telegram.0",this.cachePromises[e]=this.cachePromises[e]||this.props.socket.getState(`${e}.communicate.users`),!this.state.settings._id)return this.setState({inputs:[{nameRender:"renderSelect",adapter:"telegram",frontText:"Instance:",defaultValue:"telegram.0",attr:"instance"},{nameRender:"renderSelect",attr:"user",options:[{title:"telegram.0",value:"telegram.0"}],defaultValue:"",frontText:"User:"},{nameRender:"renderModalInput",attr:"text",defaultValue:"Hallo",nameBlock:"",frontText:"Text:"}]},()=>super.onTagChange());this.cachePromises[e].then(t=>{let r;try{const a=t!=null&&t.val?JSON.parse(t.val):null;r=a?Object.keys(a).map(l=>({title:a[l].userName||a[l].firstName,value:l})):[],r.unshift({title:"all",value:""})}catch{r=[{title:"all",value:""}]}this.setState({inputs:[{nameRender:"renderInstance",adapter:"telegram",frontText:"Instance:",defaultValue:"telegram.0",attr:"instance"},{nameRender:"renderSelect",attr:"user",options:r,defaultValue:"_",frontText:"User:"},{nameRender:"renderModalInput",attr:"text",defaultValue:"Hallo",nameBlock:"",frontText:"Text:"}]},()=>super.onTagChange())})}onTagChange(e){this._setUsers()}static getStaticData(){return{acceptedBy:"actions",name:"Telegram",id:"ActionTelegram",adapter:"telegram",title:"Sends message via telegram",helpDialog:"You can use %s in the text to display current trigger value or %id to display the triggered object ID"}}getData(){return i.getStaticData()}}export{i as default};
